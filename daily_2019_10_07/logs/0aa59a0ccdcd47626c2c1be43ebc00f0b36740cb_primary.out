cset: moving following pidspec: 11203
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351500945 seconds)
loading group "string"... done (took 0.548474212 seconds)
loading group "linalg"... done (took 7.048952849 seconds)
loading group "parallel"... done (took 0.152356923 seconds)
loading group "find"... done (took 1.093496405 seconds)
loading group "tuple"... done (took 1.818256141 seconds)
loading group "dates"... done (took 1.175335244 seconds)
loading group "micro"... done (took 0.21156159 seconds)
loading group "io"... done (took 0.918307909 seconds)
loading group "scalar"... done (took 36.202890747 seconds)
loading group "sparse"... done (took 11.13396987 seconds)
loading group "broadcast"... done (took 0.908318053 seconds)
loading group "union"... done (took 11.638415302 seconds)
loading group "simd"... done (took 4.116482405 seconds)
loading group "random"... done (took 8.688746638 seconds)
loading group "problem"... done (took 1.868927623 seconds)
loading group "array"... done (took 19.812064733 seconds)
loading group "misc"... done (took 1.630355782 seconds)
loading group "sort"... done (took 3.129456029 seconds)
loading group "collection"... done (took 16.252855873 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481906078 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122695842 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114240352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117487409 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145172666 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114199896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123366136 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083933074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847996437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146732916 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117680344 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412019768 seconds)
done (took 5.185025695 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173033693 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083071181 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081485512 seconds)
  done (took 1.340429916 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065221782 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120850639 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066437436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066483335 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066454835 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066289029 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065710343 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065748598 seconds)
  done (took 1.694467321 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073337971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068479187 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069551507 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068214981 seconds)
  done (took 1.458899033 seconds)
done (took 5.921849636 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768740105 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20158723 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183805496 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401660415 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128920827 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154113145 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639293938 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344812379 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183699945 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081198309 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104932522 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317934789 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107275044 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645154309 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073983965 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090666085 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140404935 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437028534 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067244344 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081805109 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089047555 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128135747 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085403587 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074616292 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144564379 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0677111 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130083517 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080592737 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066356957 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20753747 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17222679 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655308352 seconds)
  done (took 10.271767235 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096487467 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097515933 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067921302 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136217988 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096036785 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070031669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07067102 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067170004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086823288 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127701806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088656501 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101455312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065128102 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068382167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08446992 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203946827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080403471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080852338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06994525 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075259058 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118166472 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077848946 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077712987 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077585451 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128907601 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179390395 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095561272 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096805998 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067125568 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080413746 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114829779 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125314234 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06516936 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066320253 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124187771 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094194239 seconds)
  done (took 4.636278599 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.291418172 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140443962 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090907459 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131732338 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064778009 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106933611 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065507325 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080663702 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202536621 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.354868275 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083909263 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576371483 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11037847 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103656221 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067319777 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068091861 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066592368 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.359639524 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108534866 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104680976 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081356003 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070252719 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068757406 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350201857 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068038783 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064092626 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068272972 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058033852 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124224732 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068273186 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92986167 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124416191 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066638003 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100223758 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090232635 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168973339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218845564 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142435585 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068479452 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064537666 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063458734 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150273195 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070072955 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066072006 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083103062 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102915982 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112617019 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066125175 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066766732 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162266802 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065226455 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078799176 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.014975771 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151882314 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076216364 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063768636 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246811493 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085512888 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068932668 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064354729 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194793891 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138028037 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069286956 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066108048 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067392917 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068744655 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349137769 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066257348 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.986372065 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067768101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076811529 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068735613 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068885517 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075041711 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072003842 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084827534 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065955146 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074980413 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065897066 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065664508 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066694475 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083758407 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35653405 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066038878 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068040714 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064597141 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085467634 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100243955 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065783436 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064596648 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099827839 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.170527079 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06604842 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106298585 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066384257 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084079048 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064168078 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11194464 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070295929 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066248868 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111374084 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067971054 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096774515 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069784895 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099297667 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081071988 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068696892 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398407437 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065117128 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06488757 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06809597 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06522091 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066841176 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065376902 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079362954 seconds)
  done (took 21.284609167 seconds)
done (took 38.663942173 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268568398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074995019 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075692842 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075224919 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074972645 seconds)
  done (took 1.829768863 seconds)
done (took 3.078082949 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119158169 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098735259 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064190552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094766623 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063795244 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099779109 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098493169 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08063544 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099488307 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064065501 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095489978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063977508 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063847231 seconds)
  done (took 2.368219721 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082408541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082892752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069628513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081517854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063933636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08156516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080123839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08760929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07993428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071802308 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0634432 seconds)
  done (took 2.079752434 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082315298 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083171807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070095997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082191609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065733099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080624236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080465026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08486113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082685707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072931006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063403115 seconds)
  done (took 2.081805513 seconds)
done (took 7.763310254 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077081804 seconds)
  done (took 1.300537626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588322466 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.070623139 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081499013 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112143862 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183392412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119372117 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279187786 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086712574 seconds)
  done (took 8.925494744 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10129142 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071312876 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070171252 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069945894 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071660477 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068400451 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068033977 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068565376 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072081229 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071749244 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070649634 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068383121 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069370157 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069433804 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071592324 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06880091 seconds)
  done (took 2.440167456 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091789728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090816743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072648079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07445152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07190468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072111747 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074295011 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073582625 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070828527 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07204108 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074669522 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073350552 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07132907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064677376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074194862 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075203764 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070934428 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074275268 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074572367 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074629581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074186777 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064488089 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071085758 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073700449 seconds)
  done (took 3.102566313 seconds)
done (took 17.004163391 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114353994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071688995 seconds)
  done (took 1.413831885 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081965473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083466508 seconds)
  done (took 1.405019346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084216197 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065114206 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092750913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079079907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066305292 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065696661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089639837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066147637 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065725426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066031654 seconds)
  done (took 1.980846188 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068788562 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078904063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071575323 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081401298 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074236312 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064258155 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07260534 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067506615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078656404 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062791154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07181672 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082419958 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071301904 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084141657 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072913766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068674317 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071122264 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067662848 seconds)
  done (took 2.553724136 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065538218 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067033917 seconds)
  done (took 1.378787705 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067098713 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063902673 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067199249 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067371132 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063657566 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062883881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06323625 seconds)
  done (took 1.69767013 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391505575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110092443 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298856406 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070560187 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081728404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250086515 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065416967 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070355428 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070298962 seconds)
  done (took 2.69494151 seconds)
done (took 14.369361035 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078670148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084777921 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094966728 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362255608 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091692574 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065567841 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113734344 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190267127 seconds)
done (took 2.339709616 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.225587662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609172382 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386665322 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196526183 seconds)
  done (took 2.438622215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32920845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086065852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059066523 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066168706 seconds)
  done (took 1.794709522 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065728483 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067937748 seconds)
  done (took 1.38603857 seconds)
done (took 7.101658588 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065805366 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08234205 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066132821 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063587629 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065678265 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063203304 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064223668 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065411751 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065363643 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065665627 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067755788 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065514321 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065452981 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063318164 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06325442 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065562232 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063259161 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065251737 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063381427 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065781218 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063410897 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063100248 seconds)
    (23/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06552539 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063329303 seconds)
  done (took 2.857562264 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083510719 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066574329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071301703 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070872895 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070024306 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07087403 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070700151 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066035033 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070924609 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06809302 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069624241 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069471391 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067650432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069727524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068456892 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069896869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071353977 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066218448 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067664907 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069644605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070738841 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066019507 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069892879 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070783137 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069241051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069576983 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068168972 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066108205 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070873717 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069603645 seconds)
  done (took 3.350471751 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069434221 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063009049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063755147 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07085451 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064016111 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064816016 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06304678 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063945956 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064190708 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063415839 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064748817 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062913628 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06356959 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064066526 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064180362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06673273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078259796 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063673647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063519964 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063696616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066362876 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063217742 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063353734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063134602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.170602992 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062951834 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063479111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062926623 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064088132 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063118567 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066068218 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066672559 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062889622 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069640457 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066940729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063181075 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067606998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062681483 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063804607 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063054814 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062898954 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062961736 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063164338 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07003037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063153079 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064645946 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063306973 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064433602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063513354 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06562456 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062595963 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062591613 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065376783 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064140814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066820272 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062822677 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064262107 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062531408 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064362172 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063037311 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063054649 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062508263 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065439493 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06426292 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077362132 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069940132 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062988268 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065337723 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064524468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06588575 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06543059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076166889 seconds)
  done (took 6.049118783 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09165644 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087943122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065764067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064966551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061682991 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063842997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06757144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063942963 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065145331 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069862438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064283741 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064995701 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065145194 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076440163 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064213127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065209484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069766726 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061943794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063727378 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066839287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06401885 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067024687 seconds)
  done (took 2.771891125 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154664823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070313888 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105785579 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072754814 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067283385 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072834257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06975425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069614238 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069649345 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06833627 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068017681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069985295 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067147508 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06772139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067662721 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067886413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069522974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068191384 seconds)
  done (took 2.635746704 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076687114 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06578086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086077952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066057702 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0656468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067878359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070367949 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074513641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067915613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065772683 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074009984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068190925 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068536942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065663477 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067886522 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065761456 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067948911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065852525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073851163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070477218 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070135077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074026359 seconds)
  done (took 2.809138134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079370882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067846982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082215898 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068734413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061969382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063992161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069776052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065902876 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069778899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067266314 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065719411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064226913 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069222769 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065527885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069002774 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0656044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067410655 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06571995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067305645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061913511 seconds)
  done (took 2.629773466 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086456034 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067696256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067276157 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07584283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067207108 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06731204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075319993 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06726448 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06724037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088700029 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067406428 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067177465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075133842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072078103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067059287 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074931962 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074787359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074724598 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066780966 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066800118 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08654267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067114005 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075001988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066938151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067089993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066835581 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066821031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072057436 seconds)
  done (took 3.279025496 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066495652 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065190719 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06361297 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06378832 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063584322 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063622564 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063146098 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06318344 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06565133 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063153465 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065937253 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065779294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06601751 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065757291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065986542 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065652611 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065787802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063322099 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063439565 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063123589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065555201 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065713547 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065310108 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063530013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062960099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06534988 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063144762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063206106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065274972 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063190923 seconds)
  done (took 3.212088361 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074838103 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07303045 seconds)
  done (took 1.425621408 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062947092 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080119577 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063810688 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069653627 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070668412 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066451173 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073003056 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069470645 seconds)
  done (took 1.830316634 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081066131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076916281 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068219566 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080902847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076786426 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082232712 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132277075 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067097673 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07267758 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064186258 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079965282 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065220798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072019803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066186322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071788393 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072013753 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06429903 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072315107 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068088445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064902621 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067035719 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074598299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06853589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06214041 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0668758 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087683455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077080252 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065775891 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069253881 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073111157 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0713816 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059978636 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065598957 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066346998 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064343532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075401186 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081015308 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068662444 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074723178 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066871251 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076774426 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060935126 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070212191 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072129282 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075977899 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066343541 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066786178 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061637432 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064203433 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068437386 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061878221 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067139209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060794577 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075630527 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069837998 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077107642 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065166722 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067832906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069239991 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069794332 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072771656 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067902637 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068751014 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065836724 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075694041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070315368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075356313 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061199974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060181938 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064158561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075799858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088164283 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072253501 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06671175 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067085038 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063848019 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069066232 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067072309 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07131533 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072214543 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065818879 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071236099 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073082106 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066433135 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068389696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073912465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064114373 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068691163 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063766354 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081981608 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064860133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064156569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064317336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077083453 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069878282 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066419366 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064619252 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073302435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060722011 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066806006 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067028905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066725994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076425534 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070976072 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071017319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074546531 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073454765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066082697 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068732768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062751632 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066901503 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065001446 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072563776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059876021 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06830953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066203633 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065823278 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199793584 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064508683 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067711802 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073645368 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072795099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065062137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062814165 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069017491 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066850166 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069815643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07386471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065419789 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062186299 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061240997 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069780705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066544054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070234762 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072029362 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069543264 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060936819 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064971035 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072026151 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07565713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067137711 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067699623 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072704 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068310793 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066709565 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074170139 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068817644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06573559 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072734442 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068122856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062392028 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069742077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068625886 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065031451 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069235059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070293938 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068265774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066355779 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065349272 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074073212 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067039399 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065513911 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067206411 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065269055 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077016389 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068365736 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061658186 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064515202 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076285218 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064486797 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065986436 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066244696 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068550521 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066872645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064365969 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066053522 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068784079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077332106 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070102417 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067365403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071745645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07679712 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066101057 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068796762 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066026123 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067588119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067175524 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074850412 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071690749 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07045127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068142116 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062563839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071440693 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073886299 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065307156 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063609524 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065192575 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070064495 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071421174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070185907 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066679998 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063945283 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066627755 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069160105 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068733211 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065462204 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06501769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072700214 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06451962 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073227402 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066933313 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076428553 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069356773 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061114556 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069235633 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064400134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071952401 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061360582 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064452576 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065537066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06717655 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065262979 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069065375 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060516623 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07345576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073527183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066459161 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065517623 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066025912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072839798 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067466118 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069685922 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069081676 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071917628 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075539652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064843231 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06856852 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075138882 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193819346 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060934501 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072464848 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065521234 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065471674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065791083 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064246192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069346448 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075795076 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073406006 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060543636 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069628531 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065119811 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065951645 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062430051 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071410329 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069599632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068025018 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073775092 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068177394 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067734404 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070833012 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066556944 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0670023 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06752896 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070573281 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06863576 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068920162 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066218557 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070490051 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065824508 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06461973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068993725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066906908 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067454514 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07193947 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065635255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067181091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068902594 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067476336 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067165586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067843753 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06632446 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069323798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067271094 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066799735 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068839097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062285394 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073968756 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066398361 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073705774 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067156443 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063025884 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074166086 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068891212 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072762776 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067697281 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067321758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067567482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066437879 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069247692 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073622511 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064079245 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077460037 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073704677 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067542553 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070188472 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067353126 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067490158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065058063 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067359695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067735413 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066740895 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06600169 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070757607 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068677471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066515089 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067765658 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067203513 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066496574 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067836183 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06086943 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065209201 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065500269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066062832 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075770804 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066866331 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065963962 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064813953 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067107285 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06503164 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062780694 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07394168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075398715 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066628026 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073211031 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065591974 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067246129 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076686772 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060242848 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064133293 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064677153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063775486 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073264378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066844461 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075401469 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065950682 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065233256 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063865546 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066691985 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064617626 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060565258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064005491 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069203037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065171061 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064960218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066473492 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068457059 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066936069 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075217882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064455077 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066247016 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065782259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062653784 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.195855944 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066170002 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069776384 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068015358 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064911483 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063999269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066414655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067551711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068552211 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066641688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068405143 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07648046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066658372 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069915809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069356173 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062066373 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070450726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066582644 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067124353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065993218 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070555853 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070512113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068218379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075273838 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066495201 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067635966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06674078 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065145235 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067142727 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066521817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066396387 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065452197 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068008313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074892084 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064923431 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069460962 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066617003 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066825617 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073373508 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067268053 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06933675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072648067 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067480012 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068519245 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074303976 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070936607 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070230913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067591978 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068481101 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071583121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066305879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072881542 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066728618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067663337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068413619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064777436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066684164 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065851242 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065805961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072637907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067010878 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065245012 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065177902 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064235044 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067396457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070016377 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073521893 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068801493 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070082949 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06161271 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064078869 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067562972 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063937461 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06838838 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068773332 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071620047 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068265305 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066709788 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064900313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075239726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072421815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069445935 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06387636 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069773049 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066885837 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068107092 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067065379 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067035701 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067813908 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069850558 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067929131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065923552 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073325219 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069791238 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067234585 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067699034 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066829846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066832291 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06161763 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066717522 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067958795 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071106572 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068523162 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066183644 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076786558 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063874468 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066330526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069659273 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065729445 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070366736 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061564783 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067282152 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067216896 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066685224 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061268368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065236283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063893551 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06810279 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065192686 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061239954 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076496165 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074860527 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068734821 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068048881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064242455 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.1921648 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061943497 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06653258 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067596956 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06877057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076859104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065757137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065496279 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061920178 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066497867 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069830215 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070026223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063404337 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061625022 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065417394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070254534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071479066 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065801537 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067239769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070305451 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069673985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064881928 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07020596 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06318225 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070397211 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079600741 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068417519 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067789961 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073217512 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074152992 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067655587 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062089391 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066872952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070171195 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067258083 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067558671 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067862333 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081487265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06970516 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065575492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065829701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070018773 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066034474 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074660821 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067192113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067257272 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071079952 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068451367 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075927767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069266715 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074163328 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070261997 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069451214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065449454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067011794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06468241 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065884293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067247748 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067382656 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07178337 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07514939 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065617972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077088012 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075740348 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06829106 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063322006 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065472718 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065733 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061340536 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067403607 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064938258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06408032 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064237853 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064888506 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067631978 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071642845 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067185326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067096003 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06626796 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060647178 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06876021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068383432 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066974448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063087914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066254346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06672304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070074151 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069704062 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063856154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068080774 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068372377 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067065915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061620478 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072827557 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065485752 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068249057 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065731952 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066725473 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067244156 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069682333 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071270231 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067410351 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068574587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070148658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068505046 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063902355 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064031934 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071873972 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06430494 seconds)
  done (took 42.581913662 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100553859 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064000386 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061465753 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062372111 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074032695 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063255643 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062230922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062757561 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063219165 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065219772 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062029558 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062137929 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070772539 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078005663 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076276414 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066577262 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06191377 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06311414 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062064818 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06294868 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07097048 seconds)
  done (took 2.77888906 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073943494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070920296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073754917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075801573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067444179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070856973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072478996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071044156 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076292116 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066971422 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08372752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0704134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067177194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067044628 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066830372 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070584828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075962576 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06759263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070728398 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072663043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070900814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072701089 seconds)
  done (took 2.916964993 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067241964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065994358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068482334 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061833435 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06643823 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062003212 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069387483 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06376067 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069140262 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065183765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064654774 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064868207 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068127657 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061341515 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066018915 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063475251 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108537624 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068776201 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065254466 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066547694 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061362657 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067733416 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061492234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061774231 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065235292 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069530407 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067146843 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064199314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065849563 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064882556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065854688 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063627526 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067343348 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06635316 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064921886 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065323001 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065887861 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065692675 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061528654 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064260187 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066383428 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061781392 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066068066 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067194091 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063939645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063756833 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067501575 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065688638 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060951467 seconds)
  done (took 4.584356568 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079518914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10929792 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068137017 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088287708 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080097364 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075083071 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0693146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090749191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0634057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064752857 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.0816175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079776562 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065937325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070348416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07302279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065924174 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067011061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065182746 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069660457 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065356642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069802889 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071967219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080003368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078524453 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069706387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064686641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065549427 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070057869 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078289195 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070357338 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070242497 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071191268 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080578425 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070662581 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064914421 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067688409 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082049516 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066204486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067955588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063289881 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067587274 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069820986 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071824489 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081528324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065830345 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070546271 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065304496 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062424195 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07787192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067770001 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073146502 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079697071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069186855 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065388582 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06956399 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080482856 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065470711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06379587 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068504954 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077552849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063104367 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069155959 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079329996 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067494476 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072596685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079639591 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070881738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069380948 seconds)
  done (took 6.382644721 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075717053 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071754801 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079807651 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080231039 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072711872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072149164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072050388 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072106151 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07245348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076858157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072290071 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093285413 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067658125 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074905663 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072556325 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072476109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072320911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072331817 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07235102 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072241355 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072426949 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079954879 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072773007 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080252528 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09821647 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067539108 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072527127 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072130295 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080456565 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072206137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079623519 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072246632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072365551 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079995121 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07904633 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071796466 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064784872 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071646066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07206109 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07224452 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067475697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079892535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071696449 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067162053 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072225276 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071884463 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079856172 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078605943 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074968774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076610418 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072084092 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079991898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071525024 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07190062 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079810636 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104677759 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079655726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082604745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072085529 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07960701 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079874015 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085808942 seconds)
  done (took 6.056906639 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083779497 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074312127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076610188 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061237141 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063635569 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069843822 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063933554 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064289599 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074302451 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074158129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076948523 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070017062 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072761325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076866392 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070013883 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072798292 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069675257 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070134792 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074276982 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069525128 seconds)
  done (took 2.795885257 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074528815 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083527208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066959337 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071219379 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068818603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071857489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068115116 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068967488 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06654301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068953387 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075703956 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075813268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066743718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071678112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075691046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071602563 seconds)
  done (took 2.506790927 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075287418 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072418912 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080094286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065977334 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063903756 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062497047 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06565523 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061604794 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062474036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077747629 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065693217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068032882 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066307559 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064158079 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063022089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0684376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062201631 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063345335 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065649483 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078442851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076103807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064857648 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066594882 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065702548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065647439 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070646481 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065125301 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063490366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06323982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065922101 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066173405 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069031813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062825051 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063588426 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064184173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063133047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065232633 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065941728 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068021658 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065644434 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063470507 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065293284 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065328005 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066553968 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062702039 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065934123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06229848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067753236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063612112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065912779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065357849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06819743 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066400354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072803333 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068939308 seconds)
  done (took 5.02538082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079295086 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069420203 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062184543 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064052654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068715549 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067585356 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069098163 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067366651 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067630463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063981882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067699622 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068482847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067683952 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069125313 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067436983 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069160822 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061846231 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06763199 seconds)
  done (took 2.590969864 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071355887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065724764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073411956 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066280014 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065204933 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067856091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061855125 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064383539 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064658039 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065493059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065915123 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068620508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064177381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067979406 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06609708 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065869017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067761844 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064348006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065495452 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061781026 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067973879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064480833 seconds)
  done (took 2.823187083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092555809 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081314009 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138097121 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07884188 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082967075 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07134624 seconds)
  done (took 1.913020427 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091344241 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079762534 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067315114 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087693653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07338127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067164339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067152661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067664518 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077750512 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076260946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067425498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07596929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07605495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075559974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073174389 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073293388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067443185 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067078355 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066194098 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083820067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067353763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075821324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067201145 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066800941 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067081551 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075257878 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075538285 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076077169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06682382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075895925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072788065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067635355 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076147652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076374085 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069280746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076165472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06757654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084609311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073504994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075869355 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069263595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073440954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076240637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072416688 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076409089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067867044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072639167 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067916571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067716774 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086584588 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073716404 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075529718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073479333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076315342 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076122673 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086175276 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076132407 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075960936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073816112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079036891 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075485792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073453759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075160033 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076325336 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073510191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076026798 seconds)
  done (took 6.253125011 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082261747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085968061 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068715037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076787309 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075559387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067685312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068353928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067436803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068101965 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067294803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108088268 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068351621 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076103895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075969319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0679355 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067774006 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068150347 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075578385 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067579371 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086123722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067751408 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075441667 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075752834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075308583 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076601935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073343089 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068057929 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067616883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067537086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067450009 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072914277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068283655 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075898444 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067308537 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075569442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067854331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067517919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072310936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067517876 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073152201 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075662496 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084052979 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067456708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067208296 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076520172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067240642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06734769 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066852635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067427592 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066987369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076041401 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075885091 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076463857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0752318 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067376832 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067352476 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067242336 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067324752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067318346 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072797188 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07577103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067162107 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086381831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067481421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067333361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075641424 seconds)
  done (took 6.158218106 seconds)
done (took 129.472185175 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181301784 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164913574 seconds)
  done (took 1.710765596 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069246998 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096863608 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076557839 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128644655 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065962121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10032919 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099688951 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078058605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066516539 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066186559 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066151785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068809397 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131499034 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066339603 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066187013 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068937708 seconds)
  done (took 2.693845968 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097238575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158006451 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09991785 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064381281 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097120737 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072913781 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065012634 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075466693 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071143663 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065262086 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072998042 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07059974 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065391764 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070337039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071011582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072734543 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064687723 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072787013 seconds)
  done (took 2.807073238 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102313829 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092501471 seconds)
  done (took 1.579642671 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155324036 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105686211 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150066951 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347648333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167016495 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229790505 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126915157 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127657219 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117222915 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123247036 seconds)
  done (took 3.029539144 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098107658 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152094523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256691263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114724831 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072480185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095435861 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116429703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077575777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081374575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080688277 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080509694 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076226447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098911654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073674982 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073683611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076437744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102290192 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072502128 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07418903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076871751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099585731 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065842104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073649879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072323068 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078454375 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077585849 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065756616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065839429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077054457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074058241 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076889324 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094377344 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077527314 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106929346 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070330251 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10839805 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076590172 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07362724 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074355048 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074010032 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079015966 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080489814 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072166303 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076093453 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065481552 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076391548 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065611164 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065627888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078337517 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066856785 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077713402 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076784563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107048978 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066553878 seconds)
  done (took 5.992881314 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101993354 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105306354 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072085748 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110474446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099727486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071446075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101008252 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092951492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103538604 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06993258 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06856667 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070391464 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081822711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083012997 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111766546 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103914991 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073866115 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070590508 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104293473 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102595716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068255634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094969117 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089470171 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102273311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067690375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070539609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068529702 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07036908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076944587 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078516029 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069834315 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081215673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084427128 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078430713 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067195956 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067591112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068419987 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079262324 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079519705 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078730672 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07771824 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067558633 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068312695 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069486481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07024274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067436751 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079051527 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080157504 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078945614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06989936 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070236386 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067817336 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069760272 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080172504 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077737279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080812459 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08030433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068133386 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06849959 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071168799 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080542773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07943186 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079040084 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069627926 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078879284 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068527683 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080093682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08404193 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068702907 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069690891 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068554178 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069631579 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069340586 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078268392 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077956043 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069990471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0695038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068997474 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080118645 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078776347 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068646058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077573193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067215601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068747024 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069910304 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069787993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078400344 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079925285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070719273 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068363472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069643098 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06884204 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067233845 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077247309 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080602677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078634101 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079242558 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06930703 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078997402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078005008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069303482 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078886112 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068234762 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197515105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070914611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078471419 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079103468 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080747824 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069252932 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068043585 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07891817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08076287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068891068 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079591804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081815646 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080174634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068213176 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082470283 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068982939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079769906 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07060837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080626884 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069166532 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080726067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069372069 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068066711 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069220477 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08044974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069857939 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068706472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070040973 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070320352 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079720382 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083881125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071791147 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081150977 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078708341 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070527848 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079318137 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069788475 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079418947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070188625 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070188139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067648443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082487467 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069304898 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068610996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06879916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081100868 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068985798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081122347 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078827987 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067817657 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081666362 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080617283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07824687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080489327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070602736 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06935553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068677232 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069360472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078242625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081012223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07111333 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069605286 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077942621 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079381872 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067303714 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078525985 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078082798 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079113891 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068834252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069632397 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080376071 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080729906 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078234663 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078144117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078541549 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067991098 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077312306 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07859022 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068022958 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084047182 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067999497 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08226732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080146868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077608033 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079202226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080940962 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080319345 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080116203 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082422547 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067787164 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067939824 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079881294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068529287 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069306364 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078493488 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069568183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069665237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083082371 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06820535 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079608551 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067522477 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077902127 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066825757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068990405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082415093 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06771883 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068967857 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078623919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068944236 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076678476 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079707958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077611307 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067297728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068637615 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078242599 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077246226 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066972709 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067055495 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069094197 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076992522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075840751 seconds)
  done (took 18.544433396 seconds)
done (took 37.749604393 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216662744 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150947128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199328808 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118195981 seconds)
  done (took 2.163015411 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121871139 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100262965 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094404559 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064926291 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101849864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065190017 seconds)
  done (took 1.961526414 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313789666 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212859311 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18341803 seconds)
  done (took 2.114857263 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200006528 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187862441 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394482418 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252583815 seconds)
  done (took 2.545861023 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144332942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089082732 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0669642 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082892926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135210433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162323545 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101934282 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126886214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077749526 seconds)
  done (took 2.445639314 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147657696 seconds)
done (took 12.824900863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095169913 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126229457 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.215763872 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.178539814 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07135107 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177120002 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076445938 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077452567 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077248158 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176557497 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073141646 seconds)
    (12/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.227752671 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188920609 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078738561 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202564932 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183401632 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142690964 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216048518 seconds)
    (19/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108913339 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070952291 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072496781 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.111544342 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.22144368 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073447002 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07351954 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19272412 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072821403 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174959887 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182373501 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087659363 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088568862 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091741478 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071312903 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152611117 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052314906 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14834967 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149561666 seconds)
    (38/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.149367912 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.16959662 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075454289 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193482804 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194301618 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112335478 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175459752 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076984337 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072616501 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072497794 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065849841 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068747981 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105284048 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085096055 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139018879 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064822969 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10647715 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066952815 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069157745 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.186257104 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050894403 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091826212 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105502806 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165218518 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094276686 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074998393 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.195243446 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089957738 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106139027 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071156783 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173414943 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071648943 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071971071 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097913291 seconds)
    (72/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098212168 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07084501 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063114472 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074697574 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073902318 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091598053 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066882443 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128363122 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.065674571 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061556561 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073210013 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149475568 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.219582945 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068017614 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.310612611 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159538822 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156751444 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05119669 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051668102 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087268899 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100567944 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.135351743 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135133811 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071541622 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075347088 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051302788 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088407987 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141145802 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069878079 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074675757 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08964122 seconds)
    (103/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052082704 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165149546 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091368449 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175109174 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089393279 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060926809 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051349286 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067416257 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103645362 seconds)
    (112/309) benchmarking ("sort", Int8, false)...
    done (took 0.139982886 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072628278 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087582114 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072248543 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051801976 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114419662 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088890575 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137664026 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065995227 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072366144 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050944786 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064559091 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137977559 seconds)
    (125/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100011582 seconds)
    (126/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061050086 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052797523 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06493402 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0516848 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051700831 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.133730586 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073501326 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065296182 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085839529 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141316517 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067086309 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051322769 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078579567 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070923237 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072059881 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064594528 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071519007 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074234014 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064018464 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132849111 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065897281 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064677794 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075302405 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051021153 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051814791 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071591285 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185155902 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079176764 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07904416 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052021309 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064587026 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072228866 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089513707 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105401727 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065359261 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052981661 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052179277 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052346693 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093093925 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073662236 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066151468 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107390096 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051324177 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154357947 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183627495 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065230081 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076847771 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149224534 seconds)
    (174/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081379199 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134729662 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052690679 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088738886 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066490541 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138603685 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074158914 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112949186 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174737448 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052310432 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065091551 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071351986 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 0.125834086 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098717585 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064860616 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087289366 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073314257 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051884281 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072344175 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071083413 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050962155 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.2031449 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068242072 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064483499 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090486883 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062820171 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077041116 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068891386 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066652812 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07448818 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072852126 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069926033 seconds)
    (206/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117292062 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169235367 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078860391 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175695185 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073875737 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066017249 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071610152 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111388692 seconds)
    (214/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080592407 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07568786 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07416986 seconds)
    (217/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065831024 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070619175 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066415259 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075884353 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064180366 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051591012 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068771671 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052023816 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150986041 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134044281 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067267791 seconds)
    (228/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087570813 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151170755 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051675095 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073457991 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051269357 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066233559 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073723246 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051753772 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185588951 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069181369 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147042809 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051672797 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065818544 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053483936 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080071413 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065247122 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061435081 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086165634 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052438063 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0680406 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065002976 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066778705 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065136843 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 0.124566293 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061647807 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071686255 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065040883 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148712604 seconds)
    (256/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066629245 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051637457 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051123727 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06531317 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072608281 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106282786 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071164715 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070011271 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085666785 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051543033 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051916442 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066367564 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096390877 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051386714 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138470798 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072129375 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052447665 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064894334 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063999095 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087344781 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05345934 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051101412 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072033371 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0720354 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06352956 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071734469 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085171295 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087059587 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063770181 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065518167 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063044124 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134569034 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051568203 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072088226 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052630448 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05106473 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064846037 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088722921 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07079568 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132291888 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088950225 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067488432 seconds)
    (298/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060833607 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06210908 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052120113 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071102374 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0645104 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051709563 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051905076 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092272607 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079639431 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100856133 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065938688 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051941086 seconds)
  done (took 30.349089295 seconds)
done (took 31.770556863 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082928911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092569151 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074507269 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092449592 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080770554 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076334254 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072379152 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077994851 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0793816 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081266771 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078387709 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054791357 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073428951 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073680387 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07393265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090934194 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078072352 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072859939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072353998 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064525783 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072292341 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065460266 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066695289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05469793 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077393865 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071467401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071856166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073356751 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065363598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065679322 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068728439 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073131799 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065267268 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078138354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071792459 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072720447 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074372285 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075801863 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067377518 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065746605 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073547586 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065789279 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072280431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072954878 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071479952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071310696 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073129888 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077358659 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090769683 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06777072 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073580496 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075402849 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075726778 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071848714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068937605 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072481573 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070254216 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090660809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073294572 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06758842 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073393758 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073760435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070816266 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072712184 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072371546 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07440203 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074825611 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071126182 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074134125 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071298669 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064890082 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072341105 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068415953 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065818715 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075171673 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076405894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063994479 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071426837 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072013851 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07082852 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064491095 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067414152 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066904465 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070970531 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066927428 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054426169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068372944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070814282 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064038012 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072910987 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070935201 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071448754 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066687411 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074623078 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064672581 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070377911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065523071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065434915 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067025249 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068746182 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064797212 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067326291 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073651665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066668346 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071073779 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079004404 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065579164 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071388408 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064073738 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06500233 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0795284 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074911463 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065526044 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067673956 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064565915 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072648862 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064348877 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065047306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065036528 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065062004 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070728092 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06501391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066844959 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071691012 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07701479 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06482278 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067817374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066993173 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06449953 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069392658 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064416291 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064292651 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199676311 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062044488 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067769716 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066207888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072112976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067416485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073363384 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066967286 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073751003 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069448139 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071179162 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070315268 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06448026 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058950109 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067552232 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067798968 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06738554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065880182 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066696697 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065766332 seconds)
done (took 12.405119455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066608195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143193041 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099716933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094760826 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085387969 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06629364 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076144698 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101807777 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067668742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102605143 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087351082 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084500568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112521629 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06447069 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06587353 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069706099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066988557 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081155089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100955123 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086866915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115907998 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066094841 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094013109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090268745 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086883528 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100997345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06662748 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069905548 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06892133 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090860743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086202084 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069712557 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066363096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099823779 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092385469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082994722 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066451383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082501803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066471587 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065571994 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067389344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097656739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080177402 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080045554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069889883 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068635717 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066759657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083439875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088940918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078415651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086502985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102740042 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06840416 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06550438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064194807 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085148897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064994107 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068499268 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065942781 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067968001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065739994 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069307636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08060653 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081622109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06925762 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080110543 seconds)
  done (took 6.794293732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083195345 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089181048 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084008767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083226122 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065705311 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066434336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066444516 seconds)
  done (took 2.041109453 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066947726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088073331 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089862993 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088487703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08501438 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087732124 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075754819 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066264709 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080056116 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067590675 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087160295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101671996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067160325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072466437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090679261 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066315802 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089853425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066565621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069170912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089842828 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068084052 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081552658 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069660199 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066673734 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080391687 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066674421 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112746566 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070562986 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06812359 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069519645 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064422018 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106824922 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080251352 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075538452 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066006915 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081581155 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080552726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065069334 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083284563 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071352324 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079740711 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066688007 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066933523 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064225531 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070626666 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076932195 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067388378 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067008208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068790934 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086010851 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066892555 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080423526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069747408 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068877852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067882173 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070379805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076066576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067163177 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085725303 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067688554 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082807308 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082175176 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07985457 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081987079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068412819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079790359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07953338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068880805 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067996716 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06921737 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082347495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064711706 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06786074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076438376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068057559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089054041 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088579364 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067705652 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075460705 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066753156 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066451376 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066713736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088903152 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069042285 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066549025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07064093 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06918908 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064748609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065714263 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069601931 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064266965 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06791045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06937284 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070101199 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069255717 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082734628 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06874651 seconds)
  done (took 8.752343423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068880219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068212647 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07005939 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068053704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06813068 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067552948 seconds)
  done (took 1.938377707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09377279 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069531323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081113836 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07208214 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104313376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086370826 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08712805 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078851169 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083407562 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07897733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086533924 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088358392 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092470595 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073194531 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086521025 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071701789 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087081547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075682565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078434578 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073048527 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086659125 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072408635 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072789673 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08148897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075475857 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072132275 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067342836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078788801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078985832 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078891941 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072437761 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075656822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070730828 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078457647 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086525116 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070846898 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072218117 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076994801 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072531101 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075447496 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087927292 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073286299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074371059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077219009 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078245861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070861759 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077030751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075826982 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08589403 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076739798 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076788705 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071661231 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075236287 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076874044 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070426735 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078157926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076573134 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085992125 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071931459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070373517 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068562568 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075068164 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077735051 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074903589 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078548526 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.0767999 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070574914 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072084792 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072763577 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072010825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076873779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068955404 seconds)
  done (took 7.087742061 seconds)
done (took 28.109862081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543093514 seconds)
  done (took 2.035519996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599138123 seconds)
  done (took 2.115076947 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.575708367 seconds)
  done (took 8.089268848 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40357294 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.487059466 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697617373 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132332346 seconds)
  done (took 3.284671177 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.682368394 seconds)
  done (took 2.20899573 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209647055 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197340585 seconds)
  done (took 1.946261095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379019649 seconds)
  done (took 1.894827578 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109705666 seconds)
  done (took 2.625929024 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263106752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163436634 seconds)
  done (took 1.951943457 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461671443 seconds)
  done (took 1.98173384 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.807129031 seconds)
  done (took 6.329462373 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215251197 seconds)
  done (took 1.778753439 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238961043 seconds)
  done (took 1.758632795 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.709093807 seconds)
  done (took 3.231370929 seconds)
done (took 42.756437078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079591614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080167581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081285738 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077357596 seconds)
  done (took 1.82828587 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076093888 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07258619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076361525 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07270852 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076966678 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072191734 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073772123 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076567171 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072191849 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072502924 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071963405 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072028691 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074739902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073763881 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070374035 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074411787 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076265957 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072038223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075214197 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072197869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071030911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074638908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074353388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071649816 seconds)
  done (took 3.292163017 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077619137 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072470171 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074911298 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071512407 seconds)
  done (took 1.826585496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07735588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092456956 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088922424 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07736065 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092207697 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086279414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068767835 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068569232 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072007759 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076663127 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067363732 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095463146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087465522 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076206472 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078672173 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065573462 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068133653 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086671215 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076765345 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077289042 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069512062 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076622418 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068211361 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087795948 seconds)
  done (took 3.407865905 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077754908 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102462629 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077474181 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087542329 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08975103 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067416575 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074123273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088889475 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122314273 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06485919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069684215 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064752219 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071914962 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064800365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075921239 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103992179 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107625251 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067994672 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095196115 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065204723 seconds)
  done (took 3.177875797 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072529601 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069328501 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06581108 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06831448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076670858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072119349 seconds)
  done (took 1.957506952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067838958 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067863815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067004772 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067291899 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071664324 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066604124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065342083 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06675415 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066809265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066325757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066597171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065249364 seconds)
  done (took 2.33412178 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.171254638 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068690522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069091809 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06572211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06996445 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06603834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079640612 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068152449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090299704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066097623 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065845442 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068201324 seconds)
  done (took 2.479299564 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206623999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076030601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236858413 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138912226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111117649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114893169 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103669356 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113278673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143468425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101407488 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167309992 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165237449 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106245451 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136594753 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088757662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097625006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155698259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162579142 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103349775 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165577077 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144082619 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124102861 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146456857 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10068108 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105679091 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122150546 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07047636 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079832575 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170643696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131692473 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146170568 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11094886 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093582324 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176375807 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170569945 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142745336 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13381509 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083601898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10197506 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133104758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198980437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08832188 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163385703 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244460104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081058843 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134425447 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120066112 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119708115 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106773959 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090351551 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147234591 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184368638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138676652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08627316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111629224 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115109628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116435066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10402279 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182917829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16137035 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127364162 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070809949 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099146698 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152952071 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131160474 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108309049 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12716696 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093386684 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133615597 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15349911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118377691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143186702 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128569863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087879492 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118631548 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139224756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127923499 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169956211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124054774 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07229194 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124163508 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102952014 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081663618 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142261652 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075191317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175294979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098526117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106051923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112974457 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108385063 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108764353 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16195866 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144291372 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244149929 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066501396 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104355469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120804291 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148380362 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087505549 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108453497 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116521543 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077437897 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139053854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07458694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123842912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07469618 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12562108 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131890378 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075345544 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121814404 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101126889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099899301 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134321068 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160257004 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088867679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082204441 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166911589 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121769801 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104466904 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143793474 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15549138 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098816176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101758355 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149256151 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180239959 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088914666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162577901 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107372485 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083632572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087026823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124000744 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111804195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121880749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081510555 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118433837 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168258184 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074338807 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095409276 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133256432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079456282 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081535388 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103511708 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100314933 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094203863 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100271516 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104383597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137929731 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12374111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104965858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268972548 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098227264 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170683954 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089680727 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100347333 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104349607 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069938539 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137763842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156959356 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079185007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165800338 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123635204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104627342 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119326069 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083505925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13961266 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078179798 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069993326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146060276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110655641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109261464 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150743073 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104201705 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127082924 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11918365 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135113711 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131520724 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127917412 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1047097 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087907065 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111030859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125490966 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072292796 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090694575 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07995749 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103872154 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095294895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082647951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142612918 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124995668 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100175 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111623796 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096463507 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146384485 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076335868 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128904617 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119052164 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093607173 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151942649 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152453658 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13150365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099110733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144958643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070099917 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073169979 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231567738 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12543008 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08305455 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08373678 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118546568 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146967169 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128722053 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138916361 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111266603 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121258544 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154329143 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069928319 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115277044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149329 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121689078 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10346576 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091024263 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09922909 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141324082 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108591014 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181989366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113883849 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125581738 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15238512 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098938441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082021558 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102184768 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135452089 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104567711 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145157746 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0997427 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087331938 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109436064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07355575 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099846114 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127293356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11957635 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135471777 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114283232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133914965 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076941984 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116848622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120502995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122645745 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064054167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119921009 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161604545 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093370844 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118413844 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154299123 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078899515 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124263011 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320371566 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147578717 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084660432 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110393742 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118232072 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12912147 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119289092 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13981911 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108207222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135823281 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10936517 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08493082 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087026685 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09724721 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105022671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095001256 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108004914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114721326 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094186033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132165812 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102956051 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109125111 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118112738 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095397958 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089025163 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096976686 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174990016 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119266053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170670691 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098196034 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144472738 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164415816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074396372 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078362958 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077981918 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139978761 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083380492 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130626015 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097365209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105438201 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123994018 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142209667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094907915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067825994 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10838465 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134425296 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112066619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098424522 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104120677 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162833193 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099831904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079042914 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113721386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104649492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10234376 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316643639 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061765132 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098323398 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076260541 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080398985 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126989832 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152163837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079690856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10268961 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119422996 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110929758 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127276174 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10125012 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099170104 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114105501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150602278 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128810358 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090179747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112275712 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129966486 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156528749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104820566 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.0953358 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171744621 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166616925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159656411 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087795329 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116443213 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113576782 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10784701 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138894817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082317927 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163565185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081417612 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136073243 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103835666 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089892049 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129826082 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098631827 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088002258 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147797018 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11702041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082456976 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077671634 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118111794 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120465253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10690251 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075173742 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139932633 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07245673 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132198576 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169751046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081036075 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10406208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240977421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080346737 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1090537 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102490392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088259927 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097757429 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174235772 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087614128 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149922159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14148488 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113749104 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137032051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099285495 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635546434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077578168 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152060013 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116126315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174262025 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097912124 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117046963 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108605446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126405333 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144649079 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104950496 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177096143 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131663267 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115218983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079041976 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102895312 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102969141 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088470099 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104521232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113348521 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115868119 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093314217 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115656023 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123304326 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081604748 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094648679 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155894317 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117073874 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144725704 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140671981 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084490294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118015565 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138708452 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079382617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122303119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153129797 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106173332 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097900927 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08013661 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245633818 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170770503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073642909 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163590119 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119814571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109358744 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112272997 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114628485 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131662601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107689588 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121887921 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09402072 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110836121 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113083563 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081881885 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07755485 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104925626 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113232268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097117292 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098955893 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097851649 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151884568 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071079251 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095771022 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103030151 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144132846 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174654253 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087673116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081998556 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119111479 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112293495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11298599 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120304529 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079079779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08195747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081388865 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076619618 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107972939 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112005169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104013071 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111278503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164489579 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081974829 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22485825 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094793534 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105159533 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069270652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078066168 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095942433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097412705 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108684253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100323964 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169652681 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094385168 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089189619 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091978892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072636861 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082407674 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271458379 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111561535 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118599315 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097779035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063066033 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109388319 seconds)
  done (took 58.819477565 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108651923 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081148336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097022842 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149959192 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122107174 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211623855 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157116377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199112552 seconds)
  done (took 2.759307095 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069002189 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094366806 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099994876 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082645603 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06620293 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068511427 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224363935 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079949865 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065925875 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088276736 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079209423 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069352032 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417950989 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06702719 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067184137 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063020056 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06692866 seconds)
  done (took 3.396499611 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363987217 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604302855 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372559465 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072597899 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.833702293 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090349752 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.023946388 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128263251 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073446001 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521292226 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705652293 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12414007 seconds)
  done (took 18.54757284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074773149 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069474935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083042171 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082788989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072027586 seconds)
  done (took 2.012041115 seconds)
done (took 107.405189065 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079360721 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392288125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053380897 seconds)
  done (took 2.103466957 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081682465 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083811875 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083820401 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08205477 seconds)
  done (took 1.969530513 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073706569 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076376488 seconds)
  done (took 1.781608906 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222724345 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137325097 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085988699 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082076571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077629136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078186711 seconds)
  done (took 1.872845025 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072023579 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074272512 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072218457 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075207322 seconds)
  done (took 1.924619828 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075785196 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053158391 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054971789 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055449298 seconds)
  done (took 1.871896673 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085851456 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078482096 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07757515 seconds)
  done (took 1.874118419 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101669442 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085606957 seconds)
  done (took 1.821294058 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081339315 seconds)
  done (took 1.715418974 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098636951 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113673737 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128649547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108911069 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136334402 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108438493 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085539407 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08676614 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07660174 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087044478 seconds)
  done (took 2.662958985 seconds)
done (took 21.756329305 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077789823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36205291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360488167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089784628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668251618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356108656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.963685813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091248082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113275864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067368591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084069681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648546392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.951124614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314583446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943004109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318166381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648068051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06768806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067194358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067325477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951457287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067256113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068116488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067930027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647892489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370230002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067532518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317868098 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067740775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069259863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354086286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067633325 seconds)
  done (took 15.99552099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070307389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118081005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073168496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083597331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070328814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069302437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071008997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068658809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118773495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067590828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084024448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067575056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07105722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068124763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086527694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06760765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068270984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068348615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067745441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068373401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085586692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067681614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067997149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067887016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067422976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079175177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068183562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067766113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068086143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069862176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070674354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068618197 seconds)
  done (took 4.021810929 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115524408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123835561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073628461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102878265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112583919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069676605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142662043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092021518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126917699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067599281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084436651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06764855 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100253685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068761425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087067587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069166495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068576834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068422143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068287447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068192129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086621227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06753269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068413748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068805695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068535251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08075375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068161552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068539615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068341335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069963061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071672219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068856867 seconds)
  done (took 4.280874296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072129337 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075088912 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083200811 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083829259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069775019 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071314902 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072347555 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069918987 seconds)
  done (took 2.246475653 seconds)
done (took 28.185688536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077715357 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069405936 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072454174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080692413 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072732915 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078392887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066808921 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073943713 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07183539 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072443488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074095492 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067176057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070390186 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0666924 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073470034 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067276303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078591522 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071377762 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078302267 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078980055 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06963913 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072714618 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074085507 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078803109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078945119 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078554807 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076840083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072106345 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068349013 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069826677 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076053377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083641041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068244452 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078750582 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067542435 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067152656 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070964994 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067641183 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078815301 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0760931 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069704735 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075974062 seconds)
  done (took 4.711718582 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086690455 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090584366 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084602398 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060995296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066479814 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06477232 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08826546 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059077697 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059526393 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087625325 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055717675 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058876063 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062178021 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053626388 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058675981 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056365128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061133907 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055402379 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058840246 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059077792 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057403644 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053831882 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059726519 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062370551 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058296845 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061712095 seconds)
  done (took 3.337207758 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073170637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084082283 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087705344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125621816 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104430874 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076937655 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077752936 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092177848 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084812469 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066673227 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0711293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093686301 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087700287 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073700288 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06723373 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084388752 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081499872 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068580909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073102061 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090527008 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084056563 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083157676 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092071332 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080528821 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066335861 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068873913 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070806099 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080626082 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071502225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076185378 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071540982 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070404268 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069033252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078197039 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071251918 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068928673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089701743 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076289561 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077557016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067649964 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070599841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068144734 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09996892 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121480495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066625021 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074077563 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074718284 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076681026 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067706427 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086045097 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077814371 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067020768 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070229995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06666365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066998471 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079384932 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068945223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069375916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075974248 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07027718 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085542706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071271952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082202051 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066592961 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07479377 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066443702 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067879653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067088247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092024717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068510475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107420179 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068269401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068461854 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075740569 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074567011 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073199442 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067592248 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08242687 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077310193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070295152 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075692551 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070588267 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070195276 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08725379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069615283 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068787693 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067999138 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073347511 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069723851 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068314281 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080002925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067004687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069880576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083400255 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066965669 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068332587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073360413 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071917937 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066843163 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077971423 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071932354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06770555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076072917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067124371 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069851903 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077083801 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073018089 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065986047 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071593389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072912772 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06789458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068429305 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069859788 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068221371 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075007668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072870081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071200649 seconds)
  done (took 10.516815655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159427964 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154033234 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070202826 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143457696 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075983929 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078561512 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147272902 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093644178 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067950075 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068314383 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06829782 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108935494 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105430678 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115117873 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078387288 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067713882 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083209702 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113167441 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147942014 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142326561 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082867004 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076691939 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070017608 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068797717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070186076 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078289241 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085588387 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075953228 seconds)
  done (took 4.384725557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080989754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095991365 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073770567 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089695048 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090002486 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067214587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069797422 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069369601 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079888876 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078781708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067158916 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072864986 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073816469 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070929644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068480575 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074534255 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074406912 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068783884 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070610137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072311443 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076998028 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080476094 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071472897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066543356 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073679366 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066815887 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064141261 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084287532 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067565311 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089149935 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065136916 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074432399 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08099476 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06826461 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067066756 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066917879 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066887046 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067082929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069168899 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065718992 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065971298 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057121541 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066328594 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079163264 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07364374 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056688756 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07218412 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07198723 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07239836 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064727279 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069934286 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069945938 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070425178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074231194 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07202046 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072228112 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068095208 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065280707 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074937953 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067133773 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06416975 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065864 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071508609 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065922726 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074991153 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071487566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065410577 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066715024 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06854108 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073233298 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066751379 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070121236 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064708938 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068747765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071580784 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069140783 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067854715 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065658572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067115035 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067818823 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055212684 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067060827 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053283066 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070416771 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065421325 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065778294 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067004811 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071907748 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079859083 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06849166 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073124147 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067875208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066139538 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070122813 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059743982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069948098 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082161093 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082412489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066920383 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065417024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08165542 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071728037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066377347 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056067496 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07441291 seconds)
  done (took 9.088358693 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08895588 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070594168 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083484874 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089896596 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085812924 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074682404 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076296388 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06919021 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081771756 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073280826 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076183514 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067920962 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077005774 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076404036 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069368373 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077392995 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071424791 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082159754 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081820143 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068720518 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075100909 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079423084 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088898201 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079694319 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077880332 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079264145 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088316413 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071778767 seconds)
  done (took 3.875663082 seconds)
done (took 37.562282713 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.738428501 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.987021751 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.725474024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145063439 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.991487072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.770747605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.731876666 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.731747641 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.902661811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.763127112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.964316815 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.814645006 seconds)
done (took 64.930463143 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.736143638 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.857261491 seconds)
    (2/2) benchmarking "String"...
    done (took 1.989875498 seconds)
  done (took 5.506593317 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.005709391 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.318208907 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.961433857 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.714060403 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.72133072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.023497082 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519900302 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.244055568 seconds)
  done (took 30.161901687 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.86529604 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.940885909 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.406909274 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.442438517 seconds)
  done (took 15.370961254 seconds)
done (took 62.525634854 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.734174178 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.765494067 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.740515213 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.698798323 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.773528267 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.73321582 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.80840659 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.915465089 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.713763834 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.704030134 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.714626693 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.141373252 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.71596685 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.841968827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.713171691 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.725376075 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.71554663 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.166506303 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.868694753 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722692101 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.732507369 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.775414776 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.716075813 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.723727109 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.748205408 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.715099856 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.136698833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.715185528 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.337523271 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.716423301 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.74484639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.030761164 seconds)
  done (took 202.665221847 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.712915774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.645600654 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.698996546 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.726045155 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.113046016 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.894196401 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.828780837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.169596945 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.716840294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.740945474 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.88844758 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.716882398 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.896691901 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.662354421 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.744317744 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.827171337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.899835086 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.92605136 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.74758537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.882924586 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.734620922 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.758575664 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.697972886 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.879616382 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.733366349 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.779801397 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.874125889 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.746770553 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.909019044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.88620554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.734899256 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739607916 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.940076489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592464173 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.720871017 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724597884 seconds)
  done (took 167.550665497 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.878871226 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.719331422 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.719002046 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.719467534 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.73139627 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.719513419 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.839866402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843648006 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.181630413 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.230220429 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.720044214 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769602782 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539538974 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.718604162 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786592273 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.732149718 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.72014215 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.734731582 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.746756632 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719962894 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7206594 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841585774 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.73079022 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.76077983 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727162874 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719926717 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725450909 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.089485756 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720111619 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725911466 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.97771157 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.726983073 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725793329 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.616863816 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.726793652 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.08093902 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817926169 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729336386 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732347213 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.727559722 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727283021 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.947471148 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728008156 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.728092267 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.729561781 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898727626 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.726406052 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.850276077 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728511571 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221220459 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.72781533 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727275798 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.651523293 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.392415876 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.730123602 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72856957 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.731408003 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.728272872 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.728586756 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.73525326 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.595435509 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.806246086 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.730547096 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.733537888 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736635186 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729354609 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.971285073 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729636475 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.119299725 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.783909999 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.95135577 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849559174 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730536653 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796297627 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824051657 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.73055786 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.728736358 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729133347 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.729803021 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.810950652 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.728995719 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.887672861 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739352666 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.731540006 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780312421 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.798402554 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.7301724 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622118246 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.731838267 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.730310157 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034358104 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797297892 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.732640752 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.730021638 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73035458 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.904304756 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.732605712 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.495294785 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852397474 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732154362 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.644528987 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.734240117 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.89631965 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.732330428 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915307372 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.731842201 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812835981 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735708022 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.732730645 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.729949844 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.76276522 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.730846721 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.789310005 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.731690222 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.102529878 seconds)
  done (took 398.181949422 seconds)
done (took 771.996632483 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.406250304 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.366220718 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.481035412 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.395637583 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.366420171 seconds)
  done (took 13.690810353 seconds)
done (took 15.365460513 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817566036 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.824508255 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.755675779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.822360373 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.752262999 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.819458302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.801882601 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.756842948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787603113 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.757936424 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.790366238 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756807195 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744355629 seconds)
  done (took 24.863699103 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.968211445 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977470642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803857434 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.974065001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.781227869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964561858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897948536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.887335615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.886298801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.750024319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74617836 seconds)
  done (took 22.314222656 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9738034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972318577 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807517881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973492247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782832339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979287788 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897874803 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.890049644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895689876 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748304682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746744586 seconds)
  done (took 22.344393857 seconds)
done (took 71.197942751 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.741763098 seconds)
  done (took 3.418509163 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.763769668 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.902190739 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.748156869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.745378561 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.742207808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.742820048 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.745158377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.74220721 seconds)
  done (took 15.810774196 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.741459247 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.741680569 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742062322 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.738278147 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.742053186 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.741347376 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.738719543 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.739771869 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.741889722 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.741759193 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.744107292 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.740398056 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.738826115 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.740643001 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.74233319 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.741270796 seconds)
  done (took 29.536611537 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.743234943 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.739668272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739558067 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.740076287 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.740069742 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.742467608 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.742437255 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.740736462 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.740745772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.739904719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.740888829 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.743563226 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.740753957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.740145629 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.739862758 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.74166447 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.742218542 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.74097252 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.745063956 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.740334806 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.741576812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.740485847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742861566 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742224057 seconds)
  done (took 43.474558678 seconds)
done (took 93.920485025 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.621598814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.130406308 seconds)
  done (took 8.430855709 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.745002595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.743165385 seconds)
  done (took 5.205347637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.745333487 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.743646201 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.743627295 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.744283266 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.743438073 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.744223678 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745536876 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7435838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.744073584 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.744959499 seconds)
  done (took 19.122792536 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.747057555 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.744777438 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.741679966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.743996885 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.744996348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.742464801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.746575453 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.744619052 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.744668912 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.741949294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.744363975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.742675795 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.746075584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.741980203 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.744312591 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.742125494 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742365809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.742608956 seconds)
  done (took 33.069576076 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.74444611 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.745410073 seconds)
  done (took 5.172921611 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.742807 seconds)
    (2/7) benchmarking "second"...
    done (took 1.745729413 seconds)
    (3/7) benchmarking "month"...
    done (took 1.741900113 seconds)
    (4/7) benchmarking "year"...
    done (took 1.74337868 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.743284261 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.742601073 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742940184 seconds)
  done (took 13.884124511 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.746365002 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.903536888 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.969056597 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.43599505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.747081099 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.750065309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694062696 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.750587727 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.750879379 seconds)
  done (took 19.430479088 seconds)
done (took 105.995999792 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542528532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.742927491 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.069872299 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.810821014 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.760769354 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.084579188 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.769822502 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.968422738 seconds)
done (took 42.434179018 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.745080148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.287735266 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.32230503 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.09297069 seconds)
  done (took 12.386512512 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73183094 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27981574 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789532755 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.413874003 seconds)
  done (took 20.09996814 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.111682228 seconds)
    (2/2) benchmarking "read"...
    done (took 2.111100374 seconds)
  done (took 5.911756834 seconds)
done (took 46.828180903 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748008727 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746026317 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.748932551 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.74550687 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.74767659 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.746785048 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.74631309 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.748563917 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.748008475 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.748980188 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.74877469 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.748584414 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748179217 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745581968 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745974022 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749534951 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.747519422 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746284155 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746746303 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74997789 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.747016587 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.747314756 seconds)
    (23/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.750344262 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74631365 seconds)
  done (took 43.628294371 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.749169501 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.748160806 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.749484469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.750991739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.74822143 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.749419315 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.748973467 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.747893595 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.75161857 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.74994168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747392388 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.747245847 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.74975493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.747288564 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750108849 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.746860407 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.7493962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746844377 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749066108 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.747168671 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.752471006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747810626 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.747412665 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750643776 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.748274428 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747729237 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.750574073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.747570584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750395842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.748024098 seconds)
  done (took 54.153106831 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.755733111 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757920538 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.750319439 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.750429101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.751606224 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.751384871 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.751534677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.751333512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.752275607 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.75129204 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.751132925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751255927 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.752732071 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.751900975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.751208286 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.751753947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.752530995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.752076017 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.751386977 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.751973163 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.750746729 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.752685491 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752549238 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.74776024 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.747157045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748455473 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.748185408 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.747946482 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.747742534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.74919407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.747775005 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.748118323 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.7484903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.748690432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.748590983 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748329815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.752830612 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.75525253 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.748497392 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.7485196 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.748943857 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.74839629 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.7483426 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.749006152 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747871274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.748954162 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.749258695 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.747927813 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.749208259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.749083842 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.748945303 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.74879726 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.74958473 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.748955169 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.749007843 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.749458772 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.748437864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.749378834 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.749014084 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.748627792 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.748820414 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.749566953 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.749446055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750913141 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749456639 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.750076433 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.750138672 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.749721786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.749191494 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.750323726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.749943526 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.750085624 seconds)
  done (took 127.693830058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.749907345 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747561142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747319764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74718355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747076907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.750365335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748006195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750553941 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747347034 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750960597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750005264 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747420791 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746943289 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752578465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749788393 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749310146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750107996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748213212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749921649 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75219146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750186656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748012145 seconds)
  done (took 40.166849923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751146668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750653576 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748398938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750518572 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.747767329 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.750772002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751591361 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752537113 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751197256 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74908716 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748434385 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751997829 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748567366 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749543905 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7485684 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.749706258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750894734 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749398717 seconds)
  done (took 33.187600779 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.749092749 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749216517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.752655634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74943371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.748581449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754466398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749561605 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.752236476 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.752163489 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.749816946 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.752844529 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75270175 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.753064384 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750232801 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751987451 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750154184 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.752565332 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750471461 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753450966 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750460211 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750008995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753671929 seconds)
  done (took 40.216190587 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752909427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753260075 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750962867 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750042946 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750726906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753448339 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.753070109 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.75123623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.753209291 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.753694129 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750253946 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755018583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751715936 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752409817 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751410937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751008874 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753839186 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75185766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753565883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.752133609 seconds)
  done (took 36.736530542 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75455365 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754471083 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754356496 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754388156 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754617426 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75470718 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754115076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755014669 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754382723 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756898916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755412067 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.754615082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755134512 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755771533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75518697 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754548931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754358461 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754719904 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756637389 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754701217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755037268 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755806527 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755528752 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756541514 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.756389169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75538596 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755642968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755016137 seconds)
  done (took 50.834314794 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755729128 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.756774692 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.752537248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.753122667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.753471966 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.753382462 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.753095361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.754403481 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.756675042 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754068163 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.756365367 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.756510804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756931302 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.756791441 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756522275 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.756119901 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756230419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.754620906 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754458912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753092239 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.756049921 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755825007 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.756283024 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753523328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754329029 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.756792362 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754153644 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.753158358 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756036107 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754672492 seconds)
  done (took 54.343320173 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.776197236 seconds)
    (2/2) benchmarking "in"...
    done (took 1.77507979 seconds)
  done (took 5.24359779 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.754116606 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758627258 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.756241596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.755141535 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75425906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757359062 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756910194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754886222 seconds)
  done (took 15.739459271 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.756584233 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.758044139 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.757923524 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.757504846 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.757897255 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.757028784 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76447538 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.758549751 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.759016063 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.758541747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.764035563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.765100805 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.75893793 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758045314 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.758702894 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761131621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.758453695 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.758656296 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.759986456 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.758989961 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759580557 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759800563 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760727743 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.756323431 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.759714503 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.769109204 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.764148724 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.759018678 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758987153 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762063101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.757778499 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.757857399 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.760158654 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.759019538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.759442293 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.759653528 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765543057 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760639375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763509445 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759659413 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759972245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.756840516 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.760085589 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.762187304 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760474864 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.760242242 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.759710376 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.758226722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.759203696 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763763482 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.764192911 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758933112 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.757590592 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762861693 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.760828788 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766568515 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.761175907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763452337 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768303483 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.768888735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.774065676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.767708517 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761272716 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.760632512 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770693526 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.783637723 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768638526 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.758441097 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.757980664 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.760298977 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766478702 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773594905 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.770340732 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.762084207 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76154742 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.760675823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760822467 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761063604 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.767369888 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.763530583 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.761784575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7617076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770794698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78321506 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.761475805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.762981192 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.762303684 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.763676639 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.763164599 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772646181 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.763020602 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.763137141 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.761281539 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.762669505 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.763828968 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.762919565 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.761085838 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76263348 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.76035845 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.76262987 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762739398 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765936113 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770404209 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763110837 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763209782 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.767603702 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.762965056 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.762283322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.768333747 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.763258915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764675594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.763823131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.768858838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.760755076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765850091 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.771046229 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.764353087 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.765250827 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.764013019 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.764456312 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771459732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.787951443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.763594888 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.76355719 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768405317 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.774866883 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.76352546 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.766343689 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.76374333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.761639516 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.762011748 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.766117078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.765220691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.765907526 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766388603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7655575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.762193508 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.765947864 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.765828996 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.766305906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.766160293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.765577197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.766461424 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.765864716 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.765832443 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.767593187 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.771284106 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.765296687 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.765687094 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.766449256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.763906887 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76594837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.76592622 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.765933669 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.765582573 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766224565 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.764864249 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.766510857 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76577018 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.765823642 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765762581 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.767619174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76987851 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.766802578 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.770425144 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.765126613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.763546659 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.76642845 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.766942247 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.766346437 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.766361969 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.765260718 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.769282825 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.774545282 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767254375 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.766817989 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.768511014 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766496808 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767638838 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.76777639 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.770271516 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.774811948 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.766098905 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773286748 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.766813952 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767664344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.767633505 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.767473797 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.766441142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.769361492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.771193113 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.77532099 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779854596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775643638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.768602162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.771660666 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.769074301 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.772246279 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.771528162 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.767914815 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.768513891 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767866692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767275682 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767829391 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.768746534 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.768792174 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.767054481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.768833539 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.767761053 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.76848727 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76760213 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.76852891 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769402441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.766549563 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768361945 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76876835 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.768093276 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.766137657 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.767475018 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.768208899 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.769336457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.770655641 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.775301444 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76669056 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770210549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770143706 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.768817808 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.768380204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.769990589 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772001921 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.770306882 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77487095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.768490816 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.769977555 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775506336 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.769516146 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.769652443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.772422311 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.769506465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.767307206 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.771968523 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.777528126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.770168811 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76996977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.770246939 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770090032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.771083268 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.776821504 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.767826488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.77084775 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.771616455 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.772177362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.768735039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.772311128 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.772624255 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.771392112 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773002079 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772101859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.771409911 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771749249 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.771340425 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.77269157 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.772261365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774111487 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.779555127 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.774664409 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.771411181 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.772668358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.772376394 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.775827518 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.771849306 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.77178988 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.77170708 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784448441 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.779877704 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777851904 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.772746113 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.771525973 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776652173 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.771531645 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.775599943 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772351374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771591069 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.772837093 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.771448132 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.770518944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774424288 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.773183418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77367047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.773443692 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.776253177 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.772822205 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.77280971 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.773760517 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.77244494 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.773810897 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.773019322 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.773729094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.773996423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775318654 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.772215691 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.772349721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779147021 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774931991 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.774546302 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.773935314 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.773306243 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.774125289 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.776184936 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.775076756 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.777333403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.782272021 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.777237884 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.782684653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.775289985 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784108687 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.775052298 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.777259456 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.781923441 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.771748789 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772302473 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.775172026 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77518668 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780698662 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.775263653 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.775563151 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.77918618 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7753164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.775460272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.77441602 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.775830444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774813761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.774787645 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781824146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.777068343 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.779571057 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776506061 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.772716174 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77572796 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.775614988 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.774516327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779528679 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.775269189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.775941573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.775467999 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77577186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.775603614 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.776983383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77691982 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.774029054 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.776535953 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781339762 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.776380234 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.781023622 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.777397117 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.782908163 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777355419 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781909701 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.778158793 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.777097663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.777347098 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.776577616 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.777552362 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.776076449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.778020411 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.777069233 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.777574643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.780162682 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.776652341 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.779279776 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.77716945 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.778384291 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.777253004 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78566375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799898204 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.778460139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782320131 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.775272483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.778386767 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.781579283 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.778032473 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.775993076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.78018575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787313047 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785119615 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.777511375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.778884447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778397946 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778399682 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.778479254 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.778479513 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.777650636 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.779796618 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.779138886 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.77849042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781502589 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.778841672 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.778911639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778793798 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.779186672 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.787766592 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.778978774 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.779531898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779476019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.778983789 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.779047467 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.778316395 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.780048989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778662848 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.779377257 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.781965807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785036852 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78509096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.78150594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.778747275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.780738593 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.780019887 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.780453846 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781063909 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.780054816 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780192104 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.78165419 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.779830728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.780239408 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.778488369 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.780447436 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.779799427 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781173888 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783536015 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.787379666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780873574 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.777536863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.780545143 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781901071 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.779710452 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.780150039 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.787337475 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783496971 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.790905128 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.789133708 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.785438529 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.780821713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783414913 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.789263932 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.780762985 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.780151739 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.781665134 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.781983066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.781818734 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.78328405 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781590252 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.786773103 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.78025373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.780428201 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787515804 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.784461238 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781781645 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.783263654 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784005469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781111809 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.779971159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.782168329 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.780359859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787412757 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.782940109 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781862847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785330653 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.780836067 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.782721326 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786384463 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782344146 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.783355032 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.78000105 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.782210086 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783096251 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782321085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.780472453 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.78260595 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.782386107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.785617512 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.789549048 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.780842141 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784970749 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.784116857 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.782980542 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783186542 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783195602 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.780288435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.780743754 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782058444 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783428111 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.783060433 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.786380614 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.782611234 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.785107759 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783993982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784224096 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786259925 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.793293816 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.791454366 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.782107218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.783448378 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.78443889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.786356309 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784097495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.78500518 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784746526 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.784506163 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.784826153 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784405614 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.783973053 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.788402716 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798448963 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.784744356 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78456133 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.784291053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787661811 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.784933877 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.782180715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.784019268 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.786105359 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.787553812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.793858185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.785651274 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790215023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784526576 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.786381724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.788628964 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.789077396 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.791677694 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.787973102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786065326 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.786491572 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.790304601 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.801528611 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786082822 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79540331 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813405726 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.786223449 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.786883257 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.786928955 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785416685 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.786401589 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.788820201 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.787403591 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.78748547 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78617096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.787125658 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.787855304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791535498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.787818697 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.787072444 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.786440803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.786010932 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.787902793 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.78421836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.787775695 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.785074497 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.786900362 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.786578876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.78727394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.788050168 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799077603 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.795815715 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.786808744 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.787786853 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.784450532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.790352454 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.789725549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797485477 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.794773332 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.786448888 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.788720182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.78926526 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78764049 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.785916112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.787945974 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787860019 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787553032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.785054482 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.800504875 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795943569 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.79200581 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.789493394 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789083849 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.788464513 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78964545 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78885482 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789065497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.790907875 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788858388 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794250849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.788972278 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.789451036 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.792307789 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.796999184 seconds)
  done (took 1059.583441222 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786590212 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785993488 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787528154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786820822 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786665991 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786991208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787516445 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786587087 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.786114326 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787416041 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786511666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786764303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786472268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786975771 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787030299 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786847096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78720791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786695665 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787427277 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786988068 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786919492 seconds)
  done (took 39.247430863 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.788838915 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.787271599 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786686182 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789340227 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787558214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.790138323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.788050382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790554512 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789981364 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787720949 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.790054366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790503692 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.787943079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.787737299 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787950418 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79144603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791234778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787341491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.789921328 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788231796 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791050991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78900957 seconds)
  done (took 41.083388828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.791780423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.790717877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.791215007 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.789346528 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790926579 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78879637 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.791815075 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.791473902 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.791520681 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.79256735 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.790933059 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.79232072 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.798805985 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.797146778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.793584055 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.792464877 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.936991031 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.792943065 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.792410005 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.792517276 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.78960317 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.796713559 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.789070704 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.788911184 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.790950383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.792793242 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.793206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.792673628 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.792611997 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.792878957 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.797700064 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.792459137 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.791823127 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.794746146 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.791477734 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.793476843 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796227969 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.794266158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.789799515 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.793212999 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.802455626 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.812387318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.794299231 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.79819558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.79340806 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.793201034 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.796402768 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.800521646 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.79202682 seconds)
  done (took 89.755450102 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.79374654 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.793175614 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.790333042 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793662952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.794369861 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.793465357 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.793438289 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.794318691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.791763531 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.791989795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.794933962 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.792855024 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791922647 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79514071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794165343 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792490744 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792978948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791501014 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.79191361 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792310449 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.792915153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.795266556 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.7952052 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.791958215 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79477371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792714954 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792497397 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.794803308 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.792764706 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792671284 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.795095764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.7959341 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795731351 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.792660541 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.792720972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.795061463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.796224274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.793220851 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79647123 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.793200451 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.795798198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795669779 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.796331584 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.795482139 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793450889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.793269825 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793128553 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793314117 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.793481732 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795915942 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.796882881 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.793663892 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79595803 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79386682 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796451817 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797045581 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.79382672 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793308853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.796606424 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.793928835 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.794374339 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796710651 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.794397528 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.796843426 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.797446087 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.795593637 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795433024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796961829 seconds)
  done (took 123.737551527 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797881066 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.797219844 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797054897 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797663157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796822392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.796982552 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796422891 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.796738439 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797947485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797797348 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797152441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.797930763 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.798544557 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79839015 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.797588157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796865883 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.798554171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798154801 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799819922 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798257491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.797872135 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797402497 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797893339 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798267757 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.799264217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.79845208 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7985447 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79914626 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799417205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799393879 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799954342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.799022594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798452764 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.797825766 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799445011 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.79861725 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798497026 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798872472 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.797787453 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799223501 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.800444929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799906683 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798877647 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.799318215 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799723506 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800397164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800011893 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.800607198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799562242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80021487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.799692095 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800493513 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80031287 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80083447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80011009 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800420304 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801310387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800717298 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799881966 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.800527009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801060079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.800216865 seconds)
  done (took 113.266452753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801532128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801198635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.798425711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.797655014 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801128463 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799410761 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800326709 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.799815778 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800058759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.800090174 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80012973 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798333505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798645777 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801148907 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798426245 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797680483 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798602053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798905514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801608379 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799570932 seconds)
  done (took 37.729445301 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.798573254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.801384766 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.79939999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799150719 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.80178134 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799398731 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.80221123 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801818795 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797677472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801172046 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802372488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801671782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799798575 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.799292739 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802256199 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.799898471 seconds)
  done (took 30.544759221 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800178833 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.803195112 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.803082516 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.802685357 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800284301 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.800504789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.803434698 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.800273887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.799645181 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.803065969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.80251222 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.803238578 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.803917929 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.80386592 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.800607586 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803280436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.800769875 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.800148338 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.803083078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.804644126 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.80130601 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.800533594 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.804091139 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.803389784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.80101889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.801847682 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.801010025 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.801083569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.801660583 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.803978369 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801645921 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.801227285 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.801755186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.80060173 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.805455793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.800204904 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.804861221 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.804011049 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.804733857 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804244262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.803636886 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.801211195 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.804235743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804026072 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.802018223 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.804768361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.802595876 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.802676193 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.801933055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.802601749 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.804663698 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.804729283 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.804329136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.80481423 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.804633182 seconds)
  done (took 100.882969894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805401864 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806296784 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802988269 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804461572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.805871429 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802538012 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806534178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802315063 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802741521 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805485621 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803852619 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.80571129 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803218618 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.805358741 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804005739 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805906923 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803389849 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.804375461 seconds)
  done (took 34.219949104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803675427 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804080256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.807077557 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803166931 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.80373088 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805893961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80422578 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.805187088 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806892309 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80379325 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80399242 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.80681122 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806096967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807740749 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80561823 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803298498 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.80657325 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807417985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804220832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804751837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80663297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807877191 seconds)
  done (took 41.459955176 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.806302926 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.806331062 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.822186571 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.825854255 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.828139801 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.838154773 seconds)
  done (took 12.668226961 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805753711 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808145056 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80516596 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808590365 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807269353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805035352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806803134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805885756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807116587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807169163 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805791354 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808513667 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808202111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805555418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808790127 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808622888 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806150649 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806777994 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807128767 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80870293 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806310298 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808588411 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806107276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807350227 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807294117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806868313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809567445 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807561467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808053653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808684145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809565386 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807306249 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808889764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807279622 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810282581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808970658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806034237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810578173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808724609 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806603798 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80952206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809752797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809477657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807570137 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809274003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80742946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807346317 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807409263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807599892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810780109 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809972068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807214549 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809481744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810762349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810831797 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809944208 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80922868 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808451484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810689864 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808905736 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807977015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810355917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808730752 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808996886 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81080928 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809066944 seconds)
  done (took 121.083480277 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80921316 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808259203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808639727 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810419296 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809041256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809283545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809245145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809258709 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809423367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808184564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811248627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808865136 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808713178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808663832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809516249 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809025769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809495555 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808929903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809102275 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812712218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810124281 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809543421 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809102231 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809426232 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810208384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812248418 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811763288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810220053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810051705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809618029 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8099982 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81009361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810580629 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811191103 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80979318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809479123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810707901 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810219758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810000805 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813691041 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810833041 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812840506 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810208787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810693711 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811178849 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811504822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811249529 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811842784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810150575 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810774412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811258086 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811927645 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811801641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811047751 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811677331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811296234 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811827096 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811436997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812230643 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813691482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8124401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811603396 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815078034 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812637941 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812759592 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812339327 seconds)
  done (took 121.249860421 seconds)
done (took 2470.139631661 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.841722073 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.909120545 seconds)
  done (took 15.50032188 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.974976334 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.928697606 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.813461064 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.848570507 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.813647581 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.834837602 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.830945607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.812799622 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.812959074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.813403915 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.812966661 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.998922875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.809934237 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.813314126 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.812777712 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.908149604 seconds)
  done (took 51.404265011 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.817404688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.818092547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.827970333 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.819332485 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.81720715 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.830551712 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.850697481 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.820672006 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.85322932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.830788811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.890706511 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.828827424 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.816813191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.867875368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.829899876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.831490117 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.903656809 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892225077 seconds)
  done (took 34.896733699 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.897346704 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.820231976 seconds)
  done (took 10.475173319 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.835395923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.818809086 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.834070441 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.843042172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.819262857 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.815528663 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.840793896 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84137116 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.825650535 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.814067292 seconds)
  done (took 70.061180129 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.822829949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.819162091 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81954254 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.815274192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.810048386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.815326032 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.81745711 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.809742828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501991637 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.852072156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.824151656 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822429294 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.818402151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.818888591 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.816597076 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.8406549 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94540176 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.815599105 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.815928608 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.82400194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.818442447 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883189986 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.831811716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.818983287 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.847109085 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.505453712 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.826723464 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.824686676 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942268469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.816186227 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.819885091 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.821914067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.822146736 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.202536382 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.09445867 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.81752218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.827467708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.825136981 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.817043975 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944704979 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.819806451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.825031396 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.80522134 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.072733863 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.91135441 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.862143781 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177382071 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.82378653 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.820639392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.849703409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.821406075 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.821837197 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.832075428 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.337447749 seconds)
  done (took 129.869350639 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815033198 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.12017658 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967982504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814611794 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089928409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020282969 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.757975352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86532594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815395057 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01734334 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979467926 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.922645385 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816493503 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.814780352 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.816804112 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.813697558 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976537652 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883517658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817546746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.813090914 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84354481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023861807 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.942605996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.817475151 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.838221094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026349717 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938983109 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923464285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.098685689 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.814226105 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881367016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.818277282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.814753492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813974653 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971241464 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91544653 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907346352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.817603829 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814622715 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814400484 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.482191623 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013709725 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915343567 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.959029732 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.01408411 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021535526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464937262 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.815758864 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.452063716 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.97957519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030850324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.024649351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941299306 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.819579837 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.042428677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815002898 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.816150897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054147765 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963683073 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924371313 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820277843 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.816489987 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816438678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060907563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.819796039 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.916028691 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818710371 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.817165461 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918278189 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926976924 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.959666982 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03254142 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853615932 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.718554343 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.330836979 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032140648 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.887120365 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053064022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819807905 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817496431 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903810464 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568905596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.978967008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067482968 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039923754 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854114055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.413337073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.816891271 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.012502107 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00410241 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.013414002 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027550567 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971707959 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.025743188 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.816945116 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.818293855 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.052675483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958076566 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.821709027 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175325998 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055019153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.389728018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.84205778 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114448099 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953186207 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.186372301 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444989696 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819344376 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.9869147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8592358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.820107834 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817981991 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.01047993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.627055592 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819766958 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.33662392 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.8840668 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.821048376 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022293099 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823977943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029386712 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821780011 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056033238 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.411247787 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854835768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.993829145 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.027574626 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.617959457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067831136 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065990725 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939970711 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.043549335 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.406450227 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.821443642 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096262587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.822189067 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.820679678 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98883059 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822155409 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968907488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824663208 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047428792 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847302465 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976961246 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825172886 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054663801 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.858393085 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873843365 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823156889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955546804 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823470734 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.811250061 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977610608 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824017069 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822541525 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.25019418 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.82333681 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968349807 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.052724842 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848852471 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891773466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.350712091 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820844583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909275652 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.849311725 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.265969048 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.823125355 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.979609776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.765957864 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.264172706 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.822125794 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061885374 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006935823 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.823511697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.823304338 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.563931879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.525901457 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822515939 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.983907659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28372565 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.474134058 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025244853 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825861076 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951604171 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826524508 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.89675474 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168816075 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822250395 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.822029215 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.823856089 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.823751961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824659533 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031346047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.856889817 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.332263299 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.960707948 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042169603 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.13554042 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043571609 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8692917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827678499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088617031 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826032015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.890160205 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.827409882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84843838 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057065293 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827951207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038797449 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075686478 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.725445178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876334586 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.827143661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824825873 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.823844229 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.975172412 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92109446 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826620529 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.824325169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937334855 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953176641 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019536361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.420787162 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.000933957 seconds)
  done (took 887.730571492 seconds)
done (took 1201.685877469 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829794982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.825946207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.816313032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.834541309 seconds)
  done (took 29.071873631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841212309 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.839228862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.840774958 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840377295 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.841757598 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.837969726 seconds)
  done (took 12.814039758 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.892754639 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830382345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833677502 seconds)
  done (took 21.328792604 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.907284829 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.244342036 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.942245367 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.281244937 seconds)
  done (took 10.146926915 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.839014536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.840048122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.839556777 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841780136 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.84153463 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843173526 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.841124738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.841705774 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.842978521 seconds)
  done (took 18.3437209 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.188932465 seconds)
done (took 97.659746545 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.866306652 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.102403617 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.225632254 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.993660235 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.973030481 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.91491234 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.267427058 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.986964528 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.940241977 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.818579998 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.92938155 seconds)
    (12/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.631117715 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.768321938 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.909776249 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.278196702 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.139305778 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.008122115 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.818687392 seconds)
    (19/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.922206113 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.9179799 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173414928 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.519852806 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.722357122 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962951661 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.349190115 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.837708062 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.418621253 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.930322235 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.110122786 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.72653584 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.853533484 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.834517107 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.740983294 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.969258194 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.723794893 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.977025583 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.143325752 seconds)
    (38/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.11931322 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.055541715 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.849929534 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.820682046 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.043131405 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.059289547 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.218629728 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.947516035 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.845144961 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.945109573 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.834821977 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.983552046 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.476281533 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.182513956 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.940992841 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081181978 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.824261021 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.960433146 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.920940335 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.130371519 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.204833455 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.495359745 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.792280428 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.790255593 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.911605887 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.926295804 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.1338468 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227403528 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.006980564 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.938994573 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.727405176 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.237210063 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.864349598 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.885756786 seconds)
    (72/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.970146802 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.985124552 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.825623788 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 4.136318363 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.076268154 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.485474957 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.930691763 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.861706438 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.512055233 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053005525 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.485375879 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.18670613 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195402183 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.92529637 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.175862071 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.022694894 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411855155 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.002395269 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.024114384 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.830172389 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.922208666 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.073828431 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.87865192 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.968841472 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.923489695 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137721758 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.455711952 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.021635992 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.96244083 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.94579482 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.630509102 seconds)
    (103/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.975960225 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83676072 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.211366101 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.835147566 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.124054881 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.037933765 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.14613877 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.294413538 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.770214608 seconds)
    (112/309) benchmarking ("sort", Int8, false)...
    done (took 4.808503189 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.06028945 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.85186341 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071875145 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977810137 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.952764825 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.753460785 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.840321633 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.213588129 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.865165325 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.03396028 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.026394478 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839291697 seconds)
    (125/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.980703257 seconds)
    (126/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115509556 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.823734177 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 4.083182 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.82375774 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.040663435 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.289673522 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.861853833 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.155647092 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.094080171 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.85753851 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.823591471 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025069725 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.013379659 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.051573168 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.941122785 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102021238 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120359534 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.962670668 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.772390548 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.938064238 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.935892908 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.238246771 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224290622 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.93193606 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.824520555 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.945584764 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 6.838947326 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.519551986 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522448093 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.202702821 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082757108 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.866585982 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.081910844 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.04770993 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.418620548 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.900892767 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.906471893 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.361086883 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.864376265 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86614418 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.8964386 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.34585425 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720169516 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.435029733 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.441570762 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085770468 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.842569222 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.032934919 seconds)
    (174/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.359148351 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84665649 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.436454189 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486028157 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.84609605 seconds)
    (179/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.944365992 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.906501004 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.37490458 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216081475 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.428733846 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.140111524 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.869829721 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 5.606721775 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015087799 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220821937 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.827491353 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.894183007 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.968442932 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.869832202 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865264215 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.909556816 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.829238016 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.60715872 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.897533512 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.885085429 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.166099355 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.867940895 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.90348817 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.943209651 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.472937385 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.040581404 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342501324 seconds)
    (206/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.847879958 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.839736563 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407590452 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.852265347 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.925541835 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.43525264 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.866532711 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.826951699 seconds)
    (214/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.815941728 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.846575401 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.489838251 seconds)
    (217/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.64836368 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.968136135 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.165048866 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845104417 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.947945135 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989018696 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.913397331 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.946490172 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.46978157 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.735250446 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.187894703 seconds)
    (228/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.932583307 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.90066214 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948773875 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.854706436 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.037009792 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.509841964 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.868371236 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.024598983 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.442917584 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.863896546 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.837378437 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213173701 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.142801032 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.830345616 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.355269414 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.948901076 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.351144652 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.767813402 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260704072 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.910862774 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.059252573 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.844826213 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.877190766 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 5.67008702 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.163586243 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.871214797 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.84269748 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.991126057 seconds)
    (256/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.929089887 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.143539163 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.052874452 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.844315823 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.304782622 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.67180744 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.974829816 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.860733034 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.753129483 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.292699626 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350712719 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.989757445 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.973332493 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.195898678 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.846166965 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.875114596 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.940492062 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.042225692 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.930580695 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.103386292 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.831298121 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.778656549 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.939110966 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.871892501 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.92730957 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.872578716 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.861040433 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.845501123 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.011739775 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.845984053 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.894094621 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.919137744 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.919394319 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.629135072 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.219126219 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.210271945 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.175837489 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.649702771 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.897513536 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.846313821 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.015067999 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.978696814 seconds)
    (298/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.021142046 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.058670964 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.073003202 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.869218167 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.944053653 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.153013522 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.080650043 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.904273435 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671697507 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93026998 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.504201363 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.284404827 seconds)
  done (took 1006.383248312 seconds)
done (took 1008.22139607 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.883278699 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874482942 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.859703341 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.88155962 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.971254182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.888277684 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.870320342 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.861849935 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.907673328 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.908764609 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.858615692 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.886275002 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.860941544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.858877207 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.858666789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873931979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.165970343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.885097126 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.875931989 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.870211354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.875556072 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.859435589 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.910635063 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.888142185 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.863406075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.863723019 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.863660334 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.879489195 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.971104572 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.863563764 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.863830328 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.872284667 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.164949258 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.885675332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.855499039 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.880364924 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.872729214 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.870583668 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866215675 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.892194882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.307133652 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.865914022 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.862194112 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.861601921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.862016917 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.865285474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.862813954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.869405058 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874668797 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875312265 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.303764772 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.882918225 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.864751517 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.863168482 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.873069623 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.86152756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.865023883 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877941328 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.881497939 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877624502 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.156336614 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.893501411 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.864451904 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.878742362 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.870197277 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340861914 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.865655605 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.867569902 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.313043583 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.873964171 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341099341 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.876879599 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.864451069 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.876737007 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.895037789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.168130098 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.883490455 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.862289427 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.869840727 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.861434503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.873333305 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874921169 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.867592269 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.864021087 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876756738 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89215969 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.874173334 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.865023748 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.87397953 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.882739442 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.871038334 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.874505774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.868061156 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.860304747 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.873899938 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.869732131 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.866651648 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.867238928 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.868316514 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.875875107 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.307199364 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886404799 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86260884 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.861912334 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.863769403 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.878771159 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.309108024 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.870896758 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.887599843 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.913756392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.86763308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.159346499 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.893541475 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880996314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.874367546 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.868953478 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.860398311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.160452427 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.330894101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.887069436 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.867223416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.863958801 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881681574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.867716691 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.862965814 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.171118104 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.891585611 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879221025 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.986525287 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.876397567 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.897898467 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.865124545 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.869043336 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.894157751 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881724104 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.897578565 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.870112482 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881202751 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.882594238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.863090065 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.877879392 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.878568909 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.868294384 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.872324517 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.862423425 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.899044961 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880480033 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879511794 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.888379698 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.98748423 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.865185757 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.161403155 seconds)
done (took 292.980998899 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.942573251 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.85649491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.969130578 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.863689057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.957785691 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.950701168 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.860327513 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.860505326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.860198562 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24094426 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.860194849 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.860576591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.858145973 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.860283142 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.959779189 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.863322155 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.860137363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.204309077 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.864249924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.945983159 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.855333578 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.860877396 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.863601877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.247997207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.856119368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.858203961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.933568401 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.863360107 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.21110213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.860247324 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.857681375 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.211223303 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.953814642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88130312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.874762061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.870540897 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.949234748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.868744321 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.944438358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.957512985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.964673367 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.905407005 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.859620493 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.859834105 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.868196652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.865402714 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.861950882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.892359227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.858884472 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.862322464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.206144834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.874984331 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.872223347 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.86254234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.86269206 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.88635041 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.862561402 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.865388465 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.969931545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.866415079 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.927663195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.249657823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.24331196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.86533454 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.866425669 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.862754582 seconds)
  done (took 184.018297376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.931793129 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.943807587 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.934013908 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.868772388 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.358838361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.938622672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.869279048 seconds)
  done (took 15.641481859 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.872385651 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.867246407 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.915976673 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.916094909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.867055427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.01599979 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867746639 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.877013623 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.864111114 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.919418017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.866982876 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867500135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.87359651 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.865810122 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915134851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87800413 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.981607382 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.866622177 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.867451485 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.022937866 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864315481 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.873797722 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920470759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.878568564 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.867727445 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.873401321 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.449240174 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867872917 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.86471345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.867578105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865507593 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.909514022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868148928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.862137067 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8650259 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.983900418 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.868006624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865468081 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.867518256 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.86564367 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.867551886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.867948665 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.868497654 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.867053407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.86843907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.892311961 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.867671996 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.869409819 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.868691777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.870126738 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.919287704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868253514 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.865104182 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.865430862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.924224121 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874805538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.870434649 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.866141663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869013604 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865278831 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.025954747 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916166485 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.86807035 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916841361 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869422524 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.869304967 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.869322366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.868914562 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923041846 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.868978018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91653965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.866772756 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.028773239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.892238856 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870079794 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.872952934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.872066837 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870151733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.870368744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.876312622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.866876128 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.870731181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.875603363 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867698568 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.868419002 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983921657 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.979815264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866761834 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.883773388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.877198262 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.868572857 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.923171263 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.869486052 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.868619031 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.922152892 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.984859868 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.926901604 seconds)
  done (took 205.670796264 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.875688444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.87897956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.872622802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.887801132 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.870189206 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.870296103 seconds)
  done (took 13.058829534 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.873933189 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.874336284 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.871402233 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.872626512 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.873026824 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.871898086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.871171021 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874210719 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.876582563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.872096561 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.871867951 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.873348595 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.872856776 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.87175104 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.873084531 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.872953968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.87215146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868701731 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.871998641 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872591783 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.015102563 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.871401879 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872817153 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.873085619 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.877400411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.87201297 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.87969395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.872973946 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.873052812 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.878191132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.876187046 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.87278582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.873674648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.879261293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.876745258 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.873428411 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878071402 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.873382683 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869929222 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.874578027 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.874551223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874061227 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.873925525 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.875525177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.875823752 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.878750464 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.878695911 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884037999 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.87485616 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.875033302 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.875757006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.874242104 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.874662141 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.874623111 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.875931488 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878598678 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.878952168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.874637028 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.875023071 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.875042449 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.874653754 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.874792362 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.876490954 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.878080986 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.882385894 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.876416756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.876000106 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.879473545 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875694541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.874282967 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.87598052 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.873028153 seconds)
  done (took 137.931437106 seconds)
done (took 558.131525028 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.121689106 seconds)
  done (took 8.927715359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.059630108 seconds)
  done (took 8.953495374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.417559749 seconds)
  done (took 10.22375613 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.889048483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880257484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.880269172 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.870352495 seconds)
  done (took 29.335332818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.956275158 seconds)
  done (took 8.762857314 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.884067617 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.867372072 seconds)
  done (took 15.592793385 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.972341938 seconds)
  done (took 8.778949808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.025925582 seconds)
  done (took 8.841562426 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.889549384 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.877115191 seconds)
  done (took 15.586840704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.855545549 seconds)
  done (took 8.662973801 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.551449154 seconds)
  done (took 11.368500754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.876855681 seconds)
  done (took 8.696673069 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.942276903 seconds)
  done (took 8.749763215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.052788811 seconds)
  done (took 9.860201664 seconds)
done (took 164.148203958 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.87229597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.870934944 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.871448683 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.871828776 seconds)
  done (took 29.294569767 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.909138676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.908763388 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.91119455 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.920689906 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.912447299 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.911028648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.902562027 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.902314838 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.920100973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.912700365 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.91201695 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.912431952 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.910637141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.903326582 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.912114605 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.91179939 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.921041476 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.911005222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.902226443 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.914544388 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.877900639 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.921460238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.913600105 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.879065005 seconds)
  done (took 47.62237277 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.074802987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.948094251 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.030256019 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.929742194 seconds)
  done (took 9.791754644 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.928762555 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.931053217 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.94286501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.981169451 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.007097086 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.940388255 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.905071652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.899031368 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.885296104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.931256251 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.006108477 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.947880663 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.030816634 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.878028301 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077151552 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.877816764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.878578684 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.929858237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.981117279 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.995811844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.878959133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.929307484 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.933901353 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.947448842 seconds)
  done (took 48.455056855 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.877171682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.886222401 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.883032479 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.878141427 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.877359269 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.878647819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.884411721 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.879063843 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.899237269 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.879372943 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.877530516 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.878410944 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.878054503 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.877977725 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.878012373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.891300867 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.89160952 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.877971443 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.881781456 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.88407496 seconds)
  done (took 39.449798921 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.872745241 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.727351916 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.224547044 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.129790988 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.87409607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87564135 seconds)
  done (took 31.514966325 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.893035095 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.884435225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.879810132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.93555412 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.01751397 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.888073905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.881210737 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.889310804 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924747104 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943861317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.899051636 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.90706907 seconds)
  done (took 24.75597782 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.87443434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.875690088 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.875201717 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.891600912 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.890372407 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.887055463 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.886710555 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.873451876 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.892590994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.898224744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.887440212 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.892053521 seconds)
  done (took 44.440414382 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963249899 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.919512823 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900049103 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560190143 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255980529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087096849 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.482714846 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217817307 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.881183338 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149170281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894393037 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97839999 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.131480242 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375343979 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908625586 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334074972 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170827943 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086890938 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904735817 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541376827 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940785751 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058820998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.607110093 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932226422 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08884127 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010234467 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.138012582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.876110439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011041973 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91455548 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887936517 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87683218 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150826532 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253855946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983306889 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887291416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492471442 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.598414257 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.862113825 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.630136908 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.570833716 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995135651 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888067488 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878231561 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812496304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030472704 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256492907 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.885689875 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.589278843 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877979297 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88884435 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972750567 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.881853994 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.696831627 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79089815 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882340598 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.87655885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885258584 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449925826 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979458416 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074218384 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.851942551 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.970546677 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541915103 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268015256 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.025594859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.883247871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882987551 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814873702 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.620827851 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936440161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208049798 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.9004515 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528958885 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177475083 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934170506 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822733455 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15133428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416453712 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853341549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107836044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880845236 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816386697 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.830162885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81517572 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148160667 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918481604 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.648618455 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922689993 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21880936 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892796882 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898032679 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903364167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104891326 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.764763599 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879850822 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.64278414 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033524646 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902080903 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219225739 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817517476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.885179308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138780549 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.092575605 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.95441948 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372115619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039831202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431845634 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.933980331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.038068033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929455076 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.146956082 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937683408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98049846 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936152361 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882224768 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17946086 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477838997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.019842797 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.942515166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009887362 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206662306 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912461727 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96435619 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892318795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881579301 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.651856629 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43669929 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.883355903 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.884509702 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958392379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929233635 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.883824238 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836019055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.512601503 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926917043 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.898908811 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106502765 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.447151283 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194861031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817971383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212938232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976591894 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.10575473 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524843725 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954684772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144210194 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963380259 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009130631 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93172874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903226008 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982608825 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905841002 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.039553084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176513799 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.888274136 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.888834365 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.650181901 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921116965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8841416 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.890040546 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636732675 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161816933 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907743737 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890554258 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779368325 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.90045792 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949599241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890568432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895021359 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.42020898 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61458954 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.894512583 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.475921456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110449751 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896986066 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.54986351 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006325562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.975370799 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164643122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94490683 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.821569086 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.5974699 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.579909177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886344801 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821712651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886914453 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896638385 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898532792 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.080407338 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158752436 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928839234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.553033408 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.930328994 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897848294 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.892376277 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887542073 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.399187011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994949176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080828685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931130157 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03134178 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902347539 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823096796 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891355675 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89268533 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888534295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888852207 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919945322 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.556932538 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263980231 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151285458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498026764 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904353458 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.605231232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.945409325 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889403128 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516669203 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167168884 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.925794388 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909317531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.899193794 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.630153138 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.597487541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459240791 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188744844 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203562867 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317655204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.09539749 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916763034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230425967 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824896782 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447064664 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947477595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236177341 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835770527 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977749507 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.531253324 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228271368 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903755314 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117263083 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268685212 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.619693788 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027173053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101198357 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924326938 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.043724191 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849762646 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.413381531 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032308287 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.555707108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090997331 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230517777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538996393 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.008528805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.889271975 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579819722 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9771006 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.605129465 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064098587 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077636467 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.81147371 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361258204 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8994496 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117041962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238533481 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058633542 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.018002368 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829283686 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902149766 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901514894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.891919062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.89058321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.776250127 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.144843563 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903221647 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825193946 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.003089907 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179604446 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.793238088 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.897680258 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891003539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190942844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.425164475 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05649708 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.997448458 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.410486291 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8996545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827099059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8262088 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.584814129 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897887987 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868208986 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116024238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.99300494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838621089 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979403468 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972064947 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148580685 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.90663269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165526899 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166893545 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.590707424 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920040751 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.993718729 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.525305969 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.995157208 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895274694 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130413161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649887657 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124136991 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.927874663 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.85206951 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.893088746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11068091 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89500577 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.771206238 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118348298 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.617924663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.908259966 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19493102 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968088167 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.766788887 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935457136 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.987891278 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905556477 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976210542 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906230279 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.906894065 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907255468 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946086581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785498433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013234211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.910261831 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990761567 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005606134 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.423855611 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903670662 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172634604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250457488 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216321476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953020942 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896251398 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89713837 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831470259 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046305231 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123066497 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170457374 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028006267 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.013148618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921714559 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.536779189 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107743461 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138718458 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171951142 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.793112544 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402587053 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937996324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.898958799 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909423802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.10967662 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11931268 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201825663 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047657704 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975155354 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267123657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173579024 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898621947 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897648782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488613757 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.908506165 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587583667 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.940499949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.768732098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168349489 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909130398 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274368075 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922661008 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055217224 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.672313006 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601363271 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189791092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885517498 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956671947 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174576734 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282914894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209897391 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966794884 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910039281 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.008825227 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046977757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.782582585 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900287103 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901167391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948938599 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.609782932 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909707309 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171446073 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208736155 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.897728915 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.793035614 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923801027 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.909201182 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123559134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166213863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155467072 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911299789 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906959978 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.716642897 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169527144 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956755859 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835630058 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.905453003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998036766 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1497974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921389705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.354973032 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612113206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174488454 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.902738339 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923066314 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059026871 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258259282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217311604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4361727 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109740848 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489828504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474998457 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202579725 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.907666866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.065844683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204219047 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.906362139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.984097595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940586333 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174211378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211222981 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.915366213 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575028965 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.87168437 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244672182 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460169414 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84375094 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91264867 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962311973 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904783968 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031739447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915928003 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.805443354 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063359751 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685940427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187845934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.909765514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.891638102 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.588183723 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.184788482 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936483762 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045556406 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907187083 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.577407719 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.255081385 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15915305 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.988824214 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.91111407 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907305862 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904660377 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891751008 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101659925 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.101488136 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179015852 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.011165974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940904376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908687223 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.122104615 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116984904 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.747468659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035083225 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996918227 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947384782 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.812279358 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406150809 seconds)
  done (took 1683.202043982 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928517223 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.919835521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.969742844 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.009562492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9693323 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994800407 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.920713556 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970176425 seconds)
  done (took 57.525229134 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.905222356 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.101863427 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.913857556 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.905253826 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.930992743 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.905455348 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.070781399 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.915039378 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.914569634 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.914858527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.905625021 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.904957195 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.220964232 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.928996992 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.906060508 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.898341248 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.914125959 seconds)
  done (took 75.018498315 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.907932058 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.008534231 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.93315353 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.919381062 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.867973914 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.922041962 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.718539328 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.916478869 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.932400937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.135542548 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.547626247 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.922757339 seconds)
  done (took 90.576459004 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.91541831 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.912019484 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.913571245 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.913952906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.914764067 seconds)
  done (took 11.417653769 seconds)
done (took 2194.897260151 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.161345415 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.124848318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.127808001 seconds)
  done (took 6.097324935 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.056546995 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.10512496 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.223871105 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.229477074 seconds)
  done (took 10.462549378 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.197825023 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.275911018 seconds)
  done (took 6.318380012 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.31210987 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.912373643 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289611635 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.906541437 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.909765795 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.90969984 seconds)
  done (took 22.575236279 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.912276225 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.913784924 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.911748155 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.914699501 seconds)
  done (took 9.49729786 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.892646557 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.62449648 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.893431712 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.906336583 seconds)
  done (took 21.161692033 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.659617303 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.67124268 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.655745761 seconds)
  done (took 9.831840048 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.423415374 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.792119611 seconds)
  done (took 9.061344333 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.18042111 seconds)
  done (took 4.026048548 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043835558 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.220288378 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.387234041 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.414184846 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500348152 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.596687131 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.231987036 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.156574193 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.312863728 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.344583731 seconds)
  done (took 25.055127548 seconds)
done (took 139.606703859 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.295768572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.147180975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112962372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.250757144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.145053003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.113428395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127798724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.23212109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.760389225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.755976655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.249377611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.150673439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062062308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.148746969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.062934885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149165255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.146564999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.31864303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.946335115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.146849236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.114579343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.890432311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.094411114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.905410894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.140131861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063947429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.470999038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.15121556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.101286344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.479471922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.065026336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.299286734 seconds)
  done (took 173.946173328 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.830438199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911262611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910375489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910669816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.370463613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911730297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.912958483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911196985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.157684054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.145539792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.91560461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.388357229 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918877372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.912584142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.918333934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912801259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.296845924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915127947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927514232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931748861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933854311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.324435886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.930274917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.346747826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.310435625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931644763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912730676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932888697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.91324127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924003429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929716871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.913460666 seconds)
  done (took 210.163749023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912674879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914667671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912449264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.914515667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.914765247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.917385321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.916047877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913796078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50513515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.504857524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.927744108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.922650413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921944151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914336334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.934166347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.913859761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.925938898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.922744764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.925126716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.932010262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936117175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.659215453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.937611894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668063854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.927525204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91696168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914554746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926397973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930832231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931606088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93432545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914607302 seconds)
  done (took 222.031891662 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118876948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922328145 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.92315111 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.8754066 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.923345632 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.923769098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.915015788 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.119207371 seconds)
  done (took 20.062018845 seconds)
done (took 628.064068706 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.511158126 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.266428462 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.111692454 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947705315 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.169366284 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.986233364 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.943684431 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.011759263 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.683514772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.015045072 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.608828514 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.963085052 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.690052292 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.970920485 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.073295847 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002126141 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.517626709 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.605015924 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.124411434 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010158397 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.130045643 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.933672092 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.021841734 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.713484812 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.71097298 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.942715926 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145156032 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.524872944 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.956164149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.11127605 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.707041534 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.36346519 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.957853969 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940916194 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.995381805 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.977968015 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.31453178 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.957009732 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.070561788 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692179233 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.987800913 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.564845059 seconds)
  done (took 105.786606799 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914607799 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.91315681 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.911478661 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.9130975 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.914198662 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.913514003 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912443916 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.911329553 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.913222519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.911695683 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.912470305 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.914351277 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.913423806 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.914149635 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.913278854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.913603573 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.91447264 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.915549457 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913806562 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.913850729 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.914942211 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.913061602 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.914371942 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913276276 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.914004007 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913906011 seconds)
  done (took 51.619314789 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.926395822 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.070996365 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.154598291 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.94647699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.926942307 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.93031161 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.946155762 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.932725278 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.928673394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.928016463 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.019078983 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.934349563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946082979 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.153064179 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.943209819 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.927107609 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.927846532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.927264522 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.077650403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944572015 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.948346936 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.932118157 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946192812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940947902 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.929504051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927700847 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.931133074 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.360173953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.936741211 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022009428 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.022001802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.952245425 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.320734679 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.163185801 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.995360762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.938172701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.928854463 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025310714 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.934478538 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.928390726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.946116578 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.933849455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162911075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425799908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.942734471 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929980312 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.372348851 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035025338 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.971223381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941847933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157256178 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.946164181 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.93095608 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929822682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.966247754 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.939910763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.928300773 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.238268384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.941005302 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.947728754 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.935077013 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930213932 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084886026 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.9381569 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.074762214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.938355311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.937450535 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.931248239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154576208 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946884037 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.426615577 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.944173726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.930170963 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022807602 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.078730747 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.397879819 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.943652527 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.088425931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337271493 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.954862537 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.937803085 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350646141 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.958478173 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937488688 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.932427171 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932593675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.931274182 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.975142992 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947423303 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.363280735 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.434658688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250984725 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.95928798 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.946495193 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.931912208 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.238608473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940854293 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.932603905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149617764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443151347 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.945273231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.93951239 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413490873 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.94728888 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9516305 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.940957935 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.16030326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.947814275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.976377248 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.932319067 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.939431462 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.935378194 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.952275653 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.939469617 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.93241516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.404988761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044846062 seconds)
  done (took 238.818280063 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.927531774 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.926467627 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.925544803 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.92694254 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.925812822 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.931987044 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.925764229 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925631162 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932637568 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.926546876 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.92627773 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.928934781 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.928977886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.931155466 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.971868743 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.934493633 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.537185688 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926174764 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.926375438 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.929560854 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.579100864 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.934669522 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.926846473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.928447553 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928331988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.927682831 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932732947 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.963542756 seconds)
  done (took 169.203250555 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.935309619 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049652718 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.952293558 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.962941138 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.942956608 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.932717864 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.957412705 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.950592744 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.93901055 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.932778698 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.933142011 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.995984982 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.946248832 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035808015 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.966649324 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.966152227 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.039031331 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.943619332 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.932770549 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.933120026 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.962828899 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930311007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.995572799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062334523 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.953219923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051067906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.940796398 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.936479041 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.936117592 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052397679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.950991664 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.995579198 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.963248248 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.953200184 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057429435 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05309016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045153751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.967528088 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.939311006 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.933809742 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.934396979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.92455467 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.053406782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.956521566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.936345448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046257441 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.957604203 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.937445397 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.945409306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.936995771 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.950041645 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953828604 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.004031585 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068922273 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.97160767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.96202249 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.961707306 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.226144759 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.946493201 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.037499122 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.934053752 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055242552 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.95929144 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.925194808 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.968 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.941970615 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.96730393 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.968482376 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044204321 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961570004 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.039479702 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976153964 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.944037148 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.937251363 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.943460064 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055420657 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058559942 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.975398129 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97422803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.973719875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.93385557 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.937422364 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.927487765 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.956613423 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.945104648 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054055701 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059554216 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949193261 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940148591 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.943524516 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.940663637 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.96466839 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.0653159 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.976018435 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.040433763 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.00993361 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.013760791 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953756281 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.95143701 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.942320737 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.006720669 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.954171902 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.950117003 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.27708041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.013539599 seconds)
  done (took 209.818717434 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395794867 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.997461969 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.99467877 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.214156127 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.370138892 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.758539146 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.987187494 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.989270856 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.01379223 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.143330882 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.048796226 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.002891874 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.97547745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961983284 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.987437447 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.008751982 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.991770985 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28695078 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110073227 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.124487202 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.971318467 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.288796525 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.314097621 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.374873731 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.023222467 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.312318896 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667535569 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.23395776 seconds)
  done (took 63.425316409 seconds)
done (took 840.523866024 seconds)
SAVING RESULT...
DONE!
