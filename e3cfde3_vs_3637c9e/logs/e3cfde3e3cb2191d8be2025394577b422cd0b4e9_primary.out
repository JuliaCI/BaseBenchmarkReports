cset: moving following pidspec: 13951
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.360727382 seconds)
loading group "string"... done (took 0.576509112 seconds)
loading group "linalg"... done (took 8.097933876 seconds)
loading group "parallel"... done (took 0.170162724 seconds)
loading group "find"... done (took 1.208695441 seconds)
loading group "tuple"... done (took 1.921070738 seconds)
loading group "dates"... done (took 1.314096532 seconds)
loading group "micro"... done (took 0.219824715 seconds)
loading group "io"... done (took 1.016917478 seconds)
loading group "scalar"... done (took 39.78317751 seconds)
loading group "sparse"... done (took 12.450256546 seconds)
loading group "broadcast"... done (took 1.004168837 seconds)
loading group "union"... done (took 13.696387071 seconds)
loading group "simd"... done (took 4.789018796 seconds)
loading group "random"... done (took 9.317732272 seconds)
loading group "problem"... done (took 1.838835515 seconds)
loading group "array"... done (took 21.374543734 seconds)
loading group "misc"... done (took 1.786029508 seconds)
loading group "sort"... done (took 3.3408457 seconds)
loading group "collection"... done (took 18.025333523 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555002417 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137382715 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146492522 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133530406 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163771949 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131085976 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13964027 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100124055 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.858386596 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162223423 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127573855 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422297234 seconds)
done (took 5.475996898 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.188953224 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093097902 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095096278 seconds)
  done (took 1.2508403 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.081127458 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142501765 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082387535 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083028078 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082912309 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082961566 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082537048 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082558346 seconds)
  done (took 1.702157537 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08883706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084483212 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081882251 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.083733935 seconds)
  done (took 1.401795714 seconds)
done (took 5.69802627 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801909822 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232308302 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201902269 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.428592976 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151165983 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.197492704 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659306832 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341850749 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205190124 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094988316 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130350129 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.36131134 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143088678 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650892124 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094853537 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109422577 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15839957 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440931875 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08667919 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100849868 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108385196 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146635936 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105288608 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09178093 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.165435391 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086270826 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157385266 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102328628 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084933895 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.232882864 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190913635 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677230882 seconds)
  done (took 10.841915873 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114713729 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113557974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084941698 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141941387 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113337338 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085654863 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091515045 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084097751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105593346 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14457707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.106732819 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120918103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082310753 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083345667 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10274678 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228610583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096755221 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09723016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084206831 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094251011 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122721649 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093746517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095559482 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095623081 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144459174 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195845878 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11255408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113732617 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.079737868 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096939061 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132820141 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142573444 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081779143 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080577488 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140436767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110407521 seconds)
  done (took 5.120010576 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.991661832 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163692843 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106098052 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146924707 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080950351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124293244 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082180946 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096537105 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221749765 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.445200264 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638902116 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151422497 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127909421 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120023217 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084216842 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085044692 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083672886 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.536492128 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.117500276 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123756232 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096894183 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085822239 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085253947 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.080387751 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087170931 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079308535 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08656286 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.126922553 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091644989 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.315656673 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138792321 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084666109 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952413469 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.181502642 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084515396 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117323486 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182697816 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107545524 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154374632 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083183964 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07955635 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.31261378 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081118743 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090804614 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083281175 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100590221 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120904 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136753234 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081101918 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081686635 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183997699 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081113242 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097773057 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.151750931 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169702751 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08248849 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312206981 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109121451 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091188289 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083251471 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182997209 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13480337 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081624496 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080815864 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084400355 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083096813 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084693303 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084128519 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410476951 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081481363 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.196204448 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084885221 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093404439 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086360078 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087131076 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090006925 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089773085 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105823111 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082708608 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089468549 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082217568 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081605808 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082225802 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09486767 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.406753576 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08283432 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087999017 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08038069 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107174015 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11228497 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082275835 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081443029 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115805369 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083716311 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081961945 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084466378 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094752902 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085831369 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12777539 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082655382 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.207501792 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122336362 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119179607 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085706797 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115335475 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093950707 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084268578 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.4843115 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081447816 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089072694 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081666368 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084072277 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083154589 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080089194 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094243547 seconds)
  done (took 23.891174086 seconds)
done (took 41.909400499 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.264826998 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083677682 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084096532 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082379183 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083302994 seconds)
  done (took 1.750701407 seconds)
done (took 2.885705846 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141887799 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114546522 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080578704 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116111978 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080648268 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116586021 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116115707 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09236378 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115527629 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080287257 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113188492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080804584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080500862 seconds)
  done (took 2.479083286 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096727254 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096852278 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083289996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095915504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079647655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096193734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095522906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102410183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095079913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087565815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077596233 seconds)
  done (took 2.13451255 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095357591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083113142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094904121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077129547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094804496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095261612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09837435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095296464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088313427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07694109 seconds)
  done (took 2.119187823 seconds)
done (took 7.855947067 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090429727 seconds)
  done (took 1.203458125 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541596506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.604357295 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092417349 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115223161 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.208774785 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125967151 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.253474114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.096903342 seconds)
  done (took 8.325731452 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.121898762 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086673144 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086894254 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084776355 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083208423 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082760311 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082480803 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085438538 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082424258 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084715183 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082534434 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082875648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084147475 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085478992 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085954309 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085853012 seconds)
  done (took 2.586418751 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11072288 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11061283 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089106567 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090357259 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088252803 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.087513006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090524552 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089559988 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086535778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088340841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091053117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088960795 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086871764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077400047 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087401253 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089471986 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084091456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087721605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088096482 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088781267 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087944111 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077002613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08503106 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086908021 seconds)
  done (took 3.363545862 seconds)
done (took 16.602874981 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120619145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083052054 seconds)
  done (took 1.324664102 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0927153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094315701 seconds)
  done (took 1.318295671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09369681 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078452882 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099332504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089909993 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079011579 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078462207 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.097599327 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079296858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08061662 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080851419 seconds)
  done (took 1.988912341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080550171 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089305935 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.081773539 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09236017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085181401 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.076931252 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083724822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080608515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088547874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076255573 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083634802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.095529755 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083478944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097266765 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084000418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081372583 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083083569 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080021692 seconds)
  done (took 2.658453515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078731367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079447495 seconds)
  done (took 1.293870799 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079673391 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076112077 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079324184 seconds)
    (4/7) benchmarking "year"...
    done (took 0.078740545 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076273311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076475959 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076406402 seconds)
  done (took 1.674453716 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414182342 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131247362 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333672911 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087881842 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.097153626 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277788727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081984835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087798168 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087029348 seconds)
  done (took 2.774282868 seconds)
done (took 14.172239622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09687989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100233191 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108497229 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.391646568 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106329227 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080817987 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129231343 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192688914 seconds)
done (took 2.354560885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.230412959 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.798357325 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.495587706 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219696865 seconds)
  done (took 2.651703877 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352636095 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100895565 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073209012 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081320002 seconds)
  done (took 1.752686403 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082775496 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083823367 seconds)
  done (took 1.308638336 seconds)
done (took 7.08829124 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.202840895 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080901669 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078186572 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080501431 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078329469 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077955899 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080129487 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080117749 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.080583854 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.080730334 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080137593 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077970608 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077439503 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080254354 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105115172 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077610637 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080341623 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077463977 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078004656 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077598012 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077873444 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080256352 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078724712 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080532954 seconds)
  done (took 3.226533385 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09654006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080052634 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084036489 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084002737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081715523 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084258185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08457813 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080104543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084331213 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083558307 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083644343 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083015591 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081906271 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082239879 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08248439 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082215297 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084761973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081740775 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084282174 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08409309 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086296173 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082419941 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083791303 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086491862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084142048 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084428087 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084244202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082118566 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086706855 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084113612 seconds)
  done (took 3.67256694 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083601437 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076429914 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077768262 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086053189 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076859354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077813737 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077441399 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077195337 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077766636 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077207282 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078670956 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078612736 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078856433 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079111806 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079810481 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083097059 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096698457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078310047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077629792 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077916113 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080873936 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076506352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076662075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079311602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07705123 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076396738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07761905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076599777 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077554244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076347958 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082607764 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083249279 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079004541 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087280356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083003383 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078361528 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08368662 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077233241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077620252 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076277402 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076189923 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07679282 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076948453 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086066771 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07722531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078229569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07730723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07799372 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077864673 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079645614 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077324902 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077231311 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078902563 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07792911 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081947981 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076598087 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077691991 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07654118 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077617575 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076889284 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076778815 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076503479 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080647652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077572699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094477378 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086026499 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076953087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07876183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077702438 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080955118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078964589 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092862088 seconds)
  done (took 6.878005006 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101388708 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10034991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079573132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079662045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075121789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077730073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083586714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077758778 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080539736 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098313608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078117978 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080588312 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082130335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084425855 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079921952 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082258749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08891008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077357266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0800027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083743983 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080250979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085079561 seconds)
  done (took 3.007737273 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160790212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08348481 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.118890966 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088494592 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083448645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088643205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083703712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083883699 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084169515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081462621 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081489766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08350489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083144833 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081714762 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081900836 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081716613 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084036668 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083197648 seconds)
  done (took 2.779062754 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090371233 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08045382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101738587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080009619 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080239709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082176114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083860843 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088721299 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08399892 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082043922 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089731587 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0842625 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084381396 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082208525 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08480298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082045546 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08442233 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082134383 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089376805 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095722032 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085906386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089875685 seconds)
  done (took 3.050690831 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093987875 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082035037 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094807726 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082154601 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07497696 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077465331 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079861903 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083732761 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082374421 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082014555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079697117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084354713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081479586 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083878788 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081622562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08341647 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081754122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083969641 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07713564 seconds)
  done (took 2.81852442 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098695075 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081670852 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081051903 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087367968 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080419747 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080657043 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08711113 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080768513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080722817 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101479432 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080964122 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081383377 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086928224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084665396 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08055005 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08678045 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090030006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087116162 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080820163 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080962695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101775615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081042808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087405781 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080555951 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081035919 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080534005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080914051 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084574354 seconds)
  done (took 3.544868079 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081033826 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080825148 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077428203 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077947863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077942948 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077813624 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077922983 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078000341 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080693776 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077740895 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080158353 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081904127 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081698049 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081949935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082160735 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0825122 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082092198 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079848135 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079713987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079753178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082489049 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081766007 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08190955 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07908118 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079349214 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081753495 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079490401 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079703751 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08176281 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079425822 seconds)
  done (took 3.575235478 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087805322 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087885509 seconds)
  done (took 1.345827061 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076019206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097196021 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078088755 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086945433 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082900556 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08072175 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086976297 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08324726 seconds)
  done (took 1.835333369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099093196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.090150999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08130387 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.089098754 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088506402 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098391096 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141166718 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079238965 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089727308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080485369 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095634528 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081065253 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089977357 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084569332 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089922213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093520404 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076792929 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.083784046 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.080951019 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07819305 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080671184 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092091412 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088954591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.074652617 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084730157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106222242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095611663 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.078864844 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086100577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091585601 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089199975 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073894018 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079008276 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079308205 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077439396 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.088141304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097388172 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086224505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093254826 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081698326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08942983 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076357945 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090086936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092196024 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094988346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.078911087 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079630541 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074313878 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080379182 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086051816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075266798 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084543765 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074392856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091380943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087693945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094782743 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078331958 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085633172 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086428226 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086591669 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090616126 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086184609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090349149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080316936 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094815939 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089332108 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091453119 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07431277 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073764697 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077524848 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092884471 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107504774 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089504695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079538797 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079923116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077169904 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086032737 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079311713 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088388603 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090774303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078955196 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083644065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091227233 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084163358 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085701006 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085123799 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07769335 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081166151 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080179576 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09859005 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07797185 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077092878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080004229 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094181637 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08841556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078958842 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080117784 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090534354 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073946619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079384961 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079488618 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0839698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090931447 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081705599 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081902778 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090781453 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.084714359 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082692041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084565843 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075122324 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077934436 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079580729 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089049737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072163075 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084044204 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081310076 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.077771635 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089030595 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.076094803 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077464008 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.216924561 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093289332 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08166752 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080012822 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090620592 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081848059 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084667552 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095757722 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079589619 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077111365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076774235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090298261 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080936825 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089938112 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085468646 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088654896 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075995959 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079993816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086199945 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094317779 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084408858 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087000383 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091639066 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087244769 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080756284 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092986796 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086731071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081690448 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088598613 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083222092 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074576507 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082503179 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086100201 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.077953544 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08664636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081712382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086089292 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080294646 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078375033 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084908524 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079697164 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081728685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084588632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078790152 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094457727 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085422903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074930122 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076953707 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085797867 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080592146 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.078230523 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081620145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085513203 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.079307405 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077146546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079389161 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085251121 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086371081 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081774811 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080030134 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088286933 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096406135 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.078547263 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086303867 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078910987 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079713028 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079320673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09297975 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089354583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082986962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085567483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076709765 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088328503 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090910767 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081601848 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077625019 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081588691 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082638402 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090127 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082289976 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.079336794 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077651404 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084768564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081023632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085209558 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078537876 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081578064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083775421 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077450408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084627694 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079636656 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09250458 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086245844 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074623745 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081413285 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077492548 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089780937 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.074389389 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080001348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081752642 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079389209 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078167515 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087293425 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075878262 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093708744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093561023 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086433512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082563177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.079302002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092216127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085341822 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088099096 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086660541 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089476992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095032967 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082903377 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0856206 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091941646 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077344349 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072734491 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089736195 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076167337 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076544383 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077099111 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.076221481 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.214657093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087765626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090310437 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075826262 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087117401 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078646437 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082146298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07503644 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088083837 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086736228 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083370734 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091494718 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079821875 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079611084 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087302018 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079010261 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.079628038 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.079848627 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086154352 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079382282 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085698201 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081725084 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085870186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081883794 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077328935 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085572003 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079087142 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08500354 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08842177 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.078689455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085158633 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086126182 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.079544563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085948636 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082860203 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081636896 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08711217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085243117 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083937598 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085971019 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074675134 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090897723 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078694746 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091710976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084381475 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076447528 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084611345 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085765971 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083748482 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.079796602 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07955883 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085189324 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.078383357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085454037 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091173831 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0804489 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094656804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089773413 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084947565 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08593133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084490046 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084805149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080902788 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08300856 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.079472232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084446591 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.078404156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087164322 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086102704 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083903967 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085241675 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.079355589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084500385 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.080066901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073972372 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081265327 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081970352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.078981238 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092231679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079242284 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081788806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.077889125 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079941438 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079028515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076187681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085198526 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085574619 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079381702 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088909638 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081289163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084871112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094180201 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073892122 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.077721501 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077109248 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080377856 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091628799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079121511 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092280777 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084453038 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081332086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07686053 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07930643 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.077983662 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074185031 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.076920317 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087479131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080508876 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077700945 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078835343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085034629 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078701791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090006355 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.077161574 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081857701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07805967 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07558916 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080664007 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079961291 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084213243 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.078103018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079440579 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074930994 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.076832287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081633841 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083342158 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077418509 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.216162071 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092537847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080573173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08685537 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082001858 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075626654 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086666299 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.078831641 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.079402465 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081561035 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086903758 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087292366 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079597251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093118894 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081255367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08585046 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079843377 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077594206 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.078795625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.078701121 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.078901549 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081417547 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080411852 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092562735 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.077562804 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085590423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084731004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083107495 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089312451 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.079572045 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085349999 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083886169 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081657138 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085726664 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092616512 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082509483 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086293625 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08003395 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084746413 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089411971 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081230295 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091480087 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084848078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080006634 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084676679 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080146378 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079123023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079407787 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079382969 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090879507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.081246371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08297655 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081428108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.077146001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083386282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081575595 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092315328 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086283724 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086660352 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.074480928 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077072557 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079964641 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08073464 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084707587 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085895284 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089176386 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085443385 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082881001 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078201874 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09362883 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088986222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08678399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080312182 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086823522 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0797456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08582497 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083436463 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08440641 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080068042 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086719133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08506742 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081158568 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089424694 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08702346 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079736935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084792654 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084714543 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083686308 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074611324 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.078941575 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08534391 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087502084 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08545304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078908206 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094287777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080021733 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084223255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081773847 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079172406 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087798544 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.074329689 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085732418 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079568847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079732549 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.074629262 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081468321 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080234761 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08560549 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081328269 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074783633 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093765205 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092896262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084168699 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077778695 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077255344 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.073424206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.073784574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080338314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079153105 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083408822 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091491386 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079978487 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080143965 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.072856195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077559132 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084314178 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085061246 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.20755258 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075918949 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083424684 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086074224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091606911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079282523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079524521 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0869314 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086295373 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077123191 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081614776 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076705881 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087369946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096648958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.080293835 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085128394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089072553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092183306 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.079617295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075819462 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.080056491 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08566846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085334264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080443129 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.080150428 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098350919 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086541164 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081350245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.078649243 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085906679 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0814866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093189144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08012582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.080118906 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090610445 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086709358 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087148663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089495916 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090084423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085033733 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084875442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078484738 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08447417 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.077741761 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081974472 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.080541314 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07959795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082810766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087411668 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08159965 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094505325 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092981402 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.081705083 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076751066 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082041181 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081870955 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07475101 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.080132745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07737325 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078379411 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.07787887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078103736 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08489577 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087758999 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083628622 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.079714779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079608065 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074089912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088623318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086588278 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085642267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076984388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.079582955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.079874738 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087493466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081683247 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078235992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085525896 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084908355 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084809195 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074877059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09067916 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078557978 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085219666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081408013 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079328943 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.080366716 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086421208 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082899407 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080524579 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085617622 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085607035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080778559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076985475 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077532406 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088493312 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077069228 seconds)
  done (took 51.450924228 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11359381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075501552 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074868325 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0751933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084399935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076012989 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075142635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076345927 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076212319 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077831611 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076221289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075746554 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082879795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091561918 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087225905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081544269 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077120415 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078265731 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077298517 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078114755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084565433 seconds)
  done (took 2.968796746 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.084763635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089953676 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086897857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09460037 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084108738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083170956 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087556589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082494435 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09092891 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085189916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090665798 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08278873 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085648787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085558511 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085347086 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083487402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090209395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084365269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08261123 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087775862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082775477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087254311 seconds)
  done (took 3.144883107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07985113 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079108664 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085190443 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074273495 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.078600413 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074551413 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081319588 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077164202 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.081379834 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080780194 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08059796 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081284732 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085605936 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074279462 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.081635303 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076980736 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.119494758 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.081524145 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.078639133 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.079281345 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.074575292 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086186392 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.07492722 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076780111 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083453438 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.083586209 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081491043 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079457369 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080626657 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082695357 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079448786 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078159264 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087396645 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08617921 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081515462 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080930965 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.078352595 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.078688249 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07456807 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.076742258 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087359844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.074560004 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079195702 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.085855803 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.077183782 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.076904632 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085292506 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.078431856 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074126716 seconds)
  done (took 5.204254812 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089926798 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12603186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081150662 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107185728 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094082189 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.08678598 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085449657 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110516361 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078407075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079300942 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.095642776 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.093181959 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080817678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.084614083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085722285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080975916 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081112656 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079260615 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.082838337 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078038111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.082387396 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087648303 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09274447 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.089409307 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.081812861 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07693456 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077998511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.081828505 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088912153 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.081821647 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.082377613 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.082913389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09273455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.082937456 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077928398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.080848389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.092708352 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.078963248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.080568808 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07656741 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.080208566 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082210489 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085333197 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.09337507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078243596 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083378801 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078137341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075637953 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089507592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.080359992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.085162276 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090363582 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.081879428 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.078651408 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082719475 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.091982353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07807379 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.076786887 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081045013 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089222253 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077102888 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082373666 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.09061994 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080059373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.084630677 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.090638591 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083142329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081756872 seconds)
  done (took 7.170402906 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088599493 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112016906 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095194991 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095283114 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089511576 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089149472 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089390584 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090539893 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089108799 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093115518 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088800714 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.128280003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08527594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090655266 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090964294 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090998203 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091124387 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090633499 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089998282 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089381517 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089413542 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097805026 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090138514 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094962818 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092192394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084626049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08887508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088781036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095612267 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089083895 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091923949 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.088989747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08953784 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095088181 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.092107949 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088647728 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078995262 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088708107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089062656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088801169 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085321985 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094904602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088535731 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085119009 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088850991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089057444 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0946326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.092232553 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090894653 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092874113 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089329148 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095158799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088533992 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089666603 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094862519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.097241233 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095381469 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09578144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088621856 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110682588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094598974 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.096970274 seconds)
  done (took 6.987445529 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093314059 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085578171 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094065322 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075153077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077821603 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085013938 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078105463 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081899785 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088004789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.087628685 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090309639 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087461414 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089849208 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089989067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087001075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090627485 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087569778 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087249151 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088230271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087669281 seconds)
  done (took 3.027791498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088508639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096166562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080656044 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084267425 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082701994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084052183 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082369581 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083153474 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082328428 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085117892 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090917066 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090843098 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08290577 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086848184 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090507156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086635209 seconds)
  done (took 2.656217474 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095682442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085417828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091141837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079205983 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080150807 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07602526 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.078666643 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.074429871 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075334649 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.091526208 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.078744436 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089922212 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.078698118 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07822932 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.075620281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085013588 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076024415 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076412719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.079199371 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090038152 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082658255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077055147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082914898 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.078961737 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081966976 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084031035 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.077734137 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079773566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076306583 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07897046 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.081601508 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.082524059 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075833578 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.076810758 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078363634 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093718507 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078253703 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.079431786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084278545 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078765939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076979002 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08102554 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078448569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.079513169 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075334873 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.078841267 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075089663 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081449888 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.076370129 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081414431 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.078442853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08081386 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079229205 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.085762896 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.081744258 seconds)
  done (took 5.717165662 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093267627 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084141589 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07659384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07869932 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084422792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082767849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085119274 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082677384 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083311677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079430319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083250114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084729011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082821655 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0833972 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081694728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084106487 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076921598 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0821116 seconds)
  done (took 2.782069211 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087785503 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082058813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088864999 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081276956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081179824 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083884772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076876691 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079777869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079632381 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081967105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081728426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.083237931 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077991316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082092253 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079751583 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079740062 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081973084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077643979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079721897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075034822 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081952098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078989923 seconds)
  done (took 3.064167365 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.110018121 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.100594434 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.157499169 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097089028 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.103750824 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.089364254 seconds)
  done (took 1.944302356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105621568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113217438 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079843656 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082180078 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088257267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082991139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082814497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083213131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090417826 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087770519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082820972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090033842 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090005748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090081677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088306076 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091947261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085004656 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085190033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082452856 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096468478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084462745 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091881067 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085021338 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083511967 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083071182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089548424 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090017282 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088814567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083149784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090461707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088286809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083870965 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092587481 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08807361 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082251278 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090353315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083674959 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094894832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088512057 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089781928 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082545532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088233944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090282661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087149424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090249637 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08352324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087265364 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08314562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083490248 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096830531 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088470178 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089439317 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088161441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090796933 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089820922 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096957949 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087867377 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08955826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088581987 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088200474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089593624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088276521 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089424507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087832737 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087703722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089402791 seconds)
  done (took 7.119846028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117817137 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082451729 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085402815 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090344944 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092631053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08600115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086004254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085609433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085566985 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083134706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122996367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086047676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092348649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092347593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08646158 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086373106 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085833131 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091971564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08338685 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098707872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08523376 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092273281 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092172905 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090206358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088784329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089559143 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083600374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084735609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085850919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085937067 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089340691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08579465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091950287 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08208657 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091662732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084154286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084374041 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088957361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08480668 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090107585 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090977972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094944197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083126935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083346163 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088067504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083041105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083001732 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080083286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083443731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080399792 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087661253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087921446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088091624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089162825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083125425 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083548918 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083251169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084061079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083374678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088312218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090321758 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086587008 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098112632 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084823387 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085409079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091289124 seconds)
  done (took 7.126828378 seconds)
done (took 147.245288071 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207988253 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182396998 seconds)
  done (took 1.661388732 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.091343927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.116223104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096407812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149312692 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087528407 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120659025 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120142446 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097088516 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086955376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086537065 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086831363 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089494229 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152406418 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086805987 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086973549 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09006968 seconds)
  done (took 2.93357386 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120362587 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180414818 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123735328 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.084699355 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119313397 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092974515 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084982566 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097308962 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091116551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08713637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092309903 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09295022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086774477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090767752 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091504313 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093156267 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086482625 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092687001 seconds)
  done (took 3.102201879 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119622463 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.11032109 seconds)
  done (took 1.523559208 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173815887 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.148435333 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.216370484 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361711975 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168199477 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.157751349 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.157466004 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.156185349 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.132116191 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.150862997 seconds)
  done (took 3.115184222 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122830578 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171533035 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306363317 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135163116 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091455766 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109969407 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137031616 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097098938 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.09919168 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098642514 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098685082 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093597896 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118178494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091958444 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088102591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093778566 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121413126 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088120697 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088500492 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094212196 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121515917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085386079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092699457 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087572064 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095946673 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096141864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08694025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084778907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093941269 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088457066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094358008 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108196013 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096066602 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12136836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089826996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.122453187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093702336 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091741376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088739471 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092162274 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095277305 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095146887 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093837262 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093642142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087066951 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094461981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087086179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085498102 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095800706 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087382908 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095640571 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09425272 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.121739734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087248402 seconds)
  done (took 6.91278378 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126193679 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.121502925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085747412 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127169053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119060797 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085833595 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.121027002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114232318 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.122535428 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086410807 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084545137 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.085964858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095950763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.096500823 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.13131818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.122704576 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088550477 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085480567 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122815374 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122132376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084718552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116891675 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112908408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.121557011 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.083527642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085497506 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.084432099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085682009 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091082295 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092383095 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084161131 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094212858 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098297241 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092062138 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083677085 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084031205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084390746 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093216628 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094075671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093121599 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.091383728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083266043 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084195982 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085579874 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085666821 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083463327 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092497099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093875318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.092455426 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084165593 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085653025 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08453436 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085411275 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093538267 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.091413462 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094332664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093640747 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084626506 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084560927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087124037 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094400049 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094021858 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093328563 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085369511 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093848161 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084456828 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.094843943 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09743809 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084302652 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088221378 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.083938674 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084143182 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085142941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091305336 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.09225787 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085551051 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.083868328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08387035 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.093592839 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091500214 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084047434 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.09092445 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083408332 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084223543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085280006 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085414739 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.090956293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.092991736 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085281392 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084430871 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.083948174 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084203514 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083386289 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.090380646 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092423455 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.091609289 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.090890043 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083833656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.090645778 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088954763 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083570373 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.089580294 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082499824 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084247905 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083471701 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.089716112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.088367662 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091008506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082601352 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.215597909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.09328153 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095740105 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08634843 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.092435077 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094925547 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.092219869 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084522419 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095601028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084701466 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.093943877 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084858382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094424474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084968464 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09248292 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084879827 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083979464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084284563 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.092985387 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08665846 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08495641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085143978 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083924942 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092019336 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096123695 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085906403 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09184082 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.092029551 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085375527 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.09261052 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085131016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.09345893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084561056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085752264 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083747275 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095110667 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084613612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084582186 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084391789 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.09408763 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08486683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093880446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092153628 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083706581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095607878 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094333009 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091456287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093964979 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085535409 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08500957 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084466263 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084060404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.091589846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092920171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085575547 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084181339 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091241139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.093558785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.083742609 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091672968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092430836 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092033928 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084515219 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084530403 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094446562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094120009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.091932418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.091803996 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092408769 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084683048 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091790868 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09300618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08507916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098790778 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084631394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.09630848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.095041164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093817071 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094999648 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094145512 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.094355049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09430018 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.0963928 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08400447 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084092713 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092780361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083968136 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084164721 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.091668825 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.086105231 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085506519 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096421971 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084519621 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094105259 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08327454 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.092399541 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083596289 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084759203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096649107 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083118397 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084507544 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090570965 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.082384684 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089141512 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091864315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089534195 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085682611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084074051 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.091247427 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.090611055 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.082143021 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.217718863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086701406 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.093113342 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.092053877 seconds)
  done (took 21.923749052 seconds)
done (took 42.483401221 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216143863 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166303418 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175843946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128568916 seconds)
  done (took 2.082234121 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125314176 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.113187985 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101896188 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081554536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108545554 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081930803 seconds)
  done (took 1.947313057 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28908464 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204254604 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188488186 seconds)
  done (took 2.007293975 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224991113 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205034816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475214666 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29762393 seconds)
  done (took 2.634154598 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.157230407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098151245 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080578781 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097404957 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138396243 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165819318 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.109112285 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133697689 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09308895 seconds)
  done (took 2.462400815 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158520576 seconds)
done (took 12.630964366 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116506025 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114093006 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.154946824 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.235659395 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.265138132 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086686362 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.200952515 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.250175736 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082841423 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.244096996 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091190089 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.250864593 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.089667086 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097440502 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.258579814 seconds)
    (16/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121970695 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089863979 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.183776268 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.132422657 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08860757 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194190597 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139712341 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215241985 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099073484 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11710951 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088982289 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113958889 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10641678 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15432095 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103982295 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093719676 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064932191 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195870527 seconds)
    (34/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065469873 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105905939 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088012307 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088131758 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165463665 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078314494 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14459813 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091143383 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090319392 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.16864375 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.08787768 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147186441 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102925766 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223556171 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.08181416 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169604169 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085690687 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127829474 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171569354 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081807088 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087589287 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087583225 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.078052248 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10290173 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087982466 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.192689813 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120302988 seconds)
    (61/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.165765504 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078119288 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093477123 seconds)
    (64/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089917191 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.089241564 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172222626 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.103370959 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.189027844 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084264727 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109447777 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082658067 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194509223 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108119866 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130074496 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108188474 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.200695967 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213617124 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087605764 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.194700331 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.224795764 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083558309 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107141753 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082641052 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087468032 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082879437 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091983774 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.1049964 seconds)
    (88/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.083079293 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.086808037 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084264054 seconds)
    (91/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.270681827 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084939916 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172706695 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107759044 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104989068 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231097014 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.10567989 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090778485 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076962275 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06494914 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133140433 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083337546 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086873528 seconds)
    (104/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078272887 seconds)
    (105/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088394602 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075864957 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090396745 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113171957 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089050365 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108304916 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065101669 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.097814651 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.102907392 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125925738 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.127915785 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108115712 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.195639263 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082262366 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10647658 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094213661 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096632149 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082019936 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194757495 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088942422 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174327142 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076504335 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.081982126 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.089047681 seconds)
    (129/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.077301333 seconds)
    (130/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.091322822 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065065578 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087033744 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137458783 seconds)
    (134/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.130571991 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088875147 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.082522021 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087397483 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.119496831 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134164318 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.088220333 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091337554 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086576254 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064841234 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195638088 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103523111 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078424479 seconds)
    (147/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077401163 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086073656 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088248064 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064326221 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.187051916 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.107670738 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.084266561 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184682584 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064987724 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064374339 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193730859 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163179303 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103114628 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 0.205947111 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154823088 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090053862 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064025173 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136224165 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.161117593 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076493891 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.083204227 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163425629 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081329908 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139209552 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064424141 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082591618 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085133555 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093384783 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.213768598 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088572009 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.064224436 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125232086 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081731241 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.133924785 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161228277 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.168854799 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.119259793 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064404374 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064799611 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081302049 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063895825 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133885705 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10430039 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.16849116 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07977203 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063291884 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065264961 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063851962 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.169010192 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094271864 seconds)
    (197/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.186479282 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090557839 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090740706 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133314327 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064980385 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063938512 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084457834 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089926537 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 0.320578195 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196855603 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099319609 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 0.150164062 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090488725 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089669713 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065371039 seconds)
    (212/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065708004 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105573663 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082447821 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.087895756 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.089734058 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084073265 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079371096 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.15738188 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067113884 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.102046797 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065316542 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082090589 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083168388 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087408826 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107949428 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077311445 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066481522 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08811674 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161892634 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.169810221 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088401399 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064411772 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065297152 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083816073 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06790675 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091090524 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172287558 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.091939108 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084295212 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067224369 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084546608 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067036363 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086242779 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 0.150923962 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067181454 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084448969 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068096105 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084921557 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107274015 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093659146 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085768665 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083561251 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110945408 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.083203714 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064839374 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077502319 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078706228 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082133041 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064954955 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065490966 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066631705 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090488417 seconds)
    (264/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085945266 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087567286 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083444309 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065391018 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144874674 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064879369 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.163213177 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08178442 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082195138 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183841115 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102441643 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.08794296 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065105422 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06544768 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065915939 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086166016 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.106395893 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082097446 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065311631 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.095943719 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066006793 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088665369 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080701937 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107423607 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.102285826 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081860987 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082457739 seconds)
    (291/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065455151 seconds)
    (292/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136139786 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081240945 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065040182 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.083871577 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081345181 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154206711 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.087181399 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064755614 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064380744 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06610901 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.086141927 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064587438 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082885823 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.086977143 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080903283 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082213859 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.086135075 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076025959 seconds)
  done (took 35.719411891 seconds)
done (took 37.067682195 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101147179 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111613996 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089859896 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.106375961 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097071009 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089348767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.087317674 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091892863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.094408252 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09633733 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095021471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068424838 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.091095083 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090898955 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.088939733 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110588568 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.095847383 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089886135 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090204166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.079528776 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090200841 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082647485 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.081881082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068618645 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093921064 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086752263 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091056339 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090683404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.082220056 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08199204 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.084494091 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090437527 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081637536 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.093985442 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089044101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090367467 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.091625644 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091830965 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.081788444 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082547495 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09173811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082229175 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089708893 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.088359741 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087418423 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085666897 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090019782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.091335111 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110161554 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086448717 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092158205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092566573 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093751532 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087225546 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084555141 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089776333 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085342507 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109803821 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090177564 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086508 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090949231 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.088657445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085757067 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089796909 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.089968492 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092038698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091229075 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085680317 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09154503 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086018012 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081991006 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089949231 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084174126 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081822437 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09283396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094669512 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078513806 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086235155 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.08954838 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089818395 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.082057679 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08663294 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.081285706 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086479563 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086226278 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068394922 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084324479 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089122359 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.078784208 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.090084429 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089174476 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089136358 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081581829 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092226177 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079443436 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085561819 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082208908 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081798928 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081295664 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084462253 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081048958 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086003027 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090123455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080485647 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086587071 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094201043 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.080925741 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088834012 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078227349 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07920817 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.092943471 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091545625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081804872 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086673776 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078452875 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.087337657 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.078913981 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081229653 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.080593408 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.080977314 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.085242594 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.080959755 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085703925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.086537137 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09255603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079988196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082888331 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084314029 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.079818392 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08393517 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.080032433 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07953374 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.079554309 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073880732 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084393182 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.080345006 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.226603353 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087300109 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091305732 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081658177 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091677933 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086287386 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.086863726 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085890014 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.078718049 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073582493 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086329983 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086500092 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081400329 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081719493 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081173365 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081248885 seconds)
done (took 14.807897932 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085472749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146597258 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107353907 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.106788435 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099664481 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083390686 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.088403186 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108579429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.083386896 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114377551 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.102715468 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.100905806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124000963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079244331 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082514741 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.083937035 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081871754 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095440268 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10947015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105490275 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126628019 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079681134 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104048044 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.104309689 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101185723 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107467544 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0837751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084288652 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085361215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115132645 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106229461 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.08650555 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083144921 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108618573 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104746842 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095780761 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083147289 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095333958 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083074343 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082311063 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083974854 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109057575 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094848187 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095281229 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.084398588 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091074742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081443495 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094871982 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1023939 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09107784 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099134462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110404554 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082162709 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097274132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078475456 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096908439 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089706465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082687695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082175032 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087708078 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082023006 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085296753 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094732604 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.092336507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086449158 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097383788 seconds)
  done (took 7.676861138 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102324527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.109849093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099050091 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099671184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082110005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082688004 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08238981 seconds)
  done (took 2.104921155 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085719296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104804359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10467197 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104636049 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094582035 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10609983 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090861079 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08323062 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106698556 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083496299 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.104340421 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115017089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085453606 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096358232 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108379535 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084775964 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108249729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084257438 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08355855 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105214212 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085089107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107148533 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094155897 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083259664 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093936583 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083090589 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126150622 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090929644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081485643 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.084392915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081415637 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121157927 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092878825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.094248505 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081863733 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096069388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.095270635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083705594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091343032 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092424797 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.094263205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0844515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.081477211 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08180071 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.085385426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.092060924 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.082165897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.085150374 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083908319 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.100777574 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081460896 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093315848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083980132 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086122546 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088486138 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086533896 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091426205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08194046 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100458213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081289582 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.098969263 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097420434 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.094364829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.099269471 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085703972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095433819 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.095605001 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.085975566 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087308152 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.086781823 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.099907074 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085711122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085977795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.092508929 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.083011681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.105177405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.104748176 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08310194 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.096035936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083602374 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081770864 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082715513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.105433005 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086174839 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08193284 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087102509 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084929444 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083558274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.081846174 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086969789 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.081945297 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089109024 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086244285 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084954477 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08525466 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09696133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082228004 seconds)
  done (took 10.291109966 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087804749 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08432283 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.085015209 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08395222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083794899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.083841103 seconds)
  done (took 1.979711171 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.111173154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.084694664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.095168114 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.085175576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117564208 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0991812 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.099872106 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093433942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097593823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.092578349 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.099607719 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100657295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.104306915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.085958458 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.099532489 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085244687 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09990672 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087494468 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09237109 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086358751 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100747762 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.085936877 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086618137 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.101004347 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089283568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085307714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094099645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.093074705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.092140409 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092928068 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085696165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.089116585 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090758967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092388705 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099548465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.090636485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084714972 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090321009 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08497997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088908683 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.099950492 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086381086 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.087231294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08984239 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09482846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090889691 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090267098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093815891 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.098673577 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09002121 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.089891735 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084640596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.088767158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091053716 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090946938 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092746688 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090194522 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.099759636 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085943311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090975175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.082158155 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.089349128 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092364347 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.088915568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.090642822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.089893178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091301734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085969481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085682839 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.085575616 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09009652 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08220538 seconds)
  done (took 8.055259317 seconds)
done (took 31.532234763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531915091 seconds)
  done (took 1.951210679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627305953 seconds)
  done (took 2.078424039 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.525255939 seconds)
  done (took 7.973296156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383717418 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.454673452 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755268396 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149512604 seconds)
  done (took 3.229930453 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.73819139 seconds)
  done (took 2.199537364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250871341 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23781771 seconds)
  done (took 1.957332822 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371284157 seconds)
  done (took 1.819090654 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.078873678 seconds)
  done (took 2.531249155 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.245335168 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172179408 seconds)
  done (took 1.877429259 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458820733 seconds)
  done (took 1.912280196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.237245148 seconds)
  done (took 5.692162825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24264546 seconds)
  done (took 1.72827125 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26110333 seconds)
  done (took 1.717286031 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.750203506 seconds)
  done (took 3.206160592 seconds)
done (took 41.340144312 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102439307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101868158 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101421217 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097613519 seconds)
  done (took 1.837410349 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.093523624 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.087211455 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090826838 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086402045 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.09047857 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086401871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.088024178 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089436429 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086798996 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.087379524 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086823626 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.087028065 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089543066 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.088364554 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.085721651 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.089910685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.090874525 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.087063259 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.089818288 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.087494768 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.085397234 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.089785502 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.089841047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.086289941 seconds)
  done (took 3.577323929 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097816175 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091521743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.092722623 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088246002 seconds)
  done (took 1.832301433 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095910613 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.105543246 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102184038 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093120175 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104231836 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099468108 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.083837301 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083514512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.084586426 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.092249411 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082834015 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108260658 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10177728 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093233204 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094998292 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.080011879 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081858632 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10131995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093597422 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.093326786 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086333543 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096371946 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085628844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.106023252 seconds)
  done (took 3.706530479 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.097648937 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.117873946 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.095811244 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104757026 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.105865029 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079883899 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093087463 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106885543 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140293762 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.080419747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085651117 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.080624618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.08930198 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.080205831 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.095078713 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.122164585 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.126121519 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.083499867 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111786178 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.081603055 seconds)
  done (took 3.448422072 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.090870488 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.090035704 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08822813 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.083540273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.094811907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089744129 seconds)
  done (took 2.004338201 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08620634 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084615379 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.084788071 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.082867631 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088785388 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084092906 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082749923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0839653 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084274748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084008785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083833647 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082780296 seconds)
  done (took 2.477367614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200055964 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085418715 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086545312 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.082801688 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086120874 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082556628 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.097924806 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084739347 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.109209721 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083108058 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.08298529 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085060662 seconds)
  done (took 2.631092264 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212919103 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091308249 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247173704 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1609973 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120502921 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124988684 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126753315 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125571371 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147853667 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110936634 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171221028 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175884727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119597105 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148614706 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103687908 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113996345 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160933298 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176569219 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117988024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172385864 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154266974 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137917512 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157587363 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11384708 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116656668 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129319123 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08515671 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093221964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180685234 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146255523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152075657 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122403128 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102455669 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188685579 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173551908 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151075061 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159154706 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097384368 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.113601486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144418521 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208933085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104957289 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172794372 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121282247 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093838113 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138959895 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124817293 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.272712969 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.118010315 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104560322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153737201 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194350502 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144894837 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100279973 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135108654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12571664 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122954302 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131739145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195605332 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170091679 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143200333 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.088909574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12651428 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162573673 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147115788 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.121447818 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132773712 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103232611 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14226639 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164290707 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132518753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153445358 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126482613 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1014006 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132375385 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146931717 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137740016 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182482685 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135968638 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.087545231 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133212038 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111527206 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094105909 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157282537 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091914697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186690607 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118023503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11899692 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141466283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121723769 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121386723 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165765969 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151950758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120092986 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082690748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119635875 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130064432 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149309073 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099072328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118848534 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122746223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.088526821 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288184927 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.090780223 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136063186 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090576289 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134972277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141007029 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.091532858 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13446422 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11666718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114765689 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143502878 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16901393 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102276512 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095398787 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172498942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132984116 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.114342792 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151692237 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161836184 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.113751174 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110621184 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153903282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176230902 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103813902 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170627522 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116608329 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097676245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099455703 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134735422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123464158 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134685215 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09811058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130186907 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171508405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08925722 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109323019 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144880521 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09260185 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094268612 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117570871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11602153 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109184817 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110496646 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.113120467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145853097 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138036213 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120793662 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13856535 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114632644 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176452311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104609055 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.115032732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115924477 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083286598 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13828782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159848929 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091650024 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163049696 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127325214 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276646784 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132568485 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098240439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147159362 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094222973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.086532214 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151427364 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121960583 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12205364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156765051 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126758645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.13290556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129605977 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145571097 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141289597 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.140178204 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1184108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.102750448 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126503232 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136432783 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087561049 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102502522 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.093862568 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117825047 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107778386 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099947687 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156221619 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137821349 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126562997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128359576 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113920757 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161460315 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.092993712 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139314043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.132296333 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111570776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.160779905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15896885 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143399044 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113160842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145703416 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084938779 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088527869 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.099002477 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132351028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097604156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097393044 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125505528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157024362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140674447 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146812741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136881532 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129000972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163399982 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083514822 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.129848213 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147991641 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129427177 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115762932 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250438183 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.112760603 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151592397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116906885 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191605061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127592658 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137245385 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168154001 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.119167356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097644166 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120804201 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146186568 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118049122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152341283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114395864 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104215758 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123215553 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.092550942 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113254159 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138400883 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130379925 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147508355 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12384587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143025297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092456054 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12665363 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133739485 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132897394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.07797761 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129201871 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172301211 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108462094 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128747265 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158328608 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09291089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149692011 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178557245 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155899822 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09825107 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118288383 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131289029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134712469 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129605293 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145796497 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116011564 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149469969 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122269949 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.097816017 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099879647 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108251658 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115158564 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10584929 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111385098 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121238509 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107452728 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138206679 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113450499 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120017547 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27854977 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.113886424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.107986129 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11162572 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183345943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130045216 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18285603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.114074969 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149322474 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168119668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090589889 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093721871 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.093154916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146481683 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098189287 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141230174 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12409434 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127523773 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134121947 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147894285 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109805181 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.083237204 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121743092 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143055884 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135315273 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111464854 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113808564 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167711401 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111384113 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093211113 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124360179 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128572508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116242734 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17974991 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.075661451 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121574585 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091121805 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093990377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134929705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161605312 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093960419 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112666338 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131675174 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123647974 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134440199 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110489485 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122697197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140792598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154329604 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137310324 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10222516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122806583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136279766 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158718793 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112966209 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109085055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175912488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306104051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16525026 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.099762824 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129734458 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126209306 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121497006 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145920429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098804818 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166902658 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095566379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142886908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11351198 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099912485 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138292642 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124771973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102126827 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152457733 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12977137 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098006907 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092377273 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128750257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131307266 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11613778 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088865145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147763886 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088878578 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143872564 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180556497 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095050072 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117654005 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108814277 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093586421 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116278644 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114726777 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099836218 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.112520925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176736307 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09831761 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153821166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141963381 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122600151 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145259767 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11514109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.652586309 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.09060051 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157635995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125908761 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178593295 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111803415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129290102 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123283035 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130264128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14879683 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111933425 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190416835 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2916814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127847018 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094277221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115270497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116917962 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100364865 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120433952 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125358234 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126363211 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10557769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12641224 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132368001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095766832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10982176 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161902854 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126621846 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152858204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14688113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098608021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12874346 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145553843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093749234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128286523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162123682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118666149 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112240205 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.094149264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111321675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180420733 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.089379709 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20338566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132235091 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122668881 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129060174 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120466063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141743755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116218356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132333596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103477778 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117792082 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12551889 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094634199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.090507852 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117511819 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121575666 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1109871 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107580807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112656394 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157149488 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.086732266 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110271727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126370055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151131486 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175535746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098589563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096281942 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129680545 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124833747 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119182993 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281079777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.094448355 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096922893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.093361003 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.095154366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116316899 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125474348 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13090427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121800792 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166586191 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.097129071 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239409493 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109694518 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118241993 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.083186797 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.092355788 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110022755 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109787639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117871988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122745751 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178972582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.108728484 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103513093 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102807815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.089511661 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096946828 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135566077 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123813044 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130115372 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11656624 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.077474786 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118320544 seconds)
  done (took 64.323303794 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136891766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.112196074 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.113282354 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15919419 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137171671 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215387336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.165926392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204537265 seconds)
  done (took 2.819200412 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.086659979 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.110453441 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.119542596 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.098839825 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.083694371 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.084575941 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239014423 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.097288398 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083228843 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106790365 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.093871851 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.085438999 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42274982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.082868867 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083697114 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074567299 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083417296 seconds)
  done (took 3.591197986 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.405044473 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626302573 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358450813 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.094723225 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.873305089 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109776923 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191622164 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160012923 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.100181314 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54012787 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.386404031 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152589753 seconds)
  done (took 18.558558834 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.101505913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.093581758 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.105503181 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.105869306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094508103 seconds)
  done (took 2.059444733 seconds)
done (took 114.372453809 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.100258476 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.450633816 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06742893 seconds)
  done (took 2.102652896 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105152658 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.105345126 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.105129823 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.103089582 seconds)
  done (took 1.992670616 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.091397729 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.093992626 seconds)
  done (took 1.755142708 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239344598 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189663279 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116232218 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.098732822 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093970894 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094074466 seconds)
  done (took 1.850148531 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.088133117 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.088789615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0863637 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.089853555 seconds)
  done (took 1.911597385 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.090850111 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065242122 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067432319 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070457586 seconds)
  done (took 1.852346152 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.102840282 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.097919112 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.093488328 seconds)
  done (took 1.854791698 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.118190856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.106407689 seconds)
  done (took 1.784459283 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.096677543 seconds)
  done (took 1.65612874 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104804186 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112701659 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14603857 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.128975854 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.152800362 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129223986 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100371718 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.100947148 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094588904 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.102124903 seconds)
  done (took 2.732745463 seconds)
done (took 21.692869204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097252748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389463488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.375918388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105914483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685359516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37307753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986946222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108802023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155808728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084659179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101191569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.665751662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976711995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33949205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962895765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337170878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667312697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086264785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085346281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085517869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97238657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085570535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085097354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086020393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667202723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390076111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086045051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.340326298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085928204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087193659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372766925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085911401 seconds)
  done (took 16.554752186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088883078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137706682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.088972988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100324904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.087213906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086040099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087958737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08608956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137481711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085677176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102694507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085706927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089285546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086281187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104797117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086145796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086143929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086647994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085921574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086339583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105460671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085699459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085895989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086701198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085823071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100825442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086483847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.085656039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086229705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087522149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088844601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086491139 seconds)
  done (took 4.536560739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135189231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141322772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090877528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122063851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128345845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08709502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.164238589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110499141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144682983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085362736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102945339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085714633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119719687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086511507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105698615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086208308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086891019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086706884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085817296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085662526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104831267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085984843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086242612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086910681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086317147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100080256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086614104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086318595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086013314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.088341929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089278766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086425532 seconds)
  done (took 4.796297861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.090632942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.090266265 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.096837034 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097885235 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083871253 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086891195 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.087483109 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.084162295 seconds)
  done (took 2.302338153 seconds)
done (took 29.755998762 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.097157771 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.084086697 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.087380776 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10297917 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.089774443 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.094564161 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.081370566 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.090519112 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.088112611 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08792066 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.089892796 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.084791778 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.086414979 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.081582799 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.089098772 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.082464218 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.097021099 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.086845825 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.095474688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.096454043 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.084580561 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.087836737 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.089996499 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.095310906 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.096018367 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.09523087 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.09139077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.087353069 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.082626456 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.085261062 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.090690687 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.097599997 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085065691 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094916242 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.081416222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081889888 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.086320285 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.084271045 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095600464 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090457999 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.083340192 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.090209575 seconds)
  done (took 5.303559726 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.103637533 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.104311216 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097776159 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075973505 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.081011714 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078944216 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.102879931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07377193 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074384189 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.101884499 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070227504 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074092404 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076575254 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068726965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073531803 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071272194 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07584868 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068976343 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073270244 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073933997 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.102510871 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068420005 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092388522 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076432453 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070131945 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075614601 seconds)
  done (took 3.700251363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.092642942 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102678571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109436623 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159024074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127147388 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.095861734 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.09731028 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.107826176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112082975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.084301554 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.088798328 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.108321817 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108078032 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089795987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.084469656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.099753791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099460739 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085695905 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.090487496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112203943 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104363732 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100907911 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109733804 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100126235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.083384247 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086643383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.088657277 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099635971 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.086460866 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09509897 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.08940774 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.088147732 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.085724588 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.094293482 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086482338 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.083857222 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109091043 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095791813 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097256161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.084972826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094310905 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.085328171 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10994722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145060879 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.083414973 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.088171859 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.088389798 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095664073 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.083919513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111891805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096445226 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.084163697 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08523075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.083674626 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.083725341 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086727253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08623117 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.086508867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093996859 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.091078626 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106389157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.089186984 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101703604 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.084035033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09436461 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.083951283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.085390888 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.083861697 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112478043 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085570228 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127984804 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.085638419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.083255375 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09516995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094357649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09037492 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.084476681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101473388 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095515385 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.088677035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.092617235 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.08730533 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.087834155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114757844 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.084683805 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.083650154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.082942149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.087746702 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.087659821 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.084545187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096611105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.083411018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.087411911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101787398 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.083520844 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.085276434 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.088125027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.086734169 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.083347787 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094437073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.087840705 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.085221946 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094656007 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.084926357 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.087751215 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097409293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.090811022 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083016813 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.086408807 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.087907059 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.085522469 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.08540574 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.087755119 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.085885716 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.091025477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.090785916 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089672769 seconds)
  done (took 12.541028366 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.180055693 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.169746378 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.087689081 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161581405 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.093197072 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095023321 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.165319074 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.109714903 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084552481 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087210492 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.085163002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.124635341 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.120403165 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.130253207 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.09554407 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.085949769 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107373859 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.129056296 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.16591494 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.160193159 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107313112 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.092666857 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.087161433 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.086778742 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.086262016 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.094373178 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.101118932 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.093342593 seconds)
  done (took 4.816965941 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.096408384 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.119364035 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.089238236 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.107396056 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.104211574 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.082578771 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0865298 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.086822591 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101008631 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.091084729 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.083070222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.090473881 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.088876625 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085382167 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.085791668 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.089118944 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.091895672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.084938816 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.086701721 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.087749235 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.094795981 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10416142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.087924257 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084723017 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.087830265 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.084706827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075403292 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.096985205 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.085335548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109002086 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.082225977 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.086888827 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.099002888 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.085794325 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.084760325 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.085271386 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.082657822 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.082257328 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.086003883 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.080978173 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081198285 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070921714 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.083911871 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.092486363 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097683277 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069400403 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.086795242 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.087494465 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.08804465 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.080322224 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.087691745 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.087862776 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.08784142 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09222403 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.086755744 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.087981246 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.08612071 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08962103 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.091322871 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.084325278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.078691121 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.081010863 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.087233102 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076861768 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098055278 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.087461247 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.080842476 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.082611914 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.086039942 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097606431 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.084403977 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.086984933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.080410375 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.083723635 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087678908 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.087106956 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.088579314 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.081059766 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.084457871 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.08486842 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068513338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.084510015 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066936274 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.08780702 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.080913835 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.081008422 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.084938712 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086841982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.093292952 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.084253443 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.088859552 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.086207203 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.083747919 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.087968973 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072982493 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.088387399 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095760583 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.09552705 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.082727 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.080843723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.098137672 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.088021393 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081748065 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070496207 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.089679518 seconds)
  done (took 10.755617985 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.109012271 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.083930788 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.101342089 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.10782642 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095209272 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.089358468 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09584735 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.083426396 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.101490858 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088453667 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.091088721 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.081916026 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.095872034 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.094178113 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.083903159 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.094712984 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.086334797 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102679243 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.099536327 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.082046937 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094185716 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.097478175 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097648735 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.099193301 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.098530328 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.100001323 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096842895 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.093184901 seconds)
  done (took 4.281390343 seconds)
done (took 42.977683415 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.679942551 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930196039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.667570399 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.90089395 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.724412574 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.880549364 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.766279739 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.661569188 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.86485447 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.702671068 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.000035853 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.734993634 seconds)
done (took 64.248491647 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.699788062 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.797198982 seconds)
    (2/2) benchmarking "String"...
    done (took 1.886837865 seconds)
  done (took 5.269989928 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.866246779 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.338093787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.902075159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.663742635 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.67133932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.066104546 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.464310663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.13295578 seconds)
  done (took 29.826056904 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.819788703 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.89394812 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.374339858 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.401010839 seconds)
  done (took 15.119352977 seconds)
done (took 61.46206222 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.675388193 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.670106886 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.681666827 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.643409738 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.764933121 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.67481615 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.783718229 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.675065258 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.664648351 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.652299123 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.669704189 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.107158402 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.680805934 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.838110113 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.66529374 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.667181988 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.717687967 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.129061208 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.823295605 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.680962438 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.6856177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.713917581 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670617887 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.668452491 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.716735756 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667670017 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.051164167 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.678076634 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.486170513 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.669530762 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.708304561 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.015480789 seconds)
  done (took 200.183265488 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.668641998 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.749888052 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.841652657 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.688206781 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.153444812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.851202107 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.75299834 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.217778657 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.671680823 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.670847694 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.913256365 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.670846155 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.935127705 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.615484711 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.694058973 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.680538365 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.921792755 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.943121056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.70562727 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.816268212 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.674918159 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.796348739 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.745345596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.887219213 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.67678632 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.773509307 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.677493575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.697956677 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.854404332 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.911581729 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.708101972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.704286121 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.879180487 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.542266231 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.670773513 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.685023691 seconds)
  done (took 166.636776452 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.850477921 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.66975304 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.668977403 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668673597 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.673816693 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.668262283 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787953422 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793471845 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.309988087 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.252004943 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725373978 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668200765 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45481784 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.670120127 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736361174 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.680521068 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.66944753 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685272188 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.69598672 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675040792 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.666841762 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797051826 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.680241972 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.669130058 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679482226 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.668830685 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.673200368 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.034101408 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.667730729 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.847471004 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.67087142 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67570052 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.911275347 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.669803288 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671516551 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.520455079 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.786259644 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750109147 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.675293726 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67540717 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.672049114 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.888424764 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.66942128 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.669962349 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.671982882 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.675322934 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814446105 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.675064464 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792884622 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674316977 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148186789 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.671868323 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671418915 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.421499889 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.262196054 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.668394101 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.674347602 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.669627799 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671385607 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.675361069 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.352210477 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.744717902 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.669131245 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.670067938 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.670039252 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.676090478 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677298534 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.672969238 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.719909243 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668895272 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.359828154 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.730926751 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.903230281 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798742296 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670981442 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736935819 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76558973 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670676529 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.670064677 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.668834008 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.670541513 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.750855719 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672181914 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.79291269 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681891481 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.673798893 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728893285 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.742880689 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.671364306 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519032422 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.67186301 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.674413574 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927960213 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736653848 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.671910177 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672973306 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.790811906 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793938272 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.381774766 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679887015 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.676648679 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.271111306 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.810304613 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.67147203 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.812232618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.671823191 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753156941 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.67920612 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675854841 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70578251 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.673401216 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.732268681 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673778082 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.675782184 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.048988557 seconds)
  done (took 390.827591884 seconds)
done (took 761.146047869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.281646373 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253531147 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.352240981 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.276082558 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.249289021 seconds)
  done (took 13.007730379 seconds)
done (took 14.602423069 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.758553169 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.763785247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697496875 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.761521453 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694142796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.762297052 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.745258386 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.69922122 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.729777134 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.701205816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729763246 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.699996356 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68716094 seconds)
  done (took 24.02560434 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.909860367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904664335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740449533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904939372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715754669 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907169355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.831809513 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.8201907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820424338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685349571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686655146 seconds)
  done (took 21.524166607 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.912090927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.915526441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747012556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912166962 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718156113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.913904422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832275086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.828925499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822772704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.686367874 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685189076 seconds)
  done (took 21.570270832 seconds)
done (took 68.715938028 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.684965789 seconds)
  done (took 3.278983666 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.708176341 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.882116915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.68872831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.6867791 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.686235531 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.686328223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.685814196 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.68467601 seconds)
  done (took 15.307766341 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.681701622 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.682758412 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683129314 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.677959554 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.682055729 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.679659565 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.681701777 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.683967331 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.682093488 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.684918572 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.682015112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681276045 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.681363605 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.68327705 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.684253763 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.684767992 seconds)
  done (took 28.515558816 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.680651339 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.678643161 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.681859973 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681544921 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.678700584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.681009206 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683106973 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.681434994 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.682303635 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680877046 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.682528099 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.680966668 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.68083044 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.68101953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.681328023 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.68148803 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.680241686 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.681853066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684896494 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.681713589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.682806698 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.68159371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.682392211 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.681982619 seconds)
  done (took 41.957195645 seconds)
done (took 90.655969161 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.396988777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.681732996 seconds)
  done (took 9.677835465 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.684496974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.683508753 seconds)
  done (took 4.970072815 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.682940257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.685071805 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.685357918 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.684830334 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.683607525 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.683096527 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.685904379 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.681310233 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684575467 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.683679766 seconds)
  done (took 18.437885705 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685516158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.684288039 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.681730275 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.685844418 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.683653483 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.683132172 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.683783338 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.686028652 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.686615492 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.68061271 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.686201017 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.68417361 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.68744306 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.6834901 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.684985434 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682445767 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.684446601 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682294513 seconds)
  done (took 31.916222937 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.685935994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.686025184 seconds)
  done (took 4.972093423 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.683718641 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683469865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.684328877 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68279628 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.682940201 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683732887 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.68478486 seconds)
  done (took 13.388053401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.685968408 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.820896104 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.888109578 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.289961896 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.685803861 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.690122871 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.582549353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.689286272 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.690825794 seconds)
  done (took 18.62699684 seconds)
done (took 103.590499112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.59776323 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.679303509 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.917081868 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.81640639 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.697218084 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.97855031 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.693090333 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957941581 seconds)
done (took 41.939062859 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.753233973 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.401783108 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.430761907 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.754182875 seconds)
  done (took 15.190370283 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.660738596 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.966924613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.684360316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.492875101 seconds)
  done (took 21.409178728 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.050989898 seconds)
    (2/2) benchmarking "read"...
    done (took 2.034615213 seconds)
  done (took 5.691991696 seconds)
done (took 50.650276639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689138285 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.688830572 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.685189481 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.689899469 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.684759248 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.685010338 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.68707357 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.687220642 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.688504905 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.689423064 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687399883 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684605999 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683996286 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686202028 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.684884349 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.684704948 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.688612614 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685603685 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.685656516 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684402638 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.685355588 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688102885 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.685426512 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.686402414 seconds)
  done (took 42.07788464 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.688580174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.686429338 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.688435724 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.688162754 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.685826169 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.687195967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.690449618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685656219 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.687271551 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.687819603 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686402298 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685210242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.687824332 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.688117996 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687093583 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.687813311 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.68978469 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685470607 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68956608 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.687179288 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.690890162 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685342945 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.687312402 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68999166 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.68771954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.6902157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.691626546 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.691254026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69284007 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.685342387 seconds)
  done (took 52.248684657 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.694237747 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.700315463 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.690751973 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.689021863 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.687961515 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.690818039 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.693222062 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.693518985 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.691589573 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.691727507 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.690186448 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.692645131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.691434154 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692237384 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.689063535 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.691984162 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.688727401 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.693040582 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.692518624 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.691781701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.694403368 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.690350984 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.690551242 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.692589306 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.694476557 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.693031105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.691464061 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.689735966 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.691388719 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.690904085 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.689022981 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.691501676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.694094889 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691574236 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.692730261 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.694141881 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.696281536 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.699785569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.692243553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.69188374 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.691123395 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.690222225 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.693657609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.69366497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.691049915 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.691517165 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.690465203 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.692234241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.691362884 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.691745406 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.693015347 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.691669092 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693778091 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.696461121 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.691805076 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693144681 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.693392704 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.694900044 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.69233458 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694324459 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.693636298 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.69471148 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.69438246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.693782258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693158649 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.694203863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693616662 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.692115803 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.692890657 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.693223593 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.692779111 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.692992741 seconds)
  done (took 123.468882804 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.694446888 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691836581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.692320568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.687005806 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690599951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.695128486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.692397428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693830984 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693344667 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.694065702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693248419 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690088528 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689601207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.694697831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694854344 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.691491732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.695962416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692717527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.693366678 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693315142 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695098512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.69368225 seconds)
  done (took 38.851421406 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.693290368 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.693744975 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.691791867 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.693353256 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.691515775 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695827393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.695734601 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.694267253 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694350029 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693475083 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693844217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696995464 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.691970781 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692406091 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691142603 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692374991 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.695341082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692387109 seconds)
  done (took 32.093123846 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.691030415 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.691360051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.696672847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.692441546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.695704827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697540587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691319884 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.694287537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.69820425 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.693492816 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695741416 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697414611 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.696995558 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693313723 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696881111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.692977091 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695870106 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692839302 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697542516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693120958 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.690261681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697463862 seconds)
  done (took 38.892086627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697290327 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697796759 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692780898 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.693639426 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.696851795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.697385943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.696109122 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.694646038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.695435505 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.696304519 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692727976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.696695913 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.693972576 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695093229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.694295828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696073822 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696703146 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694958897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696387193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69246052 seconds)
  done (took 35.516866834 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699627719 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699041222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.698526394 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697909906 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698946154 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.698575733 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697606175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.695115727 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698539314 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.698908378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.697439186 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698196771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699984557 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.69810337 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698985005 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.70028359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699631445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700982607 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.700672277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698400797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.700655475 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696687118 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.699503352 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.700207231 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.699006638 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700203782 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698183641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.697856405 seconds)
  done (took 49.181941639 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700434997 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698243553 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.694175983 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.69573768 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.697031635 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.696939361 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.698315567 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.699093233 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.697186644 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.69601964 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.697808381 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698916783 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698534714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.69658836 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.699774691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.699801093 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701105717 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.698026489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697267326 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696038868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.699192926 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700105479 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.69981443 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.697503593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699288878 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.699683214 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697505797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695817579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698134629 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.698460062 seconds)
  done (took 52.557839055 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.718541552 seconds)
    (2/2) benchmarking "in"...
    done (took 1.717063798 seconds)
  done (took 5.050244729 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.695359972 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700702427 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.69960809 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.698230648 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.697082091 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.699938323 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.701301287 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69740599 seconds)
  done (took 15.206109779 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.702801761 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.702142577 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.701043111 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.70268918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.700390293 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.702564536 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710761872 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.702438586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.70584472 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.702417541 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.711071176 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.710782939 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.705718438 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.704204522 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.703926834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7065055 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.702103169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.702197049 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.704796799 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.703944584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.703168956 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704212547 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707072623 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.700672922 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.705410677 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.714178266 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.707876974 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.702613186 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.704017401 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.707241162 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.704471059 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.698350445 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.704911716 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.706566056 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.701735132 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.704759325 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712167064 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705725531 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.709631184 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704243546 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7031836 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.701004322 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.705666556 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.708156368 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.708354431 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.704206123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.70359369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.701206722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.702768314 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.707198742 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.708725832 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704740889 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.700715586 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709278502 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.705856063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712482056 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.70467112 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.709673175 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.71493374 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.71468459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.718734983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.713151375 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706912831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.708215809 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.718815471 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.734005685 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.713874867 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.703790152 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700983302 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.703497995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.712904114 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720372418 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.719552185 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.708182587 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705375745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.705732231 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704875005 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701607602 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713583033 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.711614118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.706772417 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.706842664 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718225773 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731549295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.705257256 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.706538822 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.705321338 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.705783784 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.708629239 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71920422 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.708728447 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.704944367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.705016312 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.704673735 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.710792012 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.706915081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.705207985 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706373997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.704691082 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.706063198 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705706769 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710662372 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.717874708 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.706349755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709700979 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.714427239 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.707626638 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70794339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.715113156 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.708879757 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707186283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.709883863 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.715046702 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.704853513 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710704996 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.719669567 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.707733774 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.710873936 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.707949998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.707413512 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71842615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.739878469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.705714417 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.708417702 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.713416109 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.719986683 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709614471 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.711997988 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.707165818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.704085784 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.705499893 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.712987011 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.708552107 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.70925043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707761995 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710080297 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.705266865 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.706989581 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.710743074 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.709317624 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.712342696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.71075753 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.711560173 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.71172161 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.709740527 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.709428495 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.715678107 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.708236406 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.711618062 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.711410416 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.703750971 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.707770025 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708532168 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.711134079 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.710589205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709323739 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.709729753 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.708470494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707766445 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.709936347 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706498834 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.710825999 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.714789154 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.709888327 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.714264949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.710701045 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706388556 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.709193696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.711703233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.712009635 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.709864281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.708385169 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.714834724 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.719819126 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.70693654 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.708196307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.715543468 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.709436083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71025677 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710981852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713992918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.720631056 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.711700872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.718395017 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.709286377 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710878904 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.709573803 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.711104093 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710174222 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712445459 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.714818083 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.719776835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724172804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723429242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.713625379 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.716039444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.713778513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.715755515 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.716599434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.712882102 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.709677763 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711528371 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713156709 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.713300519 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.715271371 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.712195214 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.713320281 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.711662381 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.710042162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.711152869 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711633115 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711861924 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713320013 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.709541151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711809274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71154128 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.714241343 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.709607025 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.710812259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.712642655 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.713601765 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.713198863 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.720876938 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.709431753 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715037235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715873875 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.715083537 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.712601685 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.714639396 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715739472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.713889818 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72142008 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713824229 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.714639905 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7216315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.715453407 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.712684105 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.717155464 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.713077361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.70895989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.71987848 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.72456899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.712529675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.714060194 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.714188411 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712855779 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713403622 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.723229948 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.712923628 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.714589099 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.713110214 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.715023372 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.710889143 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.715814928 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714625828 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.717009002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717125725 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713853542 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.713615823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715423801 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.715841315 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.716206395 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.715775414 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718628587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.725767059 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.719407793 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714638066 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.71803976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.716141486 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.717670741 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.717148903 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.715495687 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.715696406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728892525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.725363333 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.722309862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.718350211 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.714236521 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721748457 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.717901195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.720382392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716717836 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.718177748 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.71637223 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.714753813 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.712941804 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717088633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.715990675 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.718552246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.718613417 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.716967388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.71601106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.716943518 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.716501076 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.718458917 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.714224665 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715464926 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.716815489 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.721489321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719190253 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.717724293 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.716507321 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724715858 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717182302 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.718127973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.716529577 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.716596814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.717608361 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.719230263 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.719196789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.723107072 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.726062161 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.721087082 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.728749537 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.719046989 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727094699 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.71942818 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.72164704 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.724659266 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.715017241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.714734347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.718203162 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.718799514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.726785921 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.719516263 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.718911389 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.721450193 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720244023 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.717360801 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.717133343 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.719413062 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717543749 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.717191327 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726563156 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719370782 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.720871348 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720763266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.715418841 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.718905206 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.716762202 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.714027751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721001674 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.718383652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717087662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.719201187 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.719784649 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.716727744 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.720939185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.719149713 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.715268235 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.719374722 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728352696 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.721108519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.722526149 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.716899566 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.726943451 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720265897 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727965148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.720274508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.718611751 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.718085647 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.719873878 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.722370861 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.721768673 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720440188 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.719495438 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.72223572 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.725095215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.721130404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.723208333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.718074518 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.720893007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.720725677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.731936273 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749519332 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.722603514 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723347066 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.715521261 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.724059818 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.725941971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.72063805 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.719457792 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.724731278 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.733626519 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728999901 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.72194387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.720460208 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723101711 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721870799 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.71824755 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.722894388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.720903026 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.719287794 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.722440312 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.721503733 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725943183 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.721132928 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.723181923 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724038304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.721861878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.735555303 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.722850495 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.723745541 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723644669 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.719230049 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.721639467 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.720731584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.722528109 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721381707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719599037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.725390091 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730165437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.729571208 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.726086344 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.722672534 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.719884564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.722386398 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.722876449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724429685 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.724729853 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72228021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.726938372 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.720089839 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.723380962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.719859634 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.723148138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.725027772 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722022393 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728281378 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.730758188 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.720113678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.719416884 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.721928094 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.723266969 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.723110262 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.723979784 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.731366247 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72987411 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.738695191 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.732677905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.728318311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.724640738 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725953107 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.732314635 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722590475 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.724878818 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.723669424 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.723931231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.72546286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.730853042 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724772008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.733530972 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.722590814 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.724738187 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733503382 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.728169081 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727794715 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.727263899 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.727948929 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726099902 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.720419113 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.724398297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.726655742 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731158273 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.726862403 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726200868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725335571 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.725391644 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.726445089 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729988125 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72474823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.728389233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.720428936 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.729426527 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728276406 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725817847 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.723080234 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.727190019 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.726517952 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.731219406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.735300644 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.724231915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729627253 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.726259285 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.726673703 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726400651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725888679 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.724336681 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.723493429 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.725500633 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727489597 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.729346527 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.72978351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.728082487 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.729827985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.727764261 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727136458 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.732270197 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.74293574 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.738246356 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.723041801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.727911126 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.729103154 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.732005809 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732002075 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.725532971 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.727666876 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.729689402 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.728024296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.726549668 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.726170192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.734104887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74429184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.727864333 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72964916 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.729079545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733969616 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.727954238 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.725281697 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.728632044 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.729093031 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.733861218 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.737121614 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729496012 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.738071288 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737705406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.731273708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.734397237 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.736182581 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.737585434 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.732899958 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730724591 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.725838998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.738190815 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747071883 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.731024264 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741965721 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.763329286 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.730498596 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.730615525 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.731051665 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729424274 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.729834274 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.731848228 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.727331675 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.731086787 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729324 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.72918888 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.730055915 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737576298 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.73134665 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.732019165 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.728877659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.731249488 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.73187744 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.725342127 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.729426896 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.728640785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.729341701 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.730031397 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.731144698 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.730053794 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741971964 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.741756091 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.730279448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.7299687 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.725413368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.733763975 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.733888098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742182364 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.738168524 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.730200265 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.731733632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.732939203 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729755733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.727900528 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.731069728 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.728552632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732283636 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.728320084 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.744512742 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742431709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.737517976 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.732129092 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728049694 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.730291371 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731770152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731758716 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734415607 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.731305847 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.732530452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736279991 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.73309958 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.734310472 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.734443692 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.740622998 seconds)
  done (took 1026.151234184 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729740302 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729092874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730398528 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.726482489 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730036159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729696643 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728347582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72905208 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729128877 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729578431 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729769959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728804063 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.729734816 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.729145142 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729294764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730276596 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729365894 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.729111692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7295554 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727574376 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.72941521 seconds)
  done (took 37.959958559 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.732177738 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.729521426 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.729714212 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.73224815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73039323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733000127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.728071889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733021146 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733297863 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728980861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.732799215 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732705409 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.728427535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.727931491 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730314654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731456869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733459479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730441199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.732465467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.729361861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731510019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.729959782 seconds)
  done (took 39.727417349 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.734243436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735451098 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.735648682 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.730701037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.734554524 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.730345105 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.734863128 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.733367099 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.732110417 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.736920904 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.73621245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.736992514 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.743543143 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.739962002 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.737333858 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.733383762 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.877507611 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.735266632 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.734158441 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.733322017 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.732132384 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.741975189 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.733672604 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.732101504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.734471221 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.734659997 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.734424675 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.734741269 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.73444619 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.736867331 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.735888158 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.736398609 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.735307127 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.738208364 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.73706374 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.73958404 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.739261705 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.736264601 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.733311709 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.734433653 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.748215848 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.760221523 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.736843015 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.74087244 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.734735262 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.734411635 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.738923196 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.746047701 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.732484597 seconds)
  done (took 86.883662193 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73649797 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.734187758 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.733520212 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.734686106 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.73375569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.736322866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73651311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.736025334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.73442999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.733622241 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.737895233 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.732347058 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.731301658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.737026916 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.734391382 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.732060898 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.733994106 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.732603435 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.731898456 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.73284812 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.73407001 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.735540749 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.734084 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.732914189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73430454 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.731549509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.732505185 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.732164642 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.72908048 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73001305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.730449942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730372986 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.730805076 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.730689059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726896014 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.730579659 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.731185289 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.729552571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.732779866 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.73225574 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.733413108 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.732528089 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73373615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.734288009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.729528825 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732939304 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731066657 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.729569052 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.730360088 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.734153031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.732743359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.728149649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.729989773 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727935569 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.733279737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.730576932 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.72763037 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728961974 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.731266583 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.730103687 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.729657003 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.732178704 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.727596149 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.730440237 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.730769615 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.730907788 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728425646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740224458 seconds)
  done (took 119.441930735 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728775052 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.726177758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730351171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729476063 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.733978466 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.725175772 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727603451 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.728261882 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.730597157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728741278 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727035498 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727871359 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.727172711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.72782911 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.729462588 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727530615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726682804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726566709 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728799244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727472183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.727242803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.729113684 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726981222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.726830828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.728062568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.727180418 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727201816 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.727416989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727535424 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728443706 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728144174 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.727937125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729111765 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726448503 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.728334814 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.727592593 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.728114019 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728240338 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.727435599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.728817079 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730764174 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.72675714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730011173 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.727471747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729654742 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.727773371 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.729577129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.729159012 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729592161 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.728150791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.728889611 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728746799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732156464 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73126828 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729481564 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.731852761 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730961788 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729369241 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728893079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.729308381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731593884 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.733149007 seconds)
  done (took 108.820096161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72952802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729012496 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.727820858 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.726631531 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730198821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.730082818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.730443534 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.729662748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730593023 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.732149689 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732005786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726254416 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730550299 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728522197 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.729005821 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728532984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729499217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727588606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728525684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728086019 seconds)
  done (took 36.227281159 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.728358458 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.731552426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.727094954 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.727604835 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.729558987 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.726649045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.729375986 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730215094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728354436 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729592602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732211807 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732661891 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727291936 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.728618855 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.729516809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.729452066 seconds)
  done (took 29.314148167 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.724299784 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.731305627 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.724361414 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.727497553 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.725493632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.722636598 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.725926629 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.72189884 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.717349834 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.721548814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.721165212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722807731 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.721563628 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.721616649 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.718891231 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.722646729 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.718096138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.717248452 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.722564719 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.726543157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.721734402 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.718810762 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.724370821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.722644646 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.721127256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.719147494 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.717876968 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.719104069 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.718356024 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.72064176 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.718777797 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.720362527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.717943797 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.717654301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.721506628 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.716520954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.721079033 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.720851474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.720157861 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.721657037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.720428221 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.7174488 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.720501962 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.720070286 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.719692188 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.722443291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.718255739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.718405573 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.719225458 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.717656045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.719835416 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.722857694 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.721220637 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.72110682 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.721630414 seconds)
  done (took 96.301765513 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721351215 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.721058923 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.717989775 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.7209534 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.720589134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.718936195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.722219283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.720091022 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720121279 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721044839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.719474824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.721123976 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718849479 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.720291505 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.720285455 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722037604 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.719420468 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.718918461 seconds)
  done (took 32.60011694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.725250366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719299652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.722912036 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.718658591 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.717128847 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72138269 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719007362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.72178791 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722551765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.717929774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718816756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.720735649 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718485414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.720898014 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718462328 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718054777 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.72196803 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721106652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.718636508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722393811 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722705287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720158402 seconds)
  done (took 39.483785867 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.722740118 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.723610792 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.740462239 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.747660256 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.745251707 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.765235379 seconds)
  done (took 12.080337924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718413646 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721042178 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.717243281 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717781384 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722361699 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718848345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71741082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718157106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721411159 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7178226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719485139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719258571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720984048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716367508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716179226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717155267 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712359163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714097631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712315161 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715725121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713076397 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714918298 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712140301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712796391 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713260216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714318539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712558591 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714881617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716116047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714010916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716346823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715748727 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71579837 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711347522 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717390763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717197144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712656003 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714405247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715637038 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712896816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713704929 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714603178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715767461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711054431 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714696373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711047815 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712455766 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71128366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712730565 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713572805 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71379989 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710745472 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713930581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716018662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713096598 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713718735 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710111937 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710079086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713547089 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711082046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712111148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712128983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711466735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712672414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713414569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711916406 seconds)
  done (took 114.810754167 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710001595 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711806531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710814938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713893577 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711252457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710921004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710986635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709675634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711457138 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710633064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714168372 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709738395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710585766 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710722011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71095768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710526052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712891495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710683287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709996883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713434035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710126808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711957242 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711263741 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710311614 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709242599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712116243 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71063464 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709914028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712109314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710126307 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711349469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711685815 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711779743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711126004 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709086377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708346795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709744629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708567593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709259611 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714949072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709921205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714700912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70893617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710750087 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710212169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71002891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708551874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708914082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709777197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708949487 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709460716 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710022937 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710233805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70890649 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709653493 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709911442 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70816118 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710566392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708931506 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710925548 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707949121 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709404048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710923249 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708836159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709057944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708234688 seconds)
  done (took 114.519519225 seconds)
done (took 2381.074154989 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.742777521 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.800532262 seconds)
  done (took 15.171503954 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.874917569 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.82821834 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.711987695 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.753599448 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.712190272 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.70769355 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.734864389 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.711920914 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.712483153 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.710106329 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.711056181 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.895818108 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.723281591 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.711170032 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.710815416 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.80217241 seconds)
  done (took 49.642171513 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.713012898 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.715536507 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.724578889 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.714973521 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.715359752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.725098019 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.747576576 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.716746228 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.748667802 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.72881777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.783029924 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.724048333 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.712544109 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.763704278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727694423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.729230618 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.810014142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.78930556 seconds)
  done (took 32.914408643 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.790599807 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.724232254 seconds)
  done (took 10.144742329 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.730121599 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.708734174 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.735041187 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.71703399 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.71328715 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.726651679 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.717285263 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.718100364 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.736310384 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.723121305 seconds)
  done (took 68.853557066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.716589816 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.711108411 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.711695093 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.710463253 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.703121146 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.708594584 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.709377498 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.708526139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.376110184 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.747325446 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.719439819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.716902881 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.711654991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.713335266 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.707165273 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.735464837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.820033131 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.708147776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.708001272 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.716385124 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.711148871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.766284194 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.725336445 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.710483892 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.741289252 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.379961599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.721441374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.718241559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.815903039 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.707652263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.711167626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.713027184 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.716270086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.095293897 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978757353 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.715302852 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.728336746 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.718987969 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.707176751 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.817770567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.712515417 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.716432899 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.443326384 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.958243976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.802725782 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.755000067 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.0408994 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.730158226 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.713723153 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.74256264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.715177548 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.713560494 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.725956689 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.197530224 seconds)
  done (took 123.552200521 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.706816607 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.058823966 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.876302553 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.711265941 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994227486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918223917 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.709360334 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75689372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.709677026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.938353423 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967380897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816071912 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707646739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.706306636 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.709550398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705273556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.86500192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.782665963 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.709082307 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.706576787 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739688346 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952595944 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.835362375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.709247506 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.738397358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.923926856 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.833263299 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.81454565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.455680646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.707720217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773888365 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.708193254 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.709175402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.706926116 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.867435895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.807504027 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796116823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.710145366 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706102282 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.708730954 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.372609305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91005571 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80563491 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.841570959 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96270052 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914926196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.497208076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.706504281 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.449291174 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.874074864 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939665187 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.939654452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.832864185 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710417652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053513262 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.708646199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706844242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959955857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933961691 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.809657958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7095116 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709923642 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.711081942 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952754552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.711266751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806329852 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712497733 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.708604252 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807502167 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809862314 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.937257503 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924854198 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742480556 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.051807599 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.216310897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958646128 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.77819781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962290848 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.709707462 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706740203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790098221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.565233452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963737121 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.95537297 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957946668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748936813 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.429024318 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.70856086 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.939351947 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934414916 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.973791218 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.958582898 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.948052225 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.052472083 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.708837331 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.709334922 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.96444798 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837284887 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.712119431 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.056215473 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942792985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.245301673 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.739966053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020281659 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.843467486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.712640804 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.345695832 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709195397 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.942913923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.753183795 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.711257424 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.713127998 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934720975 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.705191644 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709273604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.364490501 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.776900503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.716626548 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946302746 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.712534794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982786865 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712396015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946593018 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.134819532 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.745132307 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.888077706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.960480814 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.712488404 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.957115962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955882933 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.828096943 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.935312507 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.425268848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.715533205 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00503143 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717823698 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.715121652 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.888222857 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.715491188 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.861837398 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.717972888 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00853434 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740897896 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946242621 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.718567876 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976416433 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.751686127 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.770574327 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.723768301 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.842772199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721191183 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.641515249 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.873318344 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720787847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.711612822 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.270705095 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.714890897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.864626265 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947298341 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739869172 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787427513 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.38158531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.714908473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798700128 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738008538 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.108522563 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.129260349 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966615306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.712915437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.71041083 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.714003967 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.951195756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.902859426 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.718808288 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712514023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.622882676 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.714138859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715694741 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.898871548 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.038848424 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71278578 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920926315 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717546914 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840832453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.712489806 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.793116254 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.050271236 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71463055 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.714029548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.715111348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.714261643 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.716471173 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.926411144 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.743352774 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.210643385 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858025932 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991252948 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.023399319 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96151475 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759268421 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.722624403 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969821712 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.716019462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.775670726 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.713150009 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736765411 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942478246 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.712498989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981546006 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989073449 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.570569879 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766999255 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.713819923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717273369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.715914868 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.864099922 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798180735 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.713425975 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.713639929 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.834161822 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.838118519 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925434783 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.718979584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.795184235 seconds)
  done (took 867.901584535 seconds)
done (took 1169.807785443 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.716538045 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.716280349 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.697769479 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.72233799 seconds)
  done (took 28.483410537 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.726401641 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727657339 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.731451179 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.727310586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.727741798 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.729100315 seconds)
  done (took 12.003609226 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.740435563 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.720090903 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.716073804 seconds)
  done (took 20.810098311 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.800789463 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.108083178 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.854796006 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.172774084 seconds)
  done (took 9.56819337 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.725278861 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.719195831 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.717782891 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.721328339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.722164986 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.721429464 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.723496906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.721619891 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.722338054 seconds)
  done (took 17.125093599 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.874425257 seconds)
done (took 93.496365938 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.748315035 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.726453834 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.695653645 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.043618236 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.888244149 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.781857338 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.146850273 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.044250272 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.816222089 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.998888402 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.741157865 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.999468908 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.739504105 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.714698441 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.788909956 seconds)
    (16/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.064032033 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.883705012 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.804667747 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.497146355 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.742920935 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.884669849 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.72463516 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.041243966 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.861362161 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.039198954 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.812728767 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.065136911 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.721687274 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.113024015 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.082356537 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.866951744 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.086870352 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.72594431 seconds)
    (34/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.989490507 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.731619563 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.873757585 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.897054298 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.821375196 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.836258553 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.864791013 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.727911893 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.066095455 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 3.100909203 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.751038095 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.764837644 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.124033613 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.70785298 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.549679167 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.587202484 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.983509424 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.834854609 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.008644967 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.890682101 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.748181417 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.808865528 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.819258334 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.699069202 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.948710121 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.949958333 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.402081566 seconds)
    (61/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.84395083 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.863668927 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.86401147 seconds)
    (64/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.745550996 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.749019666 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.706910765 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.432722725 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.892563332 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.73156286 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.005573855 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.132830296 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087731996 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.497564002 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.835323325 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.728047562 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.42700288 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.780102108 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.869136722 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.066700644 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.917725711 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.076494837 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.75458261 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.991881143 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.709875334 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.918704747 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.727690489 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.416954024 seconds)
    (88/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.75109968 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.882667335 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.809775818 seconds)
    (91/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.813990779 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.869509376 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.95427947 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.361256176 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.03718078 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.710817962 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.799389341 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.813914637 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.02056203 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.794907486 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.970752647 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.024247925 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.932648737 seconds)
    (104/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958045677 seconds)
    (105/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.758169932 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.172021384 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.817614737 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.843997639 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.885406027 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.728802669 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.109435557 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.606453447 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.702135394 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.716857195 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.075521748 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.064145745 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.928370229 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.430424765 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.635537632 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.226982638 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.229875453 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.925713859 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.73526651 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983985556 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.900485284 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.873918922 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.415153299 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.763281914 seconds)
    (129/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.817565047 seconds)
    (130/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.744205334 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.087260326 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.987327831 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.866626061 seconds)
    (134/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.844164134 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.76128966 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.08104638 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.990640497 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.790580334 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.89505369 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.767917454 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.739479847 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.751246929 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.608656323 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.736689219 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.859944036 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75348231 seconds)
    (147/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.973057918 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.011831848 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.74268854 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.828587708 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.114739047 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.735376888 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.943780711 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.875389216 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.948740586 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.826918574 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.73584453 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.966673961 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.870958362 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 6.735117424 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.734368458 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.749448404 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.205819809 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.843176323 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.733836274 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.798358598 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.753509158 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.73503213 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.142380153 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832760605 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.910588517 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.797791355 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.042021231 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.41137871 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.162499807 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.119069123 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.167827737 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.858219852 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.73649543 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.557679923 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.859074521 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.875215695 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.796891492 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.838213064 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.712707023 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.019005542 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.972847797 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.736703206 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.443335424 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.931850636 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.824161283 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.86141137 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.712562105 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.739350192 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.716169591 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.390916495 seconds)
    (197/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.059858972 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.738278794 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.834028478 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.983714337 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.932691759 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.497770563 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.802225952 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.736795028 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 4.977245849 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.984134128 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.762319824 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 5.56393069 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996086033 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.769116954 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.835265575 seconds)
    (212/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.820244111 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.701995847 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.016284308 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.951720833 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.409447189 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.91632225 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.841043044 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.744990027 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.727084438 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.862944273 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.490548363 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.070911799 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.808478085 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.767431093 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.782280968 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.723285175 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.748316718 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.928113957 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.743199278 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.968361582 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.768753457 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.84004336 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.042917939 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.996215107 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.510843538 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.08549154 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918536967 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.770350571 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.049467295 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.853223702 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.746031422 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.047376106 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.827401341 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 5.460888875 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.885288449 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.748869733 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.056541484 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.823605671 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.844288134 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.741503447 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.923331645 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.816547409 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.748317312 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.743726195 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.175941252 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.933245716 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.860486579 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147820468 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.047624557 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.729092584 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.752360511 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984672578 seconds)
    (264/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.097795759 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.768469429 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.805487468 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.120500137 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.772495663 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.476919327 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.742174195 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.135678001 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.742440088 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.02477391 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.669337611 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.081245512 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.020591607 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.668705608 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.723374682 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.855901404 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.4258978 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.762205361 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.213219639 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.585270655 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.724236275 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.407070079 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.875932903 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.858965623 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.764324506 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.048236374 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.810260169 seconds)
    (291/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.040625669 seconds)
    (292/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.749750559 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.834125835 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.808740979 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.773445779 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.284383361 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.745462333 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535387171 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.056274736 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.986901977 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.731215455 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.894152472 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.828337095 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.745458616 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.971033154 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.962548535 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.743064766 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.039215572 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.868373044 seconds)
  done (took 962.11864671 seconds)
done (took 963.817722664 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.777186298 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769574491 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.753648679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.77255321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.86570346 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.773245225 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.762649398 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751569896 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.794733955 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.800336025 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.748818675 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.77677718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.755020652 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.754815844 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.752365086 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.77093503 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.072833626 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.79126411 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.773269601 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.762292624 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.767137199 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.752808823 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.80291531 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.775455223 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.756111198 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.754564958 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.757348879 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.771669313 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.867146439 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.757467264 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.753646001 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.76767361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.070687512 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.778903354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.745417959 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.771159466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.766847516 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.763886488 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.75431154 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.785034325 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.156951098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.789898347 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75864214 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.755402691 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.753836193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753425611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.756624378 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.761413903 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773029639 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770326366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.150781251 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.810381872 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.756890264 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.756961031 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.766116387 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.75041237 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.75606226 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771776327 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.777619982 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775130741 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.054195411 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.791036363 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.755273535 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.773471657 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.765607701 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.183124833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.789554465 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.759172201 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.161229751 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.796604432 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.189927956 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.80750276 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.759387252 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.769468699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.786527638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.074783869 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.777448645 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.753804469 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.762708766 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.751060623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.764187623 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768793598 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.763001452 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.758382046 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770138507 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.779896063 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.769947808 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.757328477 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.765284797 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.776273751 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.764169999 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.762606341 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.758368452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.750434992 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.762697546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.759222796 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.75780301 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.757634973 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.758343527 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.764860935 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.160248024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81348842 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.750362841 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.755600577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.753879035 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.769072772 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.157205054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.798029173 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.77813362 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.805644322 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.757219486 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.055424017 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.785879842 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.776763686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.767116886 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.764841227 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.75151056 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.054834438 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.181278023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817810673 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.757828289 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.759951792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.776842378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.758458815 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.753669433 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.080295837 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789753456 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.776074933 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.880314809 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.772656938 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.797182752 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.754584668 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.759252763 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.785893826 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77759933 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.788605537 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.762841382 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775566909 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.775408858 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.753473092 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.773077318 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.776396512 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.757492559 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.76514129 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749145397 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.788082359 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773287706 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780124463 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.784099225 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.882708932 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.755227888 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.057486371 seconds)
done (took 276.53748757 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.833422486 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.751186363 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.866776548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.756695591 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.8416344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.85240667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755251644 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.757623439 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.759031243 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.138675854 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.757902056 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.755352494 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.758332286 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.754836933 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.840824685 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.757265109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.752809996 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.101756435 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.758181091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.835036896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.762170574 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.759838319 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.758024317 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.143124039 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.752801675 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.76071702 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.834800609 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.756956737 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.109190786 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.756991043 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.755670414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.109292554 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.853292882 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.777173892 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.767711071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.764532882 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840674686 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.764927851 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.845219172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.846764631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.857404771 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.800695756 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.762722107 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.751841194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.764348622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.758749049 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.757601982 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.789175869 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.755633896 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.757653733 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.1015165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.77195137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.766843305 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.75878949 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.758715598 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.783931355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.759933038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.761697333 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.852091609 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.761744663 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.825615632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.146150969 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.144573446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.764200517 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.763052385 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.757989011 seconds)
  done (took 177.005976098 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.833262487 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.838738713 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.826808785 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.763881003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.814918196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.828071622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.768216221 seconds)
  done (took 14.341444208 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.769276089 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.763499511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813968379 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812037686 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.763669262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.921758087 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.761809508 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769541225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.760288677 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.793441824 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.764207192 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.762890401 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.771108881 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.764584682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.81232528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.775116598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875579056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.766055841 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.760113144 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.920827609 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758787593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.770500897 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.793255451 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.777688612 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.762920694 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.770242844 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.358674449 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758660213 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.762639246 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.760620431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.76157231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.804854612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.761436471 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.755944127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.763731318 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87786611 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.761074112 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761508485 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.765781503 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.762999218 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.763878293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.764507346 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.762820786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.756744866 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.76521492 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.788232368 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.765897624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.762641828 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.76468093 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.766043042 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.79407054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.769576106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.764555661 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.76596297 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.809362583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.772116339 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.765838182 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.762422282 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.765745233 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.765989041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.916602857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.817940621 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.765346449 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818382198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.768309034 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764612049 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.766788267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.766519164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856618229 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.766621399 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816603842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.767592977 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.924764763 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.791306506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768630173 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.77331442 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.774055579 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769854486 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.767445848 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.777153297 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.762456461 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.768068244 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.777233141 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.768016852 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.762519538 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87849572 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907120081 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.768847145 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.778848011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.77721922 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.767514303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.811143391 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.76674871 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.766960282 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826232835 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880871597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.79718644 seconds)
  done (took 195.52712182 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.775894335 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.7751803 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.76884438 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.783197367 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.768025041 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.765171433 seconds)
  done (took 12.308089163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.770997799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763945072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.763495312 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.764969472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.770021142 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.773354712 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.768058263 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.769688298 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.774472925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.771229234 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.768043437 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.769590873 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.772544643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.76548431 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.77035813 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.765649199 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.767220059 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.767336194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.766675808 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766855871 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.918597961 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.771617614 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.764242352 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.775355247 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.773379045 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.770311815 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.780923414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.767559099 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765527912 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.776641096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.769725619 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.770681445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.776035281 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.779677417 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.774717695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.772314832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770780541 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.772344206 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768147236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.771306294 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.773105255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.769216386 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.769513665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.768391882 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.774624261 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.78006181 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.774910904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.779421267 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.769691033 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.776380493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.769160084 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.76730298 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.773978027 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.772643794 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.77375945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782364619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.773109589 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.773020873 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.767663443 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.776728275 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.774561852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.774982352 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.770643328 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.773451514 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.776149794 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.766133609 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.779858153 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77381176 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773001202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.774744329 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.771022242 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.765512387 seconds)
  done (took 130.376902193 seconds)
done (took 531.243304806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.767706299 seconds)
  done (took 8.444130165 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928104815 seconds)
  done (took 8.646247114 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.320583782 seconds)
  done (took 10.001388231 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.783464884 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.813493734 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.775017894 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.76855055 seconds)
  done (took 28.841028459 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.87423489 seconds)
  done (took 8.553216939 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.784488693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.758895613 seconds)
  done (took 15.257313554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.846184023 seconds)
  done (took 8.523020029 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.830160796 seconds)
  done (took 8.517346707 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.773159065 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.782514834 seconds)
  done (took 15.256682146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.746539347 seconds)
  done (took 8.426031281 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.945904381 seconds)
  done (took 9.723392401 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.790596074 seconds)
  done (took 8.538018894 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.800899601 seconds)
  done (took 8.475688402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.826695136 seconds)
  done (took 8.503554668 seconds)
done (took 157.386519735 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770216357 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.770977744 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.766603658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.765259834 seconds)
  done (took 28.748040099 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.809633062 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.805349965 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.803492453 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.810375632 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.80404021 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.801113647 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.80076066 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.793358253 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.815523958 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.805152729 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.807910727 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.80915126 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.804605019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.797324498 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.809956985 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.806606765 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.81611135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.80571111 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.79827086 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.81048817 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.776127193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.816470573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.80915475 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.770471001 seconds)
  done (took 44.965223042 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967876877 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.847945084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.930119544 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.830188354 seconds)
  done (took 9.255246637 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.827993514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.825963511 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.838263773 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.875976435 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.899438798 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.836939639 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.797739499 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.792282676 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.779747473 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.826684179 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.899680216 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.820996202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.905680208 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.770255079 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.963280722 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.775060407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.771100479 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.825297577 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.875742126 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.888361826 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.771851556 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.825663654 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.826253938 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.822901998 seconds)
  done (took 45.720235815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.77521819 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.780369753 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.778541262 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.771846988 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.773808517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.769916321 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.780496094 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.771385316 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.796127688 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.77322459 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.773162237 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.775821286 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.76830843 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.771019032 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.774011748 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.784809575 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.789180161 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.77722934 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.777154943 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.778830568 seconds)
  done (took 37.218752361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.769814337 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.617802948 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.12205181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.023534143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.764096282 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.768341463 seconds)
  done (took 30.748587501 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.787263775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.780937142 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.776240551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.831373988 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.922145274 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.785497973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.775470775 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.793973995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826294169 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844958502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.798271672 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.801591077 seconds)
  done (took 23.402890866 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.770986652 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.768801146 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.772808768 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.784938197 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.786094815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.782122778 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.784727589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.771066321 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.785964995 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.788540481 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.780292332 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.785218577 seconds)
  done (took 43.047996422 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856577693 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663082796 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220495797 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239658285 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298444708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97262244 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.769814041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864325404 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.768871258 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042047793 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123446209 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975422357 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020384352 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.533235866 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.765667604 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.224898248 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06289051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988877921 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793852701 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457941306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877370063 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312396387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.412633759 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879559594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977085783 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.89570208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.026381081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.733414395 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820231801 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774717038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775283524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767399899 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044384752 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897520983 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843951975 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777130395 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189949303 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.481728793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.794133727 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.473192201 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.336121689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88669047 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774498935 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767617542 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699368247 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306352643 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860823136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.771548336 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468697872 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.768153402 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778847599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847579445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.77196062 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.58308521 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458150771 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036397254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.766493981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782746681 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33433123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810494548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416731406 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.705734862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.860768104 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.408754609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240003276 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.927769084 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.76906656 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774512923 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699177028 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.469615855 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889734949 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91376349 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.782688822 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414352875 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068778036 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.192552078 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825004941 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048604682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574488918 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.704933447 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992044403 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723832817 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70206004 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.621601425 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702443624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007148453 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808255629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.357318123 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807508834 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86154611 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.781749803 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795128887 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781255056 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993904365 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.646488327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771667737 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.09161038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034443842 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792518135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86943599 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708501678 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.776258178 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029956818 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.983563917 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.026237533 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.233401127 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874892302 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.719236061 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.787304664 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.716470557 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782536447 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.056491628 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84414167 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809683365 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896981048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.731283584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036343969 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760029445 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.872717322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.150429365 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018172255 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107344074 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032272015 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842937129 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.776957317 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775964005 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493150339 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402080334 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000045758 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.768265042 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275612217 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782384344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.77931792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708097342 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.437487845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156546918 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.871222076 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99977611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.729501112 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052872701 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706253541 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918938478 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.76191854 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.99660015 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.433714674 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.861263398 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035845567 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027270866 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.021672475 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787533237 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796123957 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873645718 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80067409 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.222888676 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028136039 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.781812487 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.781292327 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497383629 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.847299816 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783592554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.781176342 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341319966 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067197973 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812754102 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781437832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66781919 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.795029968 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849226434 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780225713 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789856214 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.300904393 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289581979 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.787887254 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.435929647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000771758 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788921042 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.485886625 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968744323 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.796466416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06316845 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848738945 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.714263131 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.478640399 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.483914957 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779229219 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712956003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.777838278 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787566858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789449818 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.975370127 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062927433 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83113359 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.444113714 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.8913561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788721912 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.783236002 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777944485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.275818702 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832031501 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423952137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784751704 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913604856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.790604219 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713503468 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.783898731 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783010412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.782029022 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.736649225 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831894161 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.428707319 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994704717 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033502387 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.197508982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794203964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.446967358 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.902534536 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.803393067 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.099880481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317917845 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.914452198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847092763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.790706426 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.495192779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524654239 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349762833 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087412938 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11547426 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142095408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.155512686 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.105587528 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872634816 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014061284 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309636652 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841009164 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878069546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724017388 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795995031 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.433367427 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142332132 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792339966 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003958755 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080141206 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.170372986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9197099 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99436774 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816132022 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.599978056 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809336295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.293865272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808000556 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.263247289 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988407869 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87100811 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097903986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.865725443 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.781635792 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137053259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823563204 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489962807 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145769247 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.192507912 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.275116675 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017468348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.783663778 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22827716 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141691718 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.975584537 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.910798031 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717796482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789795258 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79336075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.774252253 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.761080203 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.616785219 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.033791083 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791060185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014899663 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.910331351 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155205394 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.688127648 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.7845992 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782427582 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039350189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458116798 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93964391 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.09157823 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.355978832 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791268753 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.717248035 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715515114 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.484403353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.790749506 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756276885 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006087525 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901895114 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.4685992 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.164854865 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098384617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033325278 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.792659415 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068034944 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067556538 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.279837226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804932684 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881009432 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105056084 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.519459752 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.003359981 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015414247 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322672508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005051335 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236935813 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.735279025 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.781712489 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992122295 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003066147 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.176647869 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961824586 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.495256739 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.793331743 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146808882 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852951916 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.158965453 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977467079 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.874392186 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792147993 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86513387 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790498338 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.794325609 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.793825257 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797032329 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.185036353 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901360615 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.797406096 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866575029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829713487 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.360278769 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.796206006 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0681851 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154908772 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1315134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854623493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782197247 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786866102 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721788939 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914971333 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.227741942 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057527772 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.912222637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.924039914 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808301907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.114010963 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052917162 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097992572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055332172 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.678938648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413950506 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.911988069 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.00899126 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796646062 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.998286728 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022441424 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105035123 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259003679 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.913922915 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983648028 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060881054 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15435011 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786238273 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376750822 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.801739982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203251223 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.820791841 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.174979763 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050424107 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79400741 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912936713 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796465451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.986300687 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.239138828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514756597 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143456413 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645793919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794777529 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078174523 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129890135 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104498418 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867455324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796112567 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.482979948 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924904894 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.649479608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.021592265 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787625683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000411982 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.499477081 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797991431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07269235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102865604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.784225065 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.686490223 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82331286 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.797219675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010391527 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018869946 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042674449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793609507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.796539963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.607180855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075142903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856146553 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718966568 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.792880247 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833853782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020639142 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806092005 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.305056181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.491208242 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077601848 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.708569307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807848211 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.188849109 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175271709 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131855593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.31823002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014503932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350214104 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.638441228 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167000832 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.791429022 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.201038437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16576124 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.795480424 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295192368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902332699 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075369073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11680123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.799453389 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521152533 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829219582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010409821 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155802059 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72768981 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.789541097 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.818746843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.7926646 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.783158735 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797093888 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.72295692 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240265949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630007312 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284366364 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.789338705 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.950941448 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.142334237 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327548707 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899577242 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814879536 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790731748 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.511062182 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.081297818 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041912345 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288835844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.860836436 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.7930196 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787803182 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712236361 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981005177 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.983898351 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083034139 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.125547868 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901985529 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790241448 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.002931186 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998215412 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.19879165 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927709128 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.909806048 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904731596 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.713959264 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502719023 seconds)
  done (took 1620.789296271 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801833444 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.83068902 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.819624006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.851126394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.820755104 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.823992348 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.863625108 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901078526 seconds)
  done (took 56.416784937 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.804249055 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.967313134 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.813590178 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.803972424 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.815577364 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.80362266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.973363571 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.818602165 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.815461456 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.817506407 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.803689514 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.805415535 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.066024828 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.830705897 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.807082237 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.788888488 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.815574206 seconds)
  done (took 73.081909553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.808981298 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.014440192 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.837125346 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.803156214 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.997883131 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.817925621 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.791588723 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.841363403 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.809269216 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.212290085 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098926735 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.857153742 seconds)
  done (took 89.610626774 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.819857996 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.810919754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.812224526 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.813495894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.810885375 seconds)
  done (took 10.796203873 seconds)
done (took 2115.496755667 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.042344483 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.992015147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046406539 seconds)
  done (took 5.758954181 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.952004713 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.000675726 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.121076168 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.126042707 seconds)
  done (took 9.917961962 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.09360148 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.175415686 seconds)
  done (took 5.989942976 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.124788031 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.837129439 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.22112267 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.80867216 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.810408855 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.809558681 seconds)
  done (took 22.155741444 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.808791565 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.811428828 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.808974005 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.81132822 seconds)
  done (took 8.956445029 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.787174561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.473525244 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.788106525 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.803473899 seconds)
  done (took 20.575767547 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.959752494 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.925489131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.951062122 seconds)
  done (took 7.558328121 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.953436874 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.599720097 seconds)
  done (took 6.275681619 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.970050012 seconds)
  done (took 3.693565998 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.836930207 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.078871846 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.321585736 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.35805762 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.414343075 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.639057592 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.102179261 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.032586056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270002921 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.258783789 seconds)
  done (took 24.035756291 seconds)
done (took 129.867304317 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.1479503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824428191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.053877457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.157117912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.033408926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.009827559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.02899915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.151625616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.835039157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825798052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.164314498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.036707106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971975744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.822261007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.978966914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82296682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.030953853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.162600526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848381624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.060016958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038441099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.808177889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.004332028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.824703403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.055460259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.960234086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.352327082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828321198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.991492096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.366100953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.964395444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.200763298 seconds)
  done (took 166.085864954 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.80906458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.80820227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.809138614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80877264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.302021843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.810350486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811721259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808682315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.241866482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.236090466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.809564347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.298936827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.809504257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808896465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.811083585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.80916799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.417819797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809443037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.810977861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.80961202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.813183985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.117763732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.810570596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.12613287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.410195411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811374288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.810202099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.811505041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811199107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.808820231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.810680145 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.811418113 seconds)
  done (took 207.32037716 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.701844872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812837283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.813824797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.811599363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.811950975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.813598321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811684656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.810141003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.564550716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.559921348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.813921587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.81164793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.815281893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811063954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.813344516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.811085195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.811061367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.739739901 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.81306771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.812273153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.812980532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.553817778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.812734349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.565233678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.812784075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.815014266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813297194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.81393649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811865838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.812122584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.814820276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.812868179 seconds)
  done (took 218.543356412 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067199079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.817853213 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.818442999 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.743069738 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.818334745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.81555337 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.811274002 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068478774 seconds)
  done (took 18.688825382 seconds)
done (took 612.368437635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.291483646 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.135368367 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.988689314 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.838544223 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.183871017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.891057571 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.835155542 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.899812475 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.450749495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903693125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.488516054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.858376653 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.572989834 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.861903922 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.956451302 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.894524933 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.432055146 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.524381199 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.014804834 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.017813012 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.017503435 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.760725311 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912416094 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.487184827 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.599708465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.807493627 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.904283823 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423903338 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.846321214 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.991535622 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.605319446 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.132788689 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.852575014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.837424934 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.888406064 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.869008476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.111673951 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.850901185 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.958561332 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.568590978 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.007460838 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.369869234 seconds)
  done (took 100.574773744 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.806427267 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.800422794 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.804814893 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.802790903 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.80607515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.801452923 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.80464934 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.803007784 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.802711754 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.802580184 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.803614835 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.804346413 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.802944579 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.804784869 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.8041458 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.803086642 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.804329188 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.805446867 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.802320057 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.803461575 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802616862 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.802451061 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.818904095 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.802668648 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.803821112 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.803337937 seconds)
  done (took 48.645735135 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.821006447 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.971134501 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060267714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.843906139 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.821778572 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.822110296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.838694839 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.826798991 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.823030746 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.823158035 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.906766572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.82826938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.83954065 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.059114366 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.838424009 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.821529627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.821897028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.820332146 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978440561 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839306386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.841564218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.825942055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.839927298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.837074924 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.820648194 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.823246834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.823714217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.28906289 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.832253704 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.90918519 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.864561187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.845681726 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.225073711 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.071845005 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.877924846 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.829803426 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.82161854 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910525975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.830150805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.824717035 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.842325076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.827100132 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.06317885 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.329525548 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837409902 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.824358969 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.298292804 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.922667 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.863567546 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839134748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.068504169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.842342392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.824235544 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.825966298 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.860881307 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.834470596 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.824233144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.162915134 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.836054446 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.842496629 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.829756785 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.826370742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982987042 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.83414484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.97351946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.835239712 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.831783685 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.82679321 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.065557973 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84289512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.333914025 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.837868813 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.823865323 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.911652985 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.982560612 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.32615497 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.837910739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986006169 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.24358251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.850583745 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.833912639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.279513094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.852560054 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.834087715 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.82712779 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.827279758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.825170881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.866239534 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.842739246 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249184645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.338119115 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.182995237 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.853735536 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.841267254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.826661523 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166484869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.833625759 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.828272162 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.057153347 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.343369503 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.840633307 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.832655687 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.316940687 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.842139497 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.845566754 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.83628127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.069959827 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.843527111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.867808291 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.827588438 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.833902311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.829095985 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.845602643 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.838153044 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.827770578 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.31569669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.931887239 seconds)
  done (took 226.693302422 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.823231699 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.825483887 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.821200037 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.825268091 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.820460128 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.828501997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.822619595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.820921709 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.827023427 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.820629964 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.822501828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.824999018 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.824083645 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.827781314 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.417826921 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.829710656 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.431301783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.82398127 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.823531787 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.82625313 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.516734787 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.836720436 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.82421707 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.823709386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.824415594 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.825037841 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.831982001 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.82942539 seconds)
  done (took 166.739841957 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.829289272 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014615054 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.848052546 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870773658 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.838177373 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.828730181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.854308266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.85264956 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.837110034 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.829251429 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.82976415 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.893109959 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.841239814 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.972485067 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.863796569 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.861397371 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934627978 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.83954971 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.827740078 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.828662452 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86074583 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.819238305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.892529516 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96295835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.848689602 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948858505 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.829268813 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.830857412 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.831015353 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948708886 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.843133374 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.89005011 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.863523784 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.850276072 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952222615 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.949246581 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.935671875 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.860337552 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.837122566 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.827087188 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.828840653 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.813495781 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.948396882 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.848743315 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.832672731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.929171205 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.85046764 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.829823837 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.841354655 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.829012376 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.847808983 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.850515585 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.901563333 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.967619079 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.864693647 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.856794918 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.856759236 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.114144597 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.83964587 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.931895499 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.819564068 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.946658075 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.85408323 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.812193995 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.832603574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.838029672 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.859661218 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.863589983 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.937996695 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.841956247 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.933931273 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.868825521 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.838394174 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.828591662 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.836055719 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.948071734 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.94871509 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.867119412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.871327551 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.865998962 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.819154053 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.834286383 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.812319034 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.852055159 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.836460247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.946469111 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.952041403 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.840736526 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.83520147 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.834277349 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.836131779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.86349412 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.961546556 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.871170405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.921513244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.902741235 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.911101755 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.849520729 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.846999119 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.83797734 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.899724031 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.852278659 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.844824607 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.160701189 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.905972821 seconds)
  done (took 198.643117216 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.216796401 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.879788153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.891985622 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.146264798 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.178516062 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.772457868 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.881460771 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.879435272 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.908052083 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.067782408 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.951053092 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.898591056 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.872110847 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.856839101 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.879865659 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.905012562 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.885888294 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.227032571 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.982177333 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.026864715 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.874118365 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.147077842 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.163358631 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.29581818 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.918056084 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.28074473 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.463179198 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.015926009 seconds)
  done (took 60.21687761 seconds)
done (took 803.241600326 seconds)
SAVING RESULT...
DONE!
