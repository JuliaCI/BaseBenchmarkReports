cset: moving following pidspec: 6102
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372945324 seconds)
loading group "string"... done (took 0.585886106 seconds)
loading group "linalg"... done (took 8.107991454 seconds)
loading group "parallel"... done (took 0.167873308 seconds)
loading group "find"... done (took 1.290043041 seconds)
loading group "tuple"... done (took 1.932750013 seconds)
loading group "dates"... done (took 1.342667865 seconds)
loading group "micro"... done (took 0.221349914 seconds)
loading group "io"... done (took 0.939680917 seconds)
loading group "scalar"... done (took 40.719934343 seconds)
loading group "sparse"... done (took 12.915447399 seconds)
loading group "broadcast"... done (took 1.037068312 seconds)
loading group "union"... done (took 14.489897476 seconds)
loading group "simd"... done (took 5.186048148 seconds)
loading group "random"... done (took 9.860652889 seconds)
loading group "problem"... done (took 1.893049568 seconds)
loading group "array"... done (took 23.154984457 seconds)
loading group "misc"... done (took 1.905281828 seconds)
loading group "sort"... done (took 3.602686492 seconds)
loading group "collection"... done (took 18.782677308 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561215314 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141097915 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14927813 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137581247 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.167025642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132749555 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138449561 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099932294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862392435 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163120507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131155906 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429078124 seconds)
done (took 5.524111896 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189413717 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093650112 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095629478 seconds)
  done (took 1.255345406 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.083089413 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144555691 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083329462 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.085316056 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.084980148 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084480447 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084494485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.084435635 seconds)
  done (took 1.718975036 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088789832 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.085057512 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083028524 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.085783452 seconds)
  done (took 1.411360382 seconds)
done (took 5.739607645 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802771051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.231946103 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201887375 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429171612 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150436175 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.197321303 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650390382 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33892423 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206037551 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095094838 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129729303 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.369293226 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.145304197 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655230603 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093641519 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109760465 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15656611 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433259324 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08674921 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100453865 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10836856 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146928142 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101567865 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092139439 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1689394 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085927615 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157073032 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102837246 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084671267 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.233064411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193690245 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681441747 seconds)
  done (took 10.846528182 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114513673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114218839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084795593 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141024642 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113661694 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086458771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090812148 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084134395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105486786 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144704437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.106824283 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12080124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081979367 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082864078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101555338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224445019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095608339 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097185933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083886886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095478305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122907162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094222992 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095536777 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095078985 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.145162679 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19586862 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112370926 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113406331 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.079895945 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09673678 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133538363 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142454506 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.082346333 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079401815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141003063 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110623776 seconds)
  done (took 5.114966834 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.994894022 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163789439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108873577 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150704797 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080919678 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124605733 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08223658 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096870465 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221725265 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.383286175 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636898897 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150866023 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127859809 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119827439 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086063057 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087754001 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085600327 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.52839536 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.114051194 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121302734 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097363974 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085914396 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084481523 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.08136103 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08822445 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078918432 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087977092 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12671924 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089308738 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.313098475 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138254196 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084802974 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95782445 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.185909809 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086604423 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119806431 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179693055 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104772886 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153908243 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083592653 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079489586 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079176321 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.314239712 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083937413 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08878566 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107369151 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083609519 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100874334 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121331567 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135943233 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082329499 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08474143 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188035137 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080559791 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097603749 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.150256495 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171345517 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082337389 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312199031 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108074756 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087929098 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081493049 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.1823718 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140467008 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087322733 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085851952 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087286935 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087256615 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393438586 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084941615 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.980123787 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08832294 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.094965313 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088697778 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087492613 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093306051 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093087211 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108584654 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084690156 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091967666 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084419232 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083536537 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084720351 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098533788 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.409150858 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083175193 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088304967 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081022865 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107115098 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112815442 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080086637 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081823121 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082837218 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118308654 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083752277 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082409324 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083695772 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094769926 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079861952 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085349714 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.228881091 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087171756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112453476 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113800318 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086148271 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1169963 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095350311 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085243767 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.48402105 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082080092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088787422 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083970216 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086175278 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083198508 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097482026 seconds)
  done (took 23.662905256 seconds)
done (took 41.687798822 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263502167 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081699191 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082187486 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081931683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082391685 seconds)
  done (took 1.746877803 seconds)
done (took 2.88432673 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141528485 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114171547 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081231888 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117936938 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080406655 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116398387 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115845056 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09210871 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115034329 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080141493 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113148912 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080685854 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08048366 seconds)
  done (took 2.48237445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096655893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097726933 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084060603 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09581081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08011893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096064602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094932069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102104846 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095136517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086106024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076700284 seconds)
  done (took 2.135035114 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095860653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096892216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082902202 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094645992 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07688899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094838586 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094842709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098323078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095392243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087622624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076963504 seconds)
  done (took 2.126656218 seconds)
done (took 7.871175212 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090582653 seconds)
  done (took 1.207144827 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.546339257 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.654965595 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09271966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115611675 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204467569 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12300994 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250372387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097304406 seconds)
  done (took 8.372876449 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.119926079 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085735158 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083286235 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083369424 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082395979 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083930124 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083074158 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084794432 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082518481 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082468196 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085660405 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085675219 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085158957 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085863093 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08202368 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086114146 seconds)
  done (took 2.582264728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.109996132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108786262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086795998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088388033 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086143616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085636429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087600296 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087297383 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084677534 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086859679 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089115249 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.086795743 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085655607 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078023665 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087712699 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089532324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08418283 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087052178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087648871 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088382455 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08861451 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077420484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084713026 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087453008 seconds)
  done (took 3.341218394 seconds)
done (took 16.630100591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121020518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083470297 seconds)
  done (took 1.32837081 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092216491 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0938023 seconds)
  done (took 1.319851137 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093420008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078645185 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099378639 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089510523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079107289 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078436343 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0979871 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078750911 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078495823 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078408628 seconds)
  done (took 1.985557485 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080918227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088543474 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08169816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092995182 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086209638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.076876333 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083682103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080623285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088683305 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076008793 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083984245 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.095798339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083053096 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097591412 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083966339 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081085496 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.082532215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079875657 seconds)
  done (took 2.660636893 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079239678 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079437549 seconds)
  done (took 1.296691518 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079293119 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076881098 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07929188 seconds)
    (4/7) benchmarking "year"...
    done (took 0.078925254 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076668903 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075611491 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077093885 seconds)
  done (took 1.677803829 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416480633 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133142187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339701313 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087842388 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.097827211 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277835662 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082437047 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087177151 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087647502 seconds)
  done (took 2.787740217 seconds)
done (took 14.197592249 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096020943 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100255793 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109376066 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394361686 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108253679 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081243138 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129384243 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196828418 seconds)
done (took 2.367615951 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.234402074 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.805113442 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.500298126 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219835755 seconds)
  done (took 2.663199904 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353288168 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101051909 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073326729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081353875 seconds)
  done (took 1.756349464 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082655311 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083301131 seconds)
  done (took 1.310893027 seconds)
done (took 7.111526667 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081753362 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.195179378 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105280144 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.077858316 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080639651 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.078490353 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077858435 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078154656 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079918301 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080401204 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.080205015 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080260289 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08026625 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077955485 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078183934 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081059473 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080026669 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078121306 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078517148 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079624418 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079435763 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081925388 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079846351 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079382359 seconds)
  done (took 3.228735431 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096734094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080430758 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084451466 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08461998 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082291184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084007513 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084554788 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079768257 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084263138 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081579007 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082132066 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081820721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081909346 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081723686 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08204084 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081925621 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0838976 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079817589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082162187 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082147231 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084007042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08018252 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082179486 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083725432 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082538135 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084031337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084457626 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082073918 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085472195 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081815504 seconds)
  done (took 3.649102188 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083762103 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076829052 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077762196 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087698466 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079572132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079328555 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078577857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079008976 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080764637 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078545517 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079620958 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079041466 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079174678 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080518445 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07917554 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083564029 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094888812 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077001184 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076962915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077545772 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081260891 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076631949 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076457441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079013742 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076904289 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076632146 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077132495 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07694772 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077232242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076648067 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080966586 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0811654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076792296 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085978033 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081649616 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077251133 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081966789 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076594973 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077813434 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076594111 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076347068 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077333076 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076720585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085628493 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077345457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078006847 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076634801 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077994305 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077580521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079456532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076777314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076443665 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079231939 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077826685 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081865944 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076146687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077661643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076473019 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077801912 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077334889 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077235102 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076775951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080456467 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077669641 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094463258 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086710599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07739815 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078538284 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077744642 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08110054 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078462345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092518037 seconds)
  done (took 6.878521914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100956153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099717046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079917064 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079427571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075505876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077402749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083064392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077689384 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079964135 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097150804 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07936842 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080400176 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079658171 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081884229 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079337439 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082226134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088312463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077686271 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079773969 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083677896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080530983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084827368 seconds)
  done (took 3.001311037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16242219 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083790409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.118841553 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088524425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084491559 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087790933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083886425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083697312 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084014954 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081146424 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081120391 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083748648 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083168286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081564073 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081407561 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081567917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083472277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081399674 seconds)
  done (took 2.780345272 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091064433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080195273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103774788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081879847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082128049 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084222746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087542542 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089873143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084263604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081846042 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089666173 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084459081 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084502873 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08164603 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084045919 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082188803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084531898 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081798814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089365803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095618085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086026449 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089082949 seconds)
  done (took 3.063432674 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093973657 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082104116 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094724948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083271596 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076201765 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079129535 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0858156 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081630754 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085435388 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083291469 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081095564 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079640799 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084050535 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081544418 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084353245 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0816325 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083891629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081625114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083826602 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076201774 seconds)
  done (took 2.828763874 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097230991 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081352708 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081090696 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086984974 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080651597 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080886738 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087344029 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08039262 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080517053 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101471474 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081012614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081214812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086728875 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084724661 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080751343 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086816432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089299879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087071609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080972509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080937977 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10137145 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081562339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087779333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080709162 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080639109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0810531 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080738729 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085033825 seconds)
  done (took 3.542489666 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080942691 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080497673 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079390913 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079655846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079972136 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07961331 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079485396 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079996845 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082052824 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079857601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081880991 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082023194 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082465195 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082131111 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083617937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081841782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080322484 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077825807 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077831646 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077703964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080083648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08026729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07981474 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077954388 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077868799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079686265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077573238 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077383611 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080193852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078061233 seconds)
  done (took 3.568087287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088264628 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086793312 seconds)
  done (took 1.344895632 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076629838 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094268642 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077457385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085304027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083113711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080370082 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086551949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083289462 seconds)
  done (took 1.832123681 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099138123 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.088749902 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080453958 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.089511522 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088863478 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098260191 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141381715 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079730953 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089722269 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080522112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096103496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081271092 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089770309 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084688099 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089776035 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093079635 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077483 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084226639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.081051504 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077863157 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080368115 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093105742 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089020139 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075745969 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085081137 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106695488 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097440631 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.079613513 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087842258 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091422951 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089466367 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07370237 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079193393 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079355952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077419991 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08880401 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097910566 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086962647 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09207783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08071997 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087176115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07434131 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088472878 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090131839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094909994 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079567675 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079407706 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075042928 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080080421 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085300099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075833413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084306026 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074452217 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091756334 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087829882 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094738153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078660176 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085755313 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086063776 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086884647 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090907538 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086390347 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089235421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.078552932 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095786677 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088895169 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091257237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074613908 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07373776 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077520012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093508089 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10745585 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088931663 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079548489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079910179 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.076927672 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086869328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079696787 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088554609 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090355558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.079185612 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083674957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091481144 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083768137 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0853016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085240146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077382031 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081500953 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080739734 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099038024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.077926847 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077475535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080502397 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094683178 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089050565 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078726372 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080362125 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090446787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073932937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07950389 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081253824 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086540818 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093028999 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083092578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082749288 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091330573 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.084632344 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083130363 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084688949 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075251816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07766533 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080131851 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089100057 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07288914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084663386 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081364377 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.077641392 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088955422 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.075849501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077228056 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.217905327 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09294359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078894624 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077511798 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086965056 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080046933 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083320935 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093413786 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078627558 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075564675 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075174281 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087770991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.078986688 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087144284 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083286789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087290996 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074773767 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077612009 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084425653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091759428 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082976465 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085675529 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089441057 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085419513 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079156893 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091810065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086992407 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08403423 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091228579 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085102761 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076963466 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083338167 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088390096 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080127586 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088606064 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083939063 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087097194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080431504 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078312679 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085009504 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079758425 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081426491 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084878901 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079988331 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094397866 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085794857 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07509349 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077505167 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085931279 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082038455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080439811 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083510542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087446285 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080394663 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077261635 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078752189 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085255422 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086558846 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082197118 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079533942 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08894896 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095965218 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079103335 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085893763 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078716833 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079500223 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079643777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092689154 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089055198 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083139615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086418383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076440387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088245707 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091661725 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081040762 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077057251 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08147082 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082343611 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09051373 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082759115 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07942105 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077924017 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084792415 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081635032 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085502216 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.07873804 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081313201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08357066 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07750866 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084284105 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079192354 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092604624 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086084783 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074594681 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081109192 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077713442 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089553491 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.074201382 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080635662 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081315977 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079663598 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078069441 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085697185 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073787689 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091302672 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091395365 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08420169 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079984831 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.077639956 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090166928 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083736797 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08609418 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084708647 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087298756 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092188558 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079962988 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084388313 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092332291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077475785 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072614016 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089501021 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076436911 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076416206 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.076508005 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.076117815 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.21748228 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088567512 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09089566 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07479385 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087133637 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078703014 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083003767 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075804524 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088547095 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08669015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084174484 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091530034 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080138228 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079792664 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086736748 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079523731 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.080565404 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080945897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086932623 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.080193184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085267202 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081489014 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084863008 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081515499 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077603392 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085609502 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079765319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085600919 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089397948 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.078900672 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085174523 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086013544 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.079667426 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086184517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083290198 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081651114 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086793868 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085030006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084803248 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086209201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074721831 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091274213 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078524519 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091574605 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083873792 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076587134 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084491387 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08565203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083381483 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.079707867 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.080693117 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085112867 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.078376562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086170682 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091625661 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080145659 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094416064 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089702572 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085744418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086251301 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084464099 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08511919 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081381381 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083652338 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.079585598 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08468951 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079121789 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087411276 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085866174 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08383161 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085237111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.079638015 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084518373 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.079755409 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074201734 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081189437 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081819908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079086544 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091631788 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079426215 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0822801 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078059475 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079755306 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.078412471 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076081831 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085589547 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085842285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079146931 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089193681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081543493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085501551 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09456448 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074023198 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078088959 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077123412 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0801991 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09122861 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079253086 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092454353 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084251909 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081556646 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076345656 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.079706403 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.078335363 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074003927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077062438 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087038618 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081227198 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077897971 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078392537 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085352443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078501526 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091002897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.077520156 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082026113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.078058314 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07538706 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0806504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079908167 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0842669 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07803173 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079198891 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075681008 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.077029068 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081343649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083558387 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07763811 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.21880484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092414266 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080104717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08782804 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082144536 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075607297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086815861 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079625039 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.078781576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081597236 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087352671 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086921905 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08054918 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093844525 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081899182 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086086445 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079458591 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077783255 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.078934939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079689773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0791921 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082003893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080898131 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093502521 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078711121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085942056 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084803193 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084001949 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090258178 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.080652512 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085576278 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085387958 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082588012 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088111375 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095588956 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084951643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089717009 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082347506 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08711293 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091478283 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083591671 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09307766 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086493443 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081878644 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087484469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082374361 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081529226 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081244713 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080378318 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091922904 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.081605027 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083495729 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083144869 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07959031 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084717733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083458137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094573709 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088464781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089361152 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076501266 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078902795 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081872343 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082451461 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086993075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088421065 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091292778 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087600808 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082915173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078275287 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093232459 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089219426 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08749446 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080249481 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086942181 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.079610983 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086389906 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083070277 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084078526 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080191025 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087137676 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084892762 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081764009 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089827785 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086816543 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079886628 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085384125 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085047814 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083660398 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075915694 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.081723459 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087578868 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089969247 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087567958 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081100046 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097195865 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082494533 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086242966 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083427059 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080457642 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089621825 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076155919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085507403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080085554 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07965806 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.074531281 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081987336 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080473449 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085402631 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081430008 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076238038 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094189634 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092138142 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085385175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079539703 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079219961 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.073604455 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07378696 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080214756 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078549546 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08402111 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092250879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079981345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08048751 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073485471 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078335945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084577027 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085537995 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.20932961 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07628718 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082542059 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085992951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091577041 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07920759 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.078876126 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086494646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086890257 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077881528 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082192994 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077418155 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08698614 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096179146 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.079829636 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085530182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08905959 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092838931 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.079584088 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.074942479 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.080255678 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085251622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085878453 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080665832 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.080816947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098718884 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087127499 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081866244 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.079123605 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087150509 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081707997 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093255496 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079923538 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07960848 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091269148 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086053177 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085919479 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089997403 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090768499 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085815791 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084783606 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078234323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084325476 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.077561068 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081972226 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.079940615 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07982416 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083353895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085428525 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084003185 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094254458 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092872043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.081694032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076717741 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081714949 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081797029 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.074984666 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.079826981 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077691027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078217096 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.077625356 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078342608 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085614397 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088042184 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083979975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.079456828 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.078951647 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073971421 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088623694 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086433324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085180133 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07724952 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.079129034 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.079575147 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087554206 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081948334 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078236126 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085186518 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085128526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085322786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074729598 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090674795 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078196927 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085240925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081538694 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079277131 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.080083363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087341267 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082985418 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080398175 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085836843 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086128495 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080415008 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077246048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076773383 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088493487 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077506637 seconds)
  done (took 51.571623121 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113798901 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076220708 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074907014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075074562 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084832749 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076647134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074817595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076312674 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075998546 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078178882 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075313333 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075361702 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08256368 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08985696 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085813356 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07925716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07531296 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07577336 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075228584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07606761 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082792033 seconds)
  done (took 2.95238803 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085212062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09040089 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086981675 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094890523 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083985994 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082930199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087191469 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0829202 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091430341 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085488665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090940576 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082385656 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085816265 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085683638 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085514462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08334166 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090568242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084866021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.082829349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087483974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083114147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087240191 seconds)
  done (took 3.147743939 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080518481 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079243495 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086835663 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076284363 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08059311 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075854688 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.083949584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079056077 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.083646346 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08318311 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08278293 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08250346 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087840625 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076645893 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084556134 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.077808704 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120078607 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.082062061 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.079051417 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.079773698 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.074325962 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085932776 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.074765204 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.075539243 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.080975583 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.081473178 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.079396306 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.077612265 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.078927704 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080786375 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079205632 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077757309 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085502174 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084803942 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080869738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081280194 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.078523251 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07904367 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.074760025 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0776068 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087496424 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.075191206 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079177231 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086286157 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.077477922 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.077085802 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085597126 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.078496655 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074351697 seconds)
  done (took 5.220181926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090605236 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126204652 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081177499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10624242 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09259386 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.084505068 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.083295305 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107915678 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076256513 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077187865 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.09379771 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.090857331 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07877505 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.082740683 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.084260756 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078396752 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079423203 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077615852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.081804911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077738336 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.081723179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084999341 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091822487 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090200607 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.081673168 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077840659 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077940092 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.082775609 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08950487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.082124795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.082633267 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083994303 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092518853 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083025881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077834025 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.081315467 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093408448 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.078875885 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.081208371 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076550553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.080551978 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082328702 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085136335 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109364366 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078749682 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.082838921 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078351253 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075499334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089447631 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.080340171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.084743592 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090620071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.081658834 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.078469091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082233868 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.092090143 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078568237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.076963855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08107106 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089318232 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076413634 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081640146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.089872701 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.079789609 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.08430516 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091849056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085259399 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.083735114 seconds)
  done (took 7.160242384 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088494028 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110443177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0954066 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095248608 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088760908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088958985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088853643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089312975 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088755875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093187446 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089352844 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.128000299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085066391 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090829285 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089352577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089705976 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090067827 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089932223 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090323651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091133559 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090872232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097461286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090947121 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097876865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093918029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086859722 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091025328 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091713231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097410196 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091010187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094385695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09041214 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090858781 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095870835 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.091468546 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089252642 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078858433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088991758 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088876039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088385338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084190395 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094842958 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088127417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084617429 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088441546 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088257496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095361957 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.091346564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091298743 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092919649 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088285512 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095230131 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088495359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088558736 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094606381 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.097110446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094714645 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094723479 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088772048 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09441331 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094730076 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097141252 seconds)
  done (took 6.99861372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093962193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085786972 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094478326 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075051596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077314145 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085196387 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077583931 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080263634 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086007233 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085801693 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088059037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084854466 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087642108 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088347447 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085709074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087493677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085594567 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085322322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08608717 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085016286 seconds)
  done (took 2.995275161 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088577097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09585711 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080464908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084507457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082904304 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08448302 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082254929 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082867538 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081322858 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08335195 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088981711 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088847862 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080564406 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084548872 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088684164 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085187739 seconds)
  done (took 2.639649653 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095889555 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085622114 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091606443 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079357815 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08008276 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07544984 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07890617 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075033552 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075546271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.091656612 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.078750011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089826839 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.078867738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078201529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.076245251 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084479459 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.07561038 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.07644501 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.079069274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090779482 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08351826 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077505772 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082664393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.079208304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081495244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083289124 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.078018149 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08008949 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.07642054 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.079102279 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082380431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.082953943 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075579241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.077038217 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078331239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093846197 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078761658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.078694544 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084535744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078900416 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077072996 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081015311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078713028 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.079335045 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075299368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.078944082 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075049439 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081644594 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078061233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081500185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.079557489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.082974594 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.081146921 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.087723424 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083355927 seconds)
  done (took 5.729731115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094701125 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083401521 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074755841 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077881338 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083426754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082620308 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084976896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082813432 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083268578 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079825736 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08287087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084562318 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083860926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085708481 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081683876 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083200994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074899862 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080867474 seconds)
  done (took 2.779186363 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085076971 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080020304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.087199634 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079489144 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.079202163 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081666022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074867058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077781261 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077986766 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080138878 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080301752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082344969 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079556253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.083974444 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082149128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081525593 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084028011 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07819504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07990601 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075442379 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082060267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077990615 seconds)
  done (took 3.054445636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.109532512 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.098659701 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.153994804 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.095052798 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.102609435 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.087703978 seconds)
  done (took 1.931094689 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105749984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113964819 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08013294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082725216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088327405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0836401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083485827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083854801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090933836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088462292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083164521 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090704933 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090499455 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090350367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088286309 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091372615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083385886 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083594274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080422684 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095757853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083671655 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090911056 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08341257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083459492 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083839258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089769791 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090033602 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088172403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083540998 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090370545 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088639381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083456582 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091115388 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08800255 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082342549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090571085 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083767201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094835109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088607308 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089617457 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08212885 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088570256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091711175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09010606 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092603322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085573806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089397133 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086100247 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085811013 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099346554 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090979828 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092051694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090587683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093040708 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092868425 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098877361 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090653424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092095752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090753229 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090455828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091972785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090818825 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092507027 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090330343 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090951042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091315866 seconds)
  done (took 7.176130501 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117786316 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081030575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083481253 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08824468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089460573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083813577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083970337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083913749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084036067 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081259528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122266371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084481902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090401706 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090620337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084347227 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084031113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083917067 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09034428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081280864 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097722521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08340485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09016583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090041805 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089533054 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088732489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088340143 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084062179 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083378875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084938179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085136581 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088307585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0861801 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092512038 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082585321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0910544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086084014 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084441079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087212455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083355217 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088065509 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089994465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09501661 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083665855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083438501 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088377279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083449969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083451178 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080653315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083732092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080716889 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088683302 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088514518 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088519659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089987001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084008069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083626315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083857587 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083808496 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084081282 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088563247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089598942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085595697 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096789174 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08352814 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084008665 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089942663 seconds)
  done (took 7.078556182 seconds)
done (took 147.299866977 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212804173 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188282695 seconds)
  done (took 1.6747628 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089763816 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117733159 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097540072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.14900442 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087398538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121654481 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120832273 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098618802 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087447508 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087042395 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087047894 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089727702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153351617 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087925901 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087346678 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09034994 seconds)
  done (took 2.944592803 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120058732 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181399913 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124923646 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.084928508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119959502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094955181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087296139 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100738452 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093612175 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086903395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.094400036 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095713409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086983053 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0913347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09192948 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092910824 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08926729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095511289 seconds)
  done (took 3.127274192 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119741493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111754917 seconds)
  done (took 1.530342594 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173937408 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.149318294 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.217367751 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363871837 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169699002 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158196006 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158457753 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.158764221 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.130640129 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151127335 seconds)
  done (took 3.126225403 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120509687 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170525617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308620554 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137098608 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092712656 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11015038 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137830364 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097670615 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100943461 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099033418 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098778414 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094361232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118224218 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092160501 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088731948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093735639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1210776 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088317224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089115133 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093963991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121985884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085482193 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092159136 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088595551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096418243 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096220875 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086688045 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0857474 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095515519 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089691059 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094755795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108522111 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095939031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.121594697 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090420354 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.122931949 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094233128 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092434039 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089203567 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092150247 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096002494 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095821527 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094172769 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094346086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087045814 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094226333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087424838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085559835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096357612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0868732 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095524433 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094985921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.121913558 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087124254 seconds)
  done (took 6.930511808 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123369639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122302494 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086063318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127350271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119761065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086102318 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.12191855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114478936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123194021 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086258309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084966989 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086617503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095344062 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.096807872 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130283937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123188353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08815682 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085726995 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122817601 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122403002 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085229985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116773126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113223735 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122307465 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.083872698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085852172 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0848012 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086952628 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.093581565 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094802589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.085231737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094514104 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098632438 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092458191 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083544334 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083942057 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084142731 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093366694 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.093967269 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093979064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092110549 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084114297 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084658758 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085430416 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084999852 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08380726 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092291081 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093818871 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.092576502 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084333704 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08544709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.085867313 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088015792 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096095772 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094347517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.097691495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.097114156 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086937054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086979718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09015488 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097435964 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095434509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095872997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085807977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.09424771 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084674174 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095067414 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097479785 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084343583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.087921604 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084504 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085133235 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085597984 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091724723 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0936029 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088579944 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087041735 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086258193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.094063889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092176503 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083856887 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091007921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083081025 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084355559 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08567243 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085326768 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091212381 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.09341584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085778373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084549226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084090193 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.083582004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083370342 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.091792953 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095189465 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.092779066 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.091236211 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085371441 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.092273005 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09069661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083833329 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.090063516 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082662874 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084274392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083772543 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.089708717 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.088646268 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090903282 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08261749 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.219161821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.094074185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096624864 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.085929008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.09355598 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094576878 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.093272162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084814052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094803519 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085088919 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094872992 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084923324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095916007 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085163896 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093900162 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085258761 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084453937 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.086546033 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.096875206 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088415562 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087144392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088060071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087466898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.09560539 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.099356322 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088800294 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.094119057 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.092447814 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085455613 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.093092749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084657423 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094797985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085167127 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086227284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083890492 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096376865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085912913 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084812116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085404057 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.09446832 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084565657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094203106 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091989058 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084218598 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09571663 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094500235 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091525858 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094455945 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085939761 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.085424629 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087242266 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086840787 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093870048 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.096047922 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08900856 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087078744 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094090124 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.097469826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086158905 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094899635 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094924152 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0950201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087426586 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087107089 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097040054 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.09443055 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092393515 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092376684 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092405276 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084724755 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0915695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092313985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084542939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098119526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084781118 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096776892 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.092915926 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090641313 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092491609 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.09470013 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.095383797 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093748914 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096104035 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083600195 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084099359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092660301 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083848123 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08413273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.091593592 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085513636 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085884862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.09689322 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084453056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.093851742 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083318062 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.092584442 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082952203 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085759805 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096813823 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083546823 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084605432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091280458 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.082763828 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089875205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091714393 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090026437 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084996897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084193369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.091055983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.090444932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.082492198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.22245034 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089689597 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.096333012 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.095857491 seconds)
  done (took 22.099591527 seconds)
done (took 42.744064036 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216309965 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170144015 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179884665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128662232 seconds)
  done (took 2.095223608 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122113358 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112369644 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101010931 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081329027 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.1079019 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081117457 seconds)
  done (took 1.939726288 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286260373 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202738942 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18717942 seconds)
  done (took 2.007616731 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22281426 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204712976 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476489404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295354374 seconds)
  done (took 2.626635902 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153952539 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097793367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080093128 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.096296944 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137560961 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164620597 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108447009 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132859965 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092564379 seconds)
  done (took 2.449434152 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156751144 seconds)
done (took 12.60933971 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114744827 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095791044 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.244028678 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.24157091 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092557287 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087887778 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.083668953 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.215746159 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.228587095 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.194832442 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 0.174683497 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.175188745 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119470596 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091062762 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090547849 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.219530271 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149216539 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.261651621 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099066508 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.326353774 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.262510816 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.107248402 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066790458 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089590266 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206159994 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10117594 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.218286413 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.096517303 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112786734 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086773819 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090641639 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105989274 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.237947046 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.089948969 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105203177 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104811773 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078958395 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090751819 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142708332 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082748695 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105029595 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.235020107 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067402268 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089939973 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.171954707 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 0.147022315 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160565111 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122990011 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.151809749 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.08504146 seconds)
    (51/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145108036 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087948127 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.236865261 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.190692069 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082757955 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.089754194 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108005296 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089590973 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.105802046 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.091883328 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150367625 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079657111 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090801483 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135886203 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105090995 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092576381 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174505266 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105515059 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091555176 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091613022 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.227418688 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091624411 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096990113 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110668025 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092584056 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089267327 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088390737 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104413624 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091975436 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215921258 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105911215 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08749124 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082503627 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.134157841 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.164142194 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 0.146261783 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199352702 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098003173 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.324003724 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199583809 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086385405 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136862868 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20948038 seconds)
    (94/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087753467 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066427455 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083621879 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069247564 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.087998143 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085812336 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092484914 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18469601 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.214583097 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.096054079 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221195616 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091800246 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108086056 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098047303 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171079709 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128286139 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067186455 seconds)
    (111/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078705544 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109587546 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190395472 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089719308 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090473153 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189704931 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091646669 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094234237 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082871483 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066185815 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090451806 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066121421 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067201067 seconds)
    (124/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0841218 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172610198 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175685452 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135084154 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176462385 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.088652186 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066227969 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.08831273 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165354079 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091719671 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065333129 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207026464 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088908458 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07647906 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084568221 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146434119 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.084160388 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088263909 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084203934 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065891028 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109945858 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066980578 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104284733 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109112489 seconds)
    (148/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128121414 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087149265 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064723094 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209814774 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.10275275 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.081243003 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.11979362 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108780421 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08421041 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196326033 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065951744 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104406527 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079954711 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084719225 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218369258 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165087876 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066275658 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122351539 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066842412 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129300972 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092248997 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080331852 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.162630624 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066269778 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.084602887 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08327381 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13537002 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083206205 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082797279 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067241891 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06656952 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131528524 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.123152877 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086336081 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082909502 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066214838 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13530629 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06664736 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153532795 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090422052 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083219947 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194391499 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090629216 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082802294 seconds)
    (192/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.105449797 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067675987 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066182223 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190670862 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065404418 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169800098 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06695354 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.083420188 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138238798 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084286058 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088037743 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08705371 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065694623 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.251626139 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.085832358 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083756345 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065911733 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078873866 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090267023 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065904609 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139504786 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.087562363 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090290741 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.087858293 seconds)
    (216/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077801074 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160812805 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168182012 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.107149281 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086263721 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193688898 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08411144 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.085444097 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.08920362 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192230564 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155025055 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065322756 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081622745 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09246695 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087922628 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094701397 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065429766 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106370241 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.087336571 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065064573 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.105640103 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.086497322 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.087063495 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064723292 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083325638 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067671773 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.087971258 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08198221 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110087334 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083551849 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.108344636 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066440989 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067234782 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066853512 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080546086 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108893085 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148404434 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066885181 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084157866 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.091076876 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079691445 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079107475 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066518549 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139831044 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083028311 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064993455 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089699398 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134371331 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094847804 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066414924 seconds)
    (266/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135555764 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172446516 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083174872 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06620365 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065241507 seconds)
    (271/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07621421 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065758238 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065223341 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065255697 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193244263 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.087653843 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093366078 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085674883 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064671225 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064673989 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08212364 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103348869 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12368589 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06464893 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105333729 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160050791 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.106070662 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08380462 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068491023 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083841574 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083556107 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.087807563 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084107812 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065862322 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137691642 seconds)
    (296/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088647746 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.087813976 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.104799222 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083022988 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067059897 seconds)
    (301/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.085715762 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080119384 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08869213 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083501472 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065995558 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065845282 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066388786 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082739911 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067946407 seconds)
  done (took 36.167315437 seconds)
done (took 37.516857464 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100785078 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117265866 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094418255 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.110834608 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.102007007 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093865578 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091181318 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09740302 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.098263734 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.100222565 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098274998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071243146 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094864738 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094385793 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.092925872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114951762 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098841945 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093651914 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093047027 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081846729 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092983579 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084546755 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084334046 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070781645 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.096565344 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089942675 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094940307 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094186314 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085228117 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08513114 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086928014 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.094209229 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084145143 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097268719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091374085 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0932233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094555076 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094850196 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08450209 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084476085 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.094380959 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.084206436 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092623834 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090682154 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08948713 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.088376974 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09300889 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.093756045 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111000181 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087391764 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092021842 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092877611 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093581147 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087588594 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084998301 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.090112899 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085581263 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112459983 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092956055 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08984936 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095041038 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091143213 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.088582144 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091376639 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.090753788 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092910119 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092340671 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087907901 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094327917 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086547413 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083347893 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092405996 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086197197 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084337667 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095506521 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097507095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080929611 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088648778 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091054107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090247909 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081831889 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086552424 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082147108 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086684943 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086335499 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068304946 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0847673 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089642582 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.079468733 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09077566 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089533682 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089888888 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081526866 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092013649 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079183522 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08563981 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081783924 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081781232 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081146581 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084274626 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081144044 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086541042 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090285842 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080997864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086557112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094673791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081760061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088662284 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.079126087 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.078772007 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.092943148 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091746584 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08226669 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087625911 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0812519 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.089767453 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08144006 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083842584 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.083874318 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081460513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.086427168 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081692942 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086186891 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.087347148 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093246065 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080386238 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0831527 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085278025 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082832699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087428664 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082828879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083216896 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081371724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074393227 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086931957 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08300848 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.233125438 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091335959 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095246148 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.085794888 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094719171 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089519397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089470098 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089256798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.081692106 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076381237 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09082346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090689204 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084636614 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.084860111 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083433298 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084816026 seconds)
done (took 15.126829135 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085563577 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150496097 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.111374313 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.110806452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.103129369 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.085842423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.091917465 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113298592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085290519 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118990172 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105799057 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.104228318 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.125578478 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.081649052 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.085147018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084933884 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.082138068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.096077884 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.109955446 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106267758 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126797264 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08030184 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104834162 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.105025644 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101394232 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116546391 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083881995 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084168315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086117732 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106467156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106381751 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.086749623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083712314 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108678053 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105116694 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095952841 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083798935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095483999 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083395422 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082544426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08439543 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109497079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094742519 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095935774 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.084629873 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091267746 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081582024 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094902211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102029833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091321581 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099879489 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110742898 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082743721 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097088187 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078656034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097225464 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089314068 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082936975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082953538 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.088403802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082244538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.08529919 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094980975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.092162989 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086064913 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096367654 seconds)
  done (took 7.734108451 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100669399 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.110813008 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099349882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100147852 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081835332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083131866 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082669022 seconds)
  done (took 2.099866499 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083659189 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104943091 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.104614602 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104162701 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.095201039 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.106184565 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09075604 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082957346 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10538207 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.082273419 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100419506 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111026878 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083383952 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094114476 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105390139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082601013 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.105551212 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082984024 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083306879 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105008157 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085870464 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110920596 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097522285 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086269748 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096332679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086287853 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130616266 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093737932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084175864 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.086768772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084277202 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122110418 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094141092 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.094689613 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081747169 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096120062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094733596 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085319733 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.094678619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094625918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.096773496 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086259691 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.084500704 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084539073 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.087906049 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.094119122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.084285405 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087354624 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086607643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102732059 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083722744 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095482234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086715332 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088531303 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08894574 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085199922 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091009967 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.082569341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100689419 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081723719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09827757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097375316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.095094352 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09752144 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08291095 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093296495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.094245608 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.084389954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085054823 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.084741868 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097840481 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08401258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.08512343 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09313284 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.083624675 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.10519452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.105202228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08287583 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095877986 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0836495 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.082821144 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08444359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.108070262 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088527878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082951009 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087085257 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085103442 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.085107463 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083496168 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088566467 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.083371307 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091302677 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.085768554 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084711514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086773311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098340491 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.083217456 seconds)
  done (took 10.337691777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088768114 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087264513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.087977929 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086535174 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.086716045 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087193389 seconds)
  done (took 1.993348209 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10943352 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.083120981 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.096319717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.085866086 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.120898454 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101382614 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103453605 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096764252 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100987362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.096181863 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.102661708 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10414549 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.108292405 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.089467014 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102911171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.088198858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.101954214 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087695608 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.092179078 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086624231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101009851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.087087665 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086258742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.101419812 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089638683 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085712465 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093971953 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.092189886 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09199207 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09325249 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085792719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.088707814 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090710197 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092525864 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099272007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09064303 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084893301 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090001736 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085488502 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088891916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.100256852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085905649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.087346935 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090461263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095671228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091110994 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090202015 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094860867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.098850097 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.090328065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090857272 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.08466501 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.088669362 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090251592 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091227299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092620542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.089896069 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.099401878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.086129943 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090843965 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.082486919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.089196813 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092633748 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.089410465 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.090745357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090510151 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093521434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087440606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086541799 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.084794486 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090772392 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.081911107 seconds)
  done (took 8.102204875 seconds)
done (took 31.691241871 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539916577 seconds)
  done (took 1.957851853 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63397966 seconds)
  done (took 2.081297395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.036187498 seconds)
  done (took 8.477608682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381892314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.455070705 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757478305 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150648002 seconds)
  done (took 3.227243171 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.741920731 seconds)
  done (took 2.197363143 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251766642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238931934 seconds)
  done (took 1.956168598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374073628 seconds)
  done (took 1.818960098 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099489707 seconds)
  done (took 2.541437581 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.249616265 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177771012 seconds)
  done (took 1.878180176 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467002683 seconds)
  done (took 1.915618152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.246840801 seconds)
  done (took 5.697861265 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23347947 seconds)
  done (took 1.721288748 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.258349787 seconds)
  done (took 1.706638156 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.764264133 seconds)
  done (took 3.211450975 seconds)
done (took 41.850208607 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102922647 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101255025 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101226955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096614592 seconds)
  done (took 1.830282324 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.092617346 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.087251784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090868328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086420324 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090991193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086259998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.088334916 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089147985 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086509798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.086808169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086458464 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086643674 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089205832 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.088218943 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.084999423 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.089335892 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.090267793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086972046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.091932351 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.088918017 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.085795991 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08899302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.089837442 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.086162577 seconds)
  done (took 3.570050611 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097093188 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088923458 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.091041091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087771358 seconds)
  done (took 1.823679838 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094640126 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103810317 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101139462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092377111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103886018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099138991 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.082556009 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.082912407 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.084444687 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.091988761 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.081929692 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.107789165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.100983262 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091897279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094541708 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079108457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081547854 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100103555 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.092747567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.09259213 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084378721 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092535841 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.081825818 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10153003 seconds)
  done (took 3.671714648 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094960572 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.117350867 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.096617227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106959047 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.108498631 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08132357 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.094439059 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106943581 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141747871 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.081768793 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087633823 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.080850155 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.088471946 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.079408981 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.093934968 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.12146873 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12545896 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.082870175 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111545465 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07970394 seconds)
  done (took 3.446783868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.091298362 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.091031892 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089037741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.083924957 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.095837019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09148191 seconds)
  done (took 2.006612651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086987755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08592703 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.085659968 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085164636 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09047364 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085940875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084496771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084286014 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083995873 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083498116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083115584 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083520967 seconds)
  done (took 2.482421301 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200853385 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084059622 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084477033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.081753211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086254151 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08210738 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.096862393 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083459761 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10827764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083137244 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.082740303 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.084695276 seconds)
  done (took 2.621112121 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212691352 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088994562 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245755437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160419236 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119134828 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124458946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125953419 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125458571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147188598 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110417265 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17095912 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17485381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118712881 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147769728 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102658597 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11288607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161018316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176187712 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117415214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171770842 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153823085 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136993546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155643213 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113025003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116576465 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128588215 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.084723561 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092375917 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179414659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145162718 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151468906 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121275976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102187971 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187668201 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172401292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150211627 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157370278 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096488123 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112616858 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143182261 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206984874 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100951563 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167324653 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118763105 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091410351 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139148605 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12430919 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.27003001 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115850275 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103912664 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15328143 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191089029 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142123853 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100724139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134418915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122925797 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122446484 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129527216 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189804006 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166382218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138448528 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085231107 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122161064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157885008 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142158969 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117876373 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132057837 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103084504 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141736484 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163619431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131735599 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152304387 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125055911 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100590207 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13123709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145805752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13704838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179852086 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133988518 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086549754 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131605036 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110430742 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09324388 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157240055 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08899757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18350841 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113802839 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11531974 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140145257 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120848033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120554275 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16527632 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149664903 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115794207 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07921295 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115355465 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126854699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148282095 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098754965 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118185825 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12199946 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087912205 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286953412 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09042355 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134743908 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090319229 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132788196 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139771201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.091412212 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133998745 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115929467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114377326 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141517396 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166564045 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101042095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094715758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172629535 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13300284 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113217777 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151292365 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161653028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.112509892 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10973086 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153951288 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174950521 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102878547 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168457549 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114978048 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096656495 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.098742368 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132506588 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122221898 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133183044 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093988432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127473649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170367624 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.087973551 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108394261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143713279 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091505869 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09358985 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116727249 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114947541 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.108258741 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111366434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.11230542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144899738 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133667008 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116045409 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133388238 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109857872 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171547885 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10321911 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.114445322 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115176755 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.082983737 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137532403 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15891372 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09035733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162269998 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126882356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277244708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13191393 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098182538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145336434 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092830227 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.083764114 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148987918 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121530303 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121803767 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155751373 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126396082 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133637523 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128115356 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140692008 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140896632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138558831 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119688426 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.102050753 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124992037 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135832412 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.088841092 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105037926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.095618097 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120734843 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111008258 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098950014 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154018737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132584584 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121338149 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125780263 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110347577 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160302953 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.09268915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140183659 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129974661 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107572632 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156939167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158093625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144131005 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112068725 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145249599 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084010695 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087721645 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098449412 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130896448 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096337313 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096152825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124405841 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155221487 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136814802 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143941919 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133712247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127500627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161221906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.082851421 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.129380228 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147260057 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128653319 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115085331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2523077 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.112262032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151408497 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116672944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19109967 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125585082 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137916674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166289564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113664274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092754796 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11612449 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141814581 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113524037 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146973835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110176736 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100024342 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119748958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08892862 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107877438 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136110837 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130489657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145919814 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122163123 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142052416 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091077213 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124513692 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13259611 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131156827 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077175276 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127954099 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171099482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107243492 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127527689 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157441882 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092016988 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149132003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178512499 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15369467 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097267276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117475272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12982988 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133420515 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128329451 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144805636 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115286692 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147787718 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120934154 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.096570889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099076474 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107668596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114617459 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103560885 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110737814 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120072307 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106426474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137401032 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112557047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119404963 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277132614 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11280161 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.105508519 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109579654 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182971186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129733859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180863781 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.112859909 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147984202 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167001352 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089374386 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092668284 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.092332478 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146425983 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097458781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139789007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123354834 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126759088 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133860245 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146631587 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108414157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082564332 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120358362 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142107281 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133877874 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11015812 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11327481 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166727038 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110082283 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092556148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123766443 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128396244 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115674391 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179525212 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074859461 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120397952 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090174551 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093191072 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134199158 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160251312 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.09302439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.11142623 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131206546 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122023361 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133634922 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10965395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121283339 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139290518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152914906 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136434481 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101350956 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12182631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135662848 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157594369 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112226735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.107922463 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174401472 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306568042 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162485072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.098600962 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128541015 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125166749 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12038401 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145780887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097832206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166204017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095670365 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143515221 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113100798 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100092375 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137462695 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123577044 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101327149 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150419378 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127702546 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095842596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090617776 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125932277 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129139842 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115146195 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088342936 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146619507 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.087240292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142802018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179189195 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093746725 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116292525 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107437342 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092757903 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115439587 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113392174 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099098918 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.111788404 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175292251 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097526825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152436819 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14148655 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122112197 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143972272 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114437959 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650965204 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.089960271 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15638266 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124714561 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177107009 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111271528 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128218844 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121410853 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128264666 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147595084 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110843756 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187941297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28753813 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125687937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093305643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114486862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116926996 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099565793 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119575557 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125196824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125354095 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104973465 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.127003915 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131961361 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.094678678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108137311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162697093 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127044522 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152044058 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146398808 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097417098 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128728032 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144099879 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093313031 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127010489 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161342915 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116363705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111034185 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.093480997 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110319416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179104573 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.08709065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200856852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130604135 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121346034 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12715982 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118634531 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139966439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115004408 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131601102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102701594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117541878 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124110588 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093594236 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089522382 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116511605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120541658 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.109647778 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106852017 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112004523 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156668291 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.085772234 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109952703 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126051745 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150651821 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174816594 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097562107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09598567 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128910244 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123960959 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118537519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280719961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.09298825 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095749858 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.092840997 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.094604843 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116050278 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125428543 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130669624 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120775856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16698245 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.096228816 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238745713 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107791186 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117002104 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.082183082 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091495434 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108307903 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108390583 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115701399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121541104 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177598118 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.107988806 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101899909 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101922959 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.088682175 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096514952 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134509986 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122572662 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128270638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112616241 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.076034665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117894209 seconds)
  done (took 63.703581614 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120303127 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092334948 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112498734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160247388 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136236305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214679417 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164822528 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203853639 seconds)
  done (took 2.775640231 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084993829 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109167422 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.119237352 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09773895 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0825756 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.083835829 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236298072 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09591532 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.082082199 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105333643 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.092525959 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.084693251 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420141136 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.083227612 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.082877151 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074421999 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083208318 seconds)
  done (took 3.5713638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.396584417 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627109683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354616735 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.092780024 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.869069116 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107997116 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222966625 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.157472386 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097340249 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53519516 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.384068242 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14603388 seconds)
  done (took 18.555903484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100209414 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.093282591 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106536148 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.105311805 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096249042 seconds)
  done (took 2.146188819 seconds)
done (took 113.676015694 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097938321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44498194 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06741118 seconds)
  done (took 2.101258533 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106056863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.102533387 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10241248 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.099702613 seconds)
  done (took 1.980899119 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.09240562 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.093261737 seconds)
  done (took 1.749332677 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239617913 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188693071 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.112865307 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.098233273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094406839 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094710618 seconds)
  done (took 1.854061497 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.087832826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.088909311 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086464051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.091062754 seconds)
  done (took 1.915707723 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.091049956 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065825676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068108557 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070624444 seconds)
  done (took 1.857077848 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.101629491 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.099210373 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.094571474 seconds)
  done (took 1.858582301 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.118570796 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.105895447 seconds)
  done (took 1.786395196 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095917039 seconds)
  done (took 1.657008483 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103497217 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112881533 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.147354617 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.128952946 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.152445696 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128755153 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100217452 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.101559506 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094968327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.102711564 seconds)
  done (took 2.735079951 seconds)
done (took 21.694298957 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098297573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387586955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.377547567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106403244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685209605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.373534603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985098758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109190539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084640244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100759087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666185085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976028665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342334958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962429522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343599364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66814645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086177747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085644402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085697565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969006332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085749703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085494052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086548148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667937258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390652885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086122149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343878606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085770734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087919284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373354496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085857669 seconds)
  done (took 16.568775583 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089581081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138236873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089322178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101603707 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.086830758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086071026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.088167384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086047808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136908979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085609169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103125639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085713149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089500814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086338163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104922766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086099541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08697485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087080809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086459103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086152774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104722213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086139097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086450545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086634976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085934489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101533097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086317323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086154645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085977062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087952025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089269521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086981555 seconds)
  done (took 4.544444971 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135947389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141607069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090332274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12273958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128759608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087607601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.164307298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110954888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144450383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085767626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102907424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086643082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12091909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086633729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105869349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086752234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.087186789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087353784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086220329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086239346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104963248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085983046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086557705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086282595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086600238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100630494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086671302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086831511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086804516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.088418836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089659416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086657534 seconds)
  done (took 4.804951926 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.089747534 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.090298697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.097060468 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.098016254 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083730132 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086851179 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.088077548 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.084105732 seconds)
  done (took 2.305275568 seconds)
done (took 29.795544033 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.096751302 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.08545856 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.087129947 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103203442 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.090494263 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.095099087 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.081372398 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.090600862 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.088212751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.088294021 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.089597617 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.085003223 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.086493835 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.08139966 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088904786 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.082430536 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.096671091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.086580091 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.095785495 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.097016425 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.084881798 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.088299332 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.090434737 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.095444462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.095869305 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.095404427 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.091627769 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.087535226 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.083008229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.08536548 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.091009301 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.097431832 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085052181 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.095202735 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.081672561 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081710729 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.085990119 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.084757364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095822908 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090709825 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.083973671 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.091023135 seconds)
  done (took 5.311270974 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.101504061 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.105563828 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.098944525 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075679782 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.081483259 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079429781 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.102667997 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074247188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074285978 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.102396933 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073319512 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077606324 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079335184 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071417611 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076704672 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07374933 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078463019 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069593362 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073998985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074409706 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.102413075 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068524041 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092411092 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076774806 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070945133 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076035916 seconds)
  done (took 3.723267888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.092832082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102193383 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.108896891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160318491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127074871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.096470814 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097968396 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108396277 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112659093 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.084868358 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089267404 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.108280193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108925958 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09023296 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.084483073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.100370536 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.10031308 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.086452969 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091142501 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113184133 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105836456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102283391 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.110316879 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10124488 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.084168093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087008424 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.088900427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10036539 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.087134562 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095106868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.090016144 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.088422323 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08580597 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.094881472 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.087191846 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.083992823 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109049461 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095644267 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097644245 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.085164607 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.093993261 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.085716701 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110071357 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145399474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.083740238 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.088897705 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.088181967 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096137445 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.083963628 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112114682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096508274 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.084333554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085203562 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.083661369 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.08400275 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087280135 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.086481501 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.087137114 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.094188792 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.091006561 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106702492 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.089612604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101631597 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.084080361 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095423591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.083859079 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08582364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.083268384 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112877229 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086373494 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128389679 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.085354296 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.085295524 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095834746 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09492587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090109486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.084194503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101586609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095876132 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.088278723 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.092943216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.087910688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.088077249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114655252 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.084719652 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.084121578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.083230831 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.088175159 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.087487905 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.084999019 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096169794 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.083715048 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.087735582 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101982608 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.084248194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.084992506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.088018321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.086606474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.083463921 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.095251063 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.087927489 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.085583973 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094449373 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.085016206 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.087752757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09728005 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.090883275 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083156864 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.086600382 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.087691372 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.085877149 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.085575127 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.087713332 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.086164413 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.091425966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.090762625 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.08990223 seconds)
  done (took 12.572659944 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.181215981 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.170359788 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.087895052 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161770757 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.092913305 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095336704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.16506915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.109962953 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.085192321 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.086327258 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.085456457 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.124576698 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.120844347 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.131306097 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.095809365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.086024302 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107723994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.129624168 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.167370482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.160636821 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107648576 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.093502272 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.088189433 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.086502483 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.086639927 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.094828135 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.102292764 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.093921244 seconds)
  done (took 4.828054324 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.095901863 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120200204 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.089429037 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.107320348 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.104885566 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.082664309 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.08673745 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.086599466 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1009066 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.09161549 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.082810606 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.09024869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.089030075 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085683196 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.085635821 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.089070954 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.092330829 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.084948856 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.086435129 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.087873407 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.094954069 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105367567 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.088523042 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084936219 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.087981933 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.085045147 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075967715 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.097398433 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.085484818 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109690336 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.082774275 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.087420852 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.099156418 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.085774988 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.085158035 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.085089812 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.082713308 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.08243602 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.086820003 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.080886296 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081379889 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071111292 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.08438061 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.09329756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097938239 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069736864 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.087339698 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.087632739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.087969683 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.080838482 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.087673327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.088008399 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.088128283 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.092442411 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.086770749 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.088123024 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.086237627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.089228337 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.091278521 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.084168787 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.078582481 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.081521098 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.087496178 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077030588 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098007565 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.087668157 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.081245521 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.082885515 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08633544 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097705493 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.084518073 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.089993968 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.079944163 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0841717 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087693509 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.087587181 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.085701598 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.080791891 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.08470245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.084890138 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068614487 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.084893174 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067205092 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.08830346 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.080924827 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.081665379 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.085399822 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086933729 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.093870186 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.084808575 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.088719485 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.086122122 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08416004 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.08825247 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073007275 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.088360731 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095761573 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.096494045 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.083116228 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.081272518 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.099290913 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.088096464 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.082062306 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0705193 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.090178285 seconds)
  done (took 10.776013828 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.110649749 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.084337406 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.102001904 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.109277147 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09753063 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.093128479 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09813927 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.085932801 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.104018083 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091879638 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.094318845 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.08550866 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.097990126 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.097199835 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.085504734 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.095620137 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.087138498 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102798093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.099810377 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.082395056 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094222337 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.09743579 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097023826 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.099431661 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.098639744 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.099677335 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097507197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.093300837 seconds)
  done (took 4.313787921 seconds)
done (took 43.10240361 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.676159472 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.85009448 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.665142945 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.878881852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.716931957 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.88889058 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.762592231 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.658933377 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.838839666 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.705333209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.977533751 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.749214837 seconds)
done (took 64.101340861 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.693622332 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793504598 seconds)
    (2/2) benchmarking "String"...
    done (took 1.894240748 seconds)
  done (took 5.276474786 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.849994631 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.337788576 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.895678612 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.663623458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.664298733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.920026887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.465100161 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.11458397 seconds)
  done (took 29.647311589 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856708172 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.891381389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.368376648 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.407382689 seconds)
  done (took 15.155660146 seconds)
done (took 61.302852307 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.657219365 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.685100476 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.718678431 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.638881632 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.762017993 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.689539522 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.803882091 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.899731399 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.659878791 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.655804598 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.661538558 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.085606566 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.676351496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.877024017 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.660156401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663240133 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.728931259 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.145676383 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.819055316 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.675871052 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.682264773 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.716038466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.664840295 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.816026836 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.675685133 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.664682144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.092673303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.665804208 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.294922552 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.666682313 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.695509738 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.066223024 seconds)
  done (took 201.445190235 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.661848714 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.645546745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.781523328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.700668642 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.111547618 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.845861231 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.772006891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.15967819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.669525032 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.689872809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.842227049 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.661080744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.86379674 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.651890308 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.690398162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.7578078 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.794520184 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.876522192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.692744842 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.860404638 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.664449891 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.691044614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.655285248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.835482226 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.66370867 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.695432719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.682697686 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.689243949 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.85384596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.781820964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.677511004 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.680104731 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86758598 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.540720474 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.688205645 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.694874868 seconds)
  done (took 165.680695812 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.854831702 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.665283381 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.662773638 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667747527 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.672472492 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.664921653 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783987018 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786233116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.292992181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.177863471 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721928912 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.663901895 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456943078 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.66559394 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734101819 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.677935637 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.666768334 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.676818155 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.690089648 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669242744 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670190368 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791006731 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.680105103 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.665331238 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674810404 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.670994083 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670968233 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.031050805 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.667961522 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.890431132 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670301106 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677248747 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.907938978 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.66895039 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.669254406 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519051428 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.218722574 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751822031 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.667780107 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67196784 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.664861162 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.668784612 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.885384608 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.666288925 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.668348882 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.66693366 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.668644933 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.672681842 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.802050861 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.666779059 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788502184 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668636707 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.149783901 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.665569086 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66782724 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.704531219 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.500278467 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.664735746 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.672075605 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.667433944 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.66718391 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.68078458 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.668491811 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.746824743 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.666455746 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.675243496 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671304324 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.669098671 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.911460423 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.670046166 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.731179657 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.731016913 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.791686941 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788845238 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671126371 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732478143 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760456618 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.667244642 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.669532816 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670865978 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.66962785 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.748131666 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.667979528 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.834205405 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681373552 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.670254198 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726110449 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.737923891 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.668098174 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522014368 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.665361056 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.66885959 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.670697176 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947047255 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734650003 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.667203448 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671909884 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.809292261 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.667180654 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792195356 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.396063475 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.668147794 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.429368688 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.825922022 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669568761 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.800715255 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.671046853 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749945627 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679323287 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.672167247 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710214066 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.670426302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.730015677 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.670191971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.042217948 seconds)
  done (took 388.465579718 seconds)
done (took 759.096585383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.270054636 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.236796622 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.341446515 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.255957201 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.228198038 seconds)
  done (took 12.928235769 seconds)
done (took 14.524920636 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.763213892 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.76223416 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.694588316 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.760521079 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691294366 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.762293195 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.742133351 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.696623052 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.726194652 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.69707334 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.72535593 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698123964 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681954525 seconds)
  done (took 23.996395986 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904196614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904437905 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.739371379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900654776 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714891433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907037172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834802789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820449978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820167928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.707434803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.682827604 seconds)
  done (took 21.532040311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907156068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.915352153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.743368227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912641626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718097051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9129981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840150162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827279376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822171886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.687554087 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.682040483 seconds)
  done (took 21.565411667 seconds)
done (took 68.691202168 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.679273862 seconds)
  done (took 3.276042228 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.706652418 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.876774143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.686612933 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.686439417 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.679665811 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.680348112 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.682848996 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.684898304 seconds)
  done (took 15.280014174 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.679761485 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.680400544 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.68033248 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.676606537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.67961748 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.676938424 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.677586444 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.679785741 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.676884352 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.676552246 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.681212283 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.679779888 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680253858 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.681563335 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.676747567 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.681293402 seconds)
  done (took 28.463820286 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.678859408 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.678247715 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.678109645 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681618448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.678249375 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.677546664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.678919875 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.678166599 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.67714212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680188036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.678819646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.681369869 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.678815798 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.676420142 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.678839942 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.678553019 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.674822641 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.675565895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684362179 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.679888544 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.677443471 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.67758404 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.676922983 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.676073517 seconds)
  done (took 41.884277212 seconds)
done (took 90.504768559 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.441578817 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.458608696 seconds)
  done (took 9.497385623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.680041435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.681821483 seconds)
  done (took 4.963635056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.680906731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.680411202 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.681880834 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.679641068 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.681275471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.684941426 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.684452759 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.682530431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684997079 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.682534128 seconds)
  done (took 18.421764713 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.682712612 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.68565687 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.680641139 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.683550521 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.684944232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.681729688 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.68574749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.683792851 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685580031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.680367781 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.684080776 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.68526086 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.680892224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.681085857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682981246 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.67995041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.679657203 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682051609 seconds)
  done (took 31.890192914 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.681878891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.682767573 seconds)
  done (took 4.964490389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.680130827 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681982152 seconds)
    (3/7) benchmarking "month"...
    done (took 1.673849611 seconds)
    (4/7) benchmarking "year"...
    done (took 1.675155518 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.672089687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.674697598 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.676409956 seconds)
  done (took 13.336647886 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.679008128 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.827410499 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.889408497 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.313175465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.67785945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.67369694 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.602532194 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.676633446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.676493839 seconds)
  done (took 18.612439275 seconds)
done (took 103.287835039 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.514749433 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.667812971 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.900421686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.800730802 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.686832329 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.008806171 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.682497008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.947612049 seconds)
done (took 41.80304372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.703374511 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.389711521 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.422764274 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.703284838 seconds)
  done (took 15.107840381 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.65364114 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.961457328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.674422932 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.491254397 seconds)
  done (took 21.381917747 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.036804268 seconds)
    (2/2) benchmarking "read"...
    done (took 2.020268898 seconds)
  done (took 5.657498955 seconds)
done (took 50.447687982 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67688276 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.677664754 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.678935858 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.671371647 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.676893992 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.674137822 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.674761416 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.676726311 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.681343355 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.678764093 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.677121653 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.677188324 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679807955 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673933986 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673165513 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679003938 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.677207194 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.674554541 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674968346 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.676025973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.677425092 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679851578 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.675563942 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.677071889 seconds)
  done (took 41.834122562 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.674733469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.674246643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.680029989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.67904657 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.673138122 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.681221386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.67760255 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674475998 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.681767869 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.675115108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.67318033 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.677229688 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.678560666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.672197016 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677011173 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.677152932 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.678886477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672804223 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676436433 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.671603823 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.678112309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676344858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.672459877 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67807062 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.673264294 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.674555292 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.680643731 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.676724449 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.677685321 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.673956449 seconds)
  done (took 51.885316707 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.681987118 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.687998769 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.679829326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.679400389 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.677755631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.675611617 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.675556196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.68024234 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.6796689 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.677892541 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.675373674 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.677170447 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.680229709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.681708826 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.675039148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.674029098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.676003776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.675283926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.674793117 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.678903413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.673211788 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.672325439 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.672117671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.674893647 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.6780248 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.674543962 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.674347289 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.676010065 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.675526135 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.674772696 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.674912075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.675247066 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.674189561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.675530117 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.677855924 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.675624141 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.679747525 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.685105165 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.67704431 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.676547303 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.676582562 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.676638784 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676230492 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.676249758 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.674835598 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.677480105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.676417262 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.674875448 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.676459043 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.676176157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.674833678 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.677114691 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.674993597 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.676379352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.676706097 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.673784694 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.678586294 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.677094389 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.675679876 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.677125535 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.678570903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.674999857 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.677321628 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.67636611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.677964897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.67805189 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.676125845 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.677554686 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.674749046 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.679784708 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.678533932 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.677725434 seconds)
  done (took 122.331800985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.678160286 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.676562995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.67723258 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.676352982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673391342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.678912198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.676012423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678199198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676151147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.679176993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679210997 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.676544872 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.675693678 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.678445368 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.679141862 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.678585857 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.681944968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675451873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.679899593 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.679815184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680819639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.678520939 seconds)
  done (took 38.512457966 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67818297 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.67998134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.675666856 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.68078122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.675220175 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.680042521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.678119511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.680226861 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680793973 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680529484 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677299715 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67994132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.680594911 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678263616 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.676728036 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.678551134 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679877503 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.678488341 seconds)
  done (took 31.81612307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.6757829 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.676816051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.679723545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680119816 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.676353683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.68123083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.676265768 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.67886326 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.680243233 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.678622141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.681738702 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681026122 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.680453229 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678918242 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678523463 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.678435086 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.680629051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.675701446 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680251658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680067934 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.678998067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681691261 seconds)
  done (took 38.538739472 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67934031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.680072633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.677889868 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.677724332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.679847475 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.681164099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.680373089 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.679211541 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.680861504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.682608506 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679231268 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681371482 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.67912622 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.677885235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.677196222 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679046477 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.683289438 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.680965397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681919206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.676703014 seconds)
  done (took 35.195607692 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.68274637 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.682742107 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682064999 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.681006862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683517049 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.682855589 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683839066 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.684605147 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682930135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.684378257 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.68203704 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683512958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.682912855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.682908139 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.68352652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683438395 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.68377984 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684621174 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.684831453 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.682105815 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.682517786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.681320926 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682001129 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.682010305 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.681709525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683776857 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.681684306 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.682157113 seconds)
  done (took 48.721899775 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680621875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.682886389 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.677631271 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.679326343 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.678327108 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.678210995 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.678328055 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.681562682 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.682224676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679239807 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.683539797 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.68355348 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68190181 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.681203531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.683784879 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.682497867 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683550418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.679364129 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.67952587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679651466 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.682422181 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683441603 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.681553756 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.678724904 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679660345 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.685339346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680360178 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.680501579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681894067 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680078949 seconds)
  done (took 52.028846751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.700315571 seconds)
    (2/2) benchmarking "in"...
    done (took 1.702657138 seconds)
  done (took 5.001224652 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.680400308 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.683061127 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.682571747 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.679929683 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.679212661 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684114622 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.684318717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.683809296 seconds)
  done (took 15.056983871 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.686457763 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.685268375 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.684428279 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.682933063 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.684312949 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.686340272 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69368125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.686034374 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.68761925 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.686227022 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.693264041 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.695015651 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.690795895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.688002838 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.688095096 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.690292833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.683582015 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.685651096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.68596564 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.685493328 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.687417538 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690950006 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691502149 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.68120482 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.690355658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.69845965 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.691434373 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.685927721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.68541483 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.691949698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.689164922 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.683781121 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.687044686 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.686626041 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.687103133 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.684879962 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697415145 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690658332 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.696949516 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685981198 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688014036 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.680800264 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.691012672 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.689946018 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.689025727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.685957279 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.685528782 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.682500727 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.685924537 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.693830723 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.690816984 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.684603915 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.682847965 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692232072 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.691843052 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.697381099 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.68695369 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.691612788 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.699669538 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.70038823 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.700160058 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.697900415 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.693167014 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.688503412 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.701301993 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.716037288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.69494624 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.682725868 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.683230224 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.68723644 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.701181027 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.702551773 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.69885483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.688533978 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.688617957 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.688650223 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.691352595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688787405 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.696828646 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.695994677 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.688300323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.689403453 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.701077462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.715829702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.688557541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.690074756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.688393626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.688987475 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.691176105 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704256045 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.689399418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.68711739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.68874537 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.690242344 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.693372789 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.689206966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.686749676 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690883967 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.686655331 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.689905091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690013375 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.6964579 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.701408537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68827581 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.68896414 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.699433848 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.691909863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.690501103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.697881825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.689706207 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689525217 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.688546902 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.699274483 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.685987621 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.692656201 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.703094568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.688987925 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.693029784 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.692454225 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.689826367 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.70278575 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.720800224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.690281226 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.68913132 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.698192703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.705407833 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.689158816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.694963029 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.691476263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.687354863 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.683808889 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.693941179 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.691393561 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694445901 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.691648893 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693140348 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.685375545 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.690248493 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.691843033 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.693290868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.692228322 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.692968385 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.694445661 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.696355492 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.693489434 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.695187081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.701701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.691328732 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.696179447 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.697013394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.687548708 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.691783016 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.693828605 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.696617257 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.694990786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692640187 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.692458658 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.692553999 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691963106 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.691244598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.692523476 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.69376031 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699073219 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.693035894 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.698200632 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.693815144 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.688939368 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.690549661 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.691752454 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.694349951 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.692792624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.694976392 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.699033967 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.703493414 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.692563934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.692394999 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.698241021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.693421212 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692733871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693409561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.698352376 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.703795624 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.691956158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.702763853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.693212809 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.693722674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.695774786 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.694680703 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.694579014 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694476152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.697293785 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.701150735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.706076155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.707375157 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.6960433 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.697854594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.695883872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.700573197 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.701857048 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.697042154 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.694276429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693346713 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.69767473 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.69558927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.699662565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.69589335 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.697373534 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.695058871 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.693287581 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.694194656 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.69347245 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.696709389 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.697391561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.692219909 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.693708697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695285928 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.694455786 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.69440484 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.695471037 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.698292933 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.694566004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.695950636 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.703494138 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.688679687 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698841503 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.698326169 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.696329357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.697915646 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.694062578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.703348001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.69853842 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705435296 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.69673464 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.698300777 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.706246069 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.699290651 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.695880345 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.701015432 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.694625016 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.69326124 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.70014909 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.703404632 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.695154114 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.69646917 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.697121186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697708411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697094991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.702822444 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.694926268 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.699322063 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.694499044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.699401678 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.695495287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.700641961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.700356151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.699953945 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700982853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700457462 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.695741619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.699949745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.699141531 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.698693837 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.698272664 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701984947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.70718031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.703383491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.70248971 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.698955821 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.699142748 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.702676032 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.701045409 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.697081927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.695494219 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712248652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.707883937 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705444203 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.705043959 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.699758659 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705684788 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.701597699 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.706132913 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699635426 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702001929 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.700327765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.697853949 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.698280664 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.702226744 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.700588005 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70256325 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.706555013 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.702811051 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.702090416 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.701784768 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.700725028 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.700687042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.701028593 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.700036807 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.699095354 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.703429251 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.705434375 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.700204709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.70273105 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.70801562 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.702732649 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.70336231 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.700329073 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.700475545 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.701441521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.699523004 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.7038691 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.705908794 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.711392394 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.706921775 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.712001546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.703178504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.714336846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.700932036 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.706659587 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.713061867 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.69669598 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.703100836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.698304624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.703245914 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711155405 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.704354535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.70414506 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.705484479 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704431505 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.704464742 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.701605025 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.70379617 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.700377201 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701245765 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.71046928 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.702984003 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.71020262 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.707606295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.700886605 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.700909564 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.699878228 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.705412714 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710172403 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.701717418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.705394637 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.703132381 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.704263755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.701386184 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.703368584 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.701931527 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.698919201 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.700989922 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71392393 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.705912134 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.708815039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.700487924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.711583463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702579495 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710784139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.704741271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.702543867 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.702540174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.701656222 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.70396766 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.70433705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.706520003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.704786783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.70566718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.70781396 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.704937015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.705622111 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.706577751 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.70631573 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.705247388 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.718434535 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731474608 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.706747498 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708743731 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.70154429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.707193982 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.709155083 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.704170378 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.704462707 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.711412605 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71667963 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714072861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.708717893 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.70747205 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704033236 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.707535137 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.706319421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.704686491 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.708666406 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.704524552 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.705594345 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.707495798 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.709874534 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.705639962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.703181026 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.708561631 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.707412918 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.717162547 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.708370984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.709761056 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708804707 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.706764801 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.707520576 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.710527342 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.707876316 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.708714201 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706359146 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.709431916 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718004746 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.717708104 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.712502271 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.705611124 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.70922551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.710321574 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.707888269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.706066079 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.708490259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706591863 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.710059339 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.708515613 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.70725445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.706568511 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.705418894 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.706516788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708486541 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.714693249 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.716542209 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709788726 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.704031775 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.707419273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707682155 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.706276219 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.709928773 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.717711456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714799042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.7212618 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.71977453 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.713643671 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.710429985 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716567729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.720726929 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.708158047 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.709260059 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.708062634 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.708183194 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.712123984 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.713386754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710483624 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.715753576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.707561467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.71028248 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71898043 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.710024083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708780569 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.709681088 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.711902958 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.709162807 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.70450329 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.710272609 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.709959986 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.718812999 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.712668492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711995782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.709049604 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.70862549 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.712081363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711928521 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70987141 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.715612147 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.706460892 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.711834208 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711338799 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710367573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.706406029 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.710570616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.711706389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.714280482 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.718126932 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.706625233 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717016933 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.711517457 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.711176188 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712399748 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.709983597 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.707333207 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.709071934 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.710492404 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709587372 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.712495426 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.713696005 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.707779651 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.71139053 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.712634669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708457939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714718279 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.724684864 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.72127638 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.705809056 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.711897913 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.711366599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.714841617 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.716195172 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.712944399 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711598813 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.713023325 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.708614063 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711844818 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.709694842 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.717630648 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729644089 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.71087779 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.713733807 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.71453747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717339953 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.713165535 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.707338569 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.71309857 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.715456756 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.71634939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.719275711 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.711922149 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719673036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711504016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.713198991 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.716623123 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.716158742 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.721011182 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.717618711 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712496021 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.712376599 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.720911258 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.733289593 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.713796006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723068378 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74596757 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.711491602 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.711472301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.715438791 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711894561 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.711892689 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.712972213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.712056704 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.712178025 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710605976 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.71409848 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.715605249 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721512918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.715656497 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.713328675 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.713410029 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.710806139 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.71411895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.707186761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.711993167 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.713486053 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.712607891 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.715642405 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.714012872 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.713925429 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727704173 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.730295436 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.713084756 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.71488701 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.711310739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.723134602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.72081513 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730508256 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.722411474 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.713075361 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.715073991 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.719186187 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714428101 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.714448777 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.723824106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.713725413 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71585597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.712954491 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.728966793 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725658301 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.720865374 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.716306337 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717201359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.71528424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.719787217 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714221697 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715080084 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.718390423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.718153492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.722546324 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.714025284 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.716631571 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.719792399 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.726207908 seconds)
  done (took 1016.501073194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710141384 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714062764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713991353 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712038819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713287753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713275603 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713673238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.714786843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714140838 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713270259 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.714479837 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712144366 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.711093065 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.714008287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71252222 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711362906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712023009 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.716687402 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713732566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713842801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714732157 seconds)
  done (took 37.60917786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.71370132 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.712831986 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.715140047 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720426763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713595936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71697789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.71532604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715369065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716648079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713451724 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.715608994 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717334779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.715544829 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.713838783 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713794548 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718188037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.717327977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714833473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.715757534 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712007317 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718036561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.717028411 seconds)
  done (took 39.372650686 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.716395446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.718530426 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.718798971 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.711731183 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.720181649 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.714379223 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.71941675 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.715948917 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.719794896 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.718576416 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.717914293 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.721081317 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.730002846 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.724595258 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.718938755 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.717196167 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.862775599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.718200629 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.717549379 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.719120946 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.71499626 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.724941285 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.717352493 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.718422539 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.717748323 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.718705226 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.719332713 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.717482488 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.716337714 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.720976731 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.722773891 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.71826594 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.721527001 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.72272287 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.721986278 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.722627682 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723924246 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.718552317 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.717135544 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.719626113 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.732002625 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.741205343 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.72058501 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.730036138 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.720516245 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.718158983 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.723449424 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728681814 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.717697193 seconds)
  done (took 86.08119336 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.719202085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.719992013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.71530065 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.72105907 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.719434496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.717941721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.719232835 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.718958323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.714719342 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.717202753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.718284845 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.716590419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.716775188 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.719875866 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.719488894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.714322895 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.71666235 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718554692 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.717063236 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717713633 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.716528374 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.717810222 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.716977906 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.715511528 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.719295885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718121335 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717924865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.719208112 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.718502837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.718038989 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.72278097 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.722869573 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.720392139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.71823239 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.719499359 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.723800345 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.721768333 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.717141806 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.724056601 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.719627047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.721763669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.720949329 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.721785007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.720521326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.72076719 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.71997443 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.720404685 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.717587996 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.719371389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.722216496 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.721650952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.721538719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.722772893 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.719567909 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7214821 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.721800134 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.71795426 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.719145155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.723229303 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.718617285 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.718919861 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.721199437 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.719688539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.721460317 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.722681753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.719759863 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.722525877 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723645036 seconds)
  done (took 118.564172625 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.723339199 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.724057228 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722655723 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722657876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72279952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.722282197 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725677275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723994224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.724909723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.723230804 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72541672 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.720855656 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.722047442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724064058 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.725150145 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.721381682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.725524449 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724081109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726331272 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722469169 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.725382073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.724008622 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.724122717 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.723758285 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725027518 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724070209 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725667967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725140319 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724896098 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724675818 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724521186 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.723641582 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.724155339 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724762045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.724038075 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.725177021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.72525559 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725909501 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.724536411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.727986016 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725721364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727312536 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725845715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.72561749 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72242634 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.727555739 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.726503999 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.728671572 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.726898272 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.72590025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.723075852 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.727043632 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726342985 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729115597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729276663 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.726140573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724559216 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729262382 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728184785 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727762542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727715499 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.726966338 seconds)
  done (took 108.595381257 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725595316 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.727157994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.725885514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.722758644 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725320966 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.72260011 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724713322 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.72659122 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727195738 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.726884114 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72555785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725364584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722719443 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727462814 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723667953 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723874046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724476625 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.726920366 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726835541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726994599 seconds)
  done (took 36.148410513 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.722510444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.728583418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.724692945 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.727029752 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.727835464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.726591524 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.727135304 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729025684 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725950782 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728502189 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.72904012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72807707 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726534145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724740258 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.729028222 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.723251898 seconds)
  done (took 29.270178826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.725627673 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.7326308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.732963481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.730863992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.729442159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.723170472 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.728920546 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.727913251 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.725689356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.729617443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.728485379 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.727844893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.728854709 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.730055894 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.726594362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.73058818 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.726626928 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.726902467 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.729081872 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.728639014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.726738099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.725405094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.731218082 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.730157468 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.725002833 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.726480355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.727044234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.727669022 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.726146358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.728289487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.725036297 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.723646325 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.724931943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.725857213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.729412874 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.724747699 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.730858943 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.729764703 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.728610669 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.728358111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.727684255 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.728711198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.733420079 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.72683849 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.725678182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.729738121 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.727580276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.727757086 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.727363908 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.727430246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.730413269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.728725132 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.7291484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.732035028 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.729380675 seconds)
  done (took 96.692519522 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72873726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.729835151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.725113413 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.730964173 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.730222831 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.7279689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72793963 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.726294439 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729167608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.730062604 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726313977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.729033735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724842623 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732663734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72909411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729479583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.726776081 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.726513828 seconds)
  done (took 32.755137445 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.726462877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731919333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.73121803 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.726386476 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.727163839 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.730317014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726958729 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.729893836 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73018266 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.725052201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726793511 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.730116214 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730741701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.729906005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.72806558 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728120895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.730103328 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730998409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73052051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725978993 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.730915965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733113893 seconds)
  done (took 39.687702797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.730962163 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.732581197 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.749029559 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.754603862 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.758676879 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.774629387 seconds)
  done (took 12.147058923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729253609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733371969 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730323543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732337069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73273779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72925713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729288415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727507217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73158757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727362046 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726607021 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733065619 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733902658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729499378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732474613 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731701152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728491728 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729823296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729358562 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729914566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729374132 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734798459 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730721622 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730685794 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732197402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731898963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735477634 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728631285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731780915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733094136 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732740551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731967923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734363063 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733813945 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732488267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732764133 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732308751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734517613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733847376 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732704605 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.734160849 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735181191 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73396698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733105995 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734766133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730897415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73269451 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733538713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733353919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736840781 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732231598 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732366704 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736148362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732148035 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733553309 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734649993 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734242644 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729583482 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733578295 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735285466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730653267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736108849 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73057257 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73131358 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737423205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733961774 seconds)
  done (took 115.978004925 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733333938 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731920767 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731299965 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735101877 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731610888 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7357582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731199562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732852644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731249887 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730402753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732364025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732973419 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733515793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73176839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73081775 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729620994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730938619 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731280522 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733257259 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734616291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732973812 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735938932 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733888989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734498591 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731470654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738397432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734095793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731437023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730582834 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732130862 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731940495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73210001 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732976213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.731075937 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732318102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732669595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735042271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733640652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73209962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734644135 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732811935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736419235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732260067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733795071 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735211113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734022125 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732910948 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734893731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729987591 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733753176 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733835685 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733431021 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734405823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733537202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733046945 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732616033 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732085524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733712621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734113411 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737436654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733757561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732733466 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735934983 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731529311 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73600638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732035744 seconds)
  done (took 116.035494476 seconds)
done (took 2367.956964417 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.761132726 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.804364063 seconds)
  done (took 15.213931044 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.905126348 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.854679119 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.742114253 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.771786024 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.739561594 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.760314378 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.738369899 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.738402775 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.741588736 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.739794465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.740354637 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.926841482 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.750962105 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.735844353 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.736933957 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.830884932 seconds)
  done (took 50.107932574 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.740119993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.743518776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.750525186 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.740465638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.738539337 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.75230758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.771818952 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.740615713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.773652574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.752906341 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.812081754 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.748661779 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.738836427 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.788420938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.750221414 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.752495993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.828812713 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.814215032 seconds)
  done (took 33.384695408 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.816633485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.759955685 seconds)
  done (took 10.23248779 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.726916195 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.743607412 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.762669886 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.733813314 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.758162336 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.736220707 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.764220606 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.734852744 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.729457204 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.765596668 seconds)
  done (took 69.118607738 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.741658196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.736873634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.738109159 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.734880242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.728174105 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.729186757 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.734412003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.730412961 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.40091239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.770371107 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.743127492 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.740919418 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.734445221 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.735793146 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.73014234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.760092877 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.84363361 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.731090742 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.73028005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.740250625 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.73596048 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.791323544 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.748965792 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.73167856 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.766831212 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.402060951 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.744111948 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.7433851 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.837793665 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.732474656 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.737515521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.739229158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.740841255 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.125618238 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.999448832 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.737199989 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.749681388 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.744561709 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.733305814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.842134903 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.739111658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.743226863 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.470053799 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.979133513 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.828913541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.778365764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.068054891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.752979884 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.738906904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.766931824 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.741748797 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.73722476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.751338383 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.222178651 seconds)
  done (took 124.884970737 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.731259975 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.080430914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.899595091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.730986187 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015559345 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941236728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.730694663 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.782126164 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.729614377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963308271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992177439 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838988363 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730760707 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.730003321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.731640116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.727308298 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.892378115 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.810785119 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.732171389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.728790924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762639733 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9767035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.856628976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.732356005 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.761933019 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.947387748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.85681733 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.839821648 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.464643888 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.730336325 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.797902771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.732478589 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.731518687 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.728782552 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891631027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828665763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82093004 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.731797151 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.730630287 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.72968756 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.395898635 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934733347 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830297754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.865676325 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985896377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940957644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517958727 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.730488048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.47378705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.898774541 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.965423508 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.967413486 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.856063498 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.734144151 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.076078467 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.73077124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.732108264 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986481099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955515305 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.833033295 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.73347278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.732877776 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729923853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978761866 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.735072961 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.830660689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734613801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.734292824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.833878355 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83458438 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962684781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951329018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765844711 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.081079413 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.241379777 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983363508 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.801690259 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988320351 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733972267 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.731853245 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816821561 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.583279105 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98953909 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.979811861 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981423848 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770584264 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.458076299 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.731144321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963794636 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959306342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996595467 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983965789 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971658166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.055913724 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.73306309 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.733642441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.993684121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.862646364 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.734814577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.081643743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967772573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.268137728 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.766176582 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042639281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870071783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.736820132 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.36632282 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.733602929 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971111748 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.779002539 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.735171608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.735759815 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.954065492 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.726431465 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.736971391 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.387097699 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.79966075 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.738419466 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974295871 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736878526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005301558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.73908227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972547937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.181690247 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.769263838 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.914617169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.982715807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.737247381 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.981001578 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983848076 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.854041746 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.963228122 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.451130208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.735767199 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023344755 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.736654333 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.735256314 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.909666792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.736541125 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.881913569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.736501713 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035171674 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760482528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972911425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736809766 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996848507 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.772253416 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.791542661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.738679138 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863812886 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.739033008 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.664967126 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.898914502 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.739441338 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.735161816 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.293856215 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.735513166 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.886460812 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.967822927 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761048037 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816415179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407278474 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.737306197 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822713379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.762326168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.133542332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.738061192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.447407745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.738886881 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.737589496 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.736509024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.979183409 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.925845438 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737213912 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.737176457 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642448868 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.73559424 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.73657947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.920902659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.075231403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.734787377 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942895837 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.73862947 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.867725725 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.740039301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.81723957 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.074458651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.733348239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.734784288 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.736741703 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.737853736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.735235182 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.951509288 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.765733938 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.235820403 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.877077653 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013867882 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.049861996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.984596338 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.787435876 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740275113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.998931656 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.738662554 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.801718579 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.737376794 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761672105 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9715404 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.73693292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006032231 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013438048 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.592892 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.789221255 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.738018795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73699533 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.734922041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.890622446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826074867 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.739721349 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.737432029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.85679334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.865691778 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954549109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.740074242 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.806136517 seconds)
  done (took 873.237529086 seconds)
done (took 1177.830817094 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.739346438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.736027755 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.724259153 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.738047067 seconds)
  done (took 28.591079305 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.745923177 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.741521515 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.743506774 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.743518057 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.753685745 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.742955358 seconds)
  done (took 12.127458416 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.750793497 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.73579707 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.738540229 seconds)
  done (took 20.880198207 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.815144612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.133413609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.879859018 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.163792483 seconds)
  done (took 9.647968358 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.744319621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.743619782 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.741825106 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.753156022 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.745727649 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.745726975 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.753129555 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.754432194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.747241395 seconds)
  done (took 17.388169293 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.789594894 seconds)
done (took 94.080762668 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.774799749 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.126181657 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.3588832 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.939946954 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.882413914 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.807612656 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.844729216 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.022197726 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.101649218 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.86086367 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 4.644208083 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.846930782 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.854724503 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.839282106 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.762258262 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.769005603 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.850342744 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.047750786 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.748020064 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004380406 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.536397877 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.869516677 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.09927299 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.771332043 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.884840511 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.063471756 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.726001578 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.922760021 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.739977178 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.18450185 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.831440303 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.620992775 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.112651208 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.917797309 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.712943715 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.060552952 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.848958621 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980135186 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.745537003 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.918282712 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.082565151 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.72659169 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.138705846 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.840455846 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 1.967502691 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 5.484969105 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.63097022 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.234517362 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.969209887 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.444366941 seconds)
    (51/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.183383626 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.996009101 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.722707528 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.801296965 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.90060936 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.760568014 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.417271679 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.893025243 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.745187011 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.753841033 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.777188821 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.827865764 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.88423384 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.783149545 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.05826836 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.750573381 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.604760288 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.087957046 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.740447286 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.205611294 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.944385898 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.833874015 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.300495982 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.582695488 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.751554449 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.744770769 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.763551375 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.090428227 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.837859106 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.722816259 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.799553398 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.776524705 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.895112839 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.804646441 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.872800855 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 5.52533188 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.055141588 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.568253353 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.974775375 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.032988362 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.741387329 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.02337662 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.982152878 seconds)
    (94/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.022605859 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.846639027 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.0534039 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.844329756 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.759032191 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.756974716 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.151818059 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.761022307 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.092372521 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.744167704 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.133262918 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.751072113 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.43517473 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.234959166 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.975512628 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.72688613 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.962866359 seconds)
    (111/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.627667856 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.528662251 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.909281473 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.947844264 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.762761962 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.740980494 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.016682849 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.742293707 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.913430559 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.91402968 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.124566257 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.83793376 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.104606428 seconds)
    (124/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.82369198 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.914038324 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.943594956 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.026422831 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.72297405 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.840922377 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.030124887 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.779739974 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.832481121 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.883585281 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.020981862 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 6.746749738 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.996702829 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.187000928 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.741844177 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.918205697 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.372963695 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.993586641 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.725042792 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.258594248 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742665381 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.041276221 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.760312237 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.366713678 seconds)
    (148/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.870521021 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.770760845 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.939982691 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.724516325 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.018971095 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.428903178 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.830803146 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.757988672 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.685862225 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.834450964 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.917755574 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.76272086 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.761525418 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.803344811 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.073182851 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.739824738 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.91131294 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.834633275 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.10716011 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.86651874 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.742567648 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.995087081 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.766120943 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.112070119 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.747062172 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.084590041 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.912692706 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.939515667 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.99819636 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.537522112 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.816384363 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855997946 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.832196189 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.76044089 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.125518633 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.018531383 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.972051791 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.200160924 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.882937521 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.824675788 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.874880963 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.739382062 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.73865657 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.320192633 seconds)
    (192/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.768172635 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.719950388 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.723446623 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.047875542 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.875531055 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.839001335 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.843442943 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.898810833 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.337458457 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.904234537 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.852412568 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.808824503 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.722369606 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.740131642 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.814079433 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.005557109 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.901617796 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.956248552 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.984045566 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.980590869 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.743378047 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.111420196 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.530464685 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.941475649 seconds)
    (216/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.988332166 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.743384434 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.743722169 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.883957045 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.811291921 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.742452154 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.959293959 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.77308619 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.794341889 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.767333881 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740700695 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.918038451 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.131650924 seconds)
    (229/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.742136525 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.866591088 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.638747794 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.812820079 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.084899387 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.886206094 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.019734821 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.744656447 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.854447562 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.89655618 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.838100241 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.922808393 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.724216839 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.840789861 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.053561734 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.860925172 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.085987616 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.548450115 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.039926464 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.814741636 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.508552064 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.865432319 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.36580129 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.777770235 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.851754793 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.746758035 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.847240378 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.934102776 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.006088848 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.193223657 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.863902778 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.906658242 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.880025396 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.778858165 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.731055479 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.829403412 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.732487169 seconds)
    (266/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.137974831 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.185578801 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.899507241 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.030690164 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.804614963 seconds)
    (271/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.910820869 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.735614438 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.642767133 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.736691503 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.812028332 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.092270204 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.436813638 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.773272687 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.12164377 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.852652534 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.754760878 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.952770205 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.735666639 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.575903041 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.653532982 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.750051498 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.675146279 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111940744 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.858145545 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951754173 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.038672176 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.539152586 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.808717447 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.851412954 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.892618932 seconds)
    (296/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.776010439 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.780833824 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.727579802 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16911322 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.041306556 seconds)
    (301/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.835841478 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.830416849 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.776924559 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.148442101 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057467268 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.93563713 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.817881067 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.973539512 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.734598128 seconds)
  done (took 963.958936112 seconds)
done (took 965.887575732 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.785194387 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78081762 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.762028454 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.78338202 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.874022596 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.787219347 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.772756824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.761824729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.807159403 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.81062285 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.760131507 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.784297484 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.762269216 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.763183346 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.76170138 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.776670043 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.075105505 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.790673325 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.781888407 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.770596933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.779068494 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.760807451 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.812841493 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.786634516 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.765813349 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.76438865 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.765948337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.782602821 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.875625932 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.764874991 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.762315197 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.775707291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.075004094 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.789110203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.757901549 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.784562772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.773430614 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.771932045 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.767698335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.796401343 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.16114739 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.799096526 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.764112843 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.763379791 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.763038599 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.765599582 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.76547908 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.76844659 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778253742 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779465912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.154207135 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.816220651 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.764076484 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.763276439 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.774126622 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.764160432 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.767852514 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780630187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.783532513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.781549917 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.057578983 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.794117808 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.76545713 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.784697885 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.772306175 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189331195 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.795211963 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.768328027 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.164742298 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.804156265 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.189027956 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.811015555 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.764911059 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.780409312 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.797018919 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.078170464 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.785877065 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.762919329 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.772465786 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.763062116 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.774312529 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780320388 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.768463969 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.764879144 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782311078 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.790871577 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.776546839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.766736613 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.772230961 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.784595681 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.772173319 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.77595386 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.76562987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.759021859 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.772240292 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.76859133 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.76747667 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.766714894 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.767707953 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.774417914 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.163211673 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821826963 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.761599411 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.761388924 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.764907222 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.781259822 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.164388774 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.804959577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.786324908 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.813774133 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.767335619 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.059547097 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.79606667 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784494583 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.775482745 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.768174825 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.761470102 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.061095339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.187074334 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.818834739 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.767136372 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.765808352 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.783021163 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.766534854 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.762468436 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.080398854 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.795694291 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78448687 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.887266256 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.77625999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.800134698 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.764880576 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.770943262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.797167397 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787676716 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.800442465 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.770906621 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784341294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.784729147 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.763730973 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.781195703 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.781003524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.768824454 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.772665413 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.763495583 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.796998997 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784527909 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.782043802 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.787341909 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.889588553 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.766001549 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.062352163 seconds)
done (took 277.856499964 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.839034312 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.764034691 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.8621896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.762238785 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.847314776 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.849515725 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.761263106 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.761408614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.762591443 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.144042217 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.763406469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.761222198 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.765176508 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.760480298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.849373908 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.76424679 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.760855628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.106089703 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.76411627 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.838390143 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.761770395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.763460842 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.76609598 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.153064278 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.764829469 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.763130175 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.840212198 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.764662905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.115906186 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.76096883 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.769314977 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115055878 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.859581977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.782492816 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.77678156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.772667585 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.851517282 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.766721638 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.850693858 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.851161302 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.86509709 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.805304978 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.762088851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.758331127 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.76707596 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.767268219 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.762162034 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.793672723 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.76184543 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762518582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.106796245 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.77509123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.771844078 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.763204113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.763719439 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.789390168 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.76002966 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.768133773 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.859541424 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.769797743 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.834228859 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155907355 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.145174634 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.766603374 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.764389048 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.764250371 seconds)
  done (took 177.375803095 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.844023422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.844297985 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.832879903 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.770615354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.818088836 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.83624536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.769795469 seconds)
  done (took 14.392490816 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.774462878 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.768818993 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819279669 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.818875987 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.769558181 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.924266124 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.768394646 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.78104072 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.766454186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.795832761 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.768286298 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768617199 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.775241693 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.765184976 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818147408 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.783062199 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.885930878 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.770182876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.77005556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.916307795 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.76790517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.774681886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.795147899 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.777937951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.769422347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.776820791 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.365999274 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.768882386 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766411572 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.768787284 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.766029631 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.812235944 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.769787281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.770005283 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.765423806 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883172448 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767326064 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.764920382 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.767648992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.770489355 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.769017512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.769034273 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.768639531 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.765134677 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.766581501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.793840635 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.768296904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.768134989 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.766861848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.768934802 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.794497052 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.767961603 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.765907712 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.766786862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.812862755 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775513211 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.771877837 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.767002734 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.76923061 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.766522044 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.9213096 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821028976 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.770088633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818696764 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.769864234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.770326352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.767884072 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.769834656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863443495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.769899183 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819238057 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76583925 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.929310367 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.792782382 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.771641983 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.772321976 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.773737583 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.771099049 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.77124349 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.779096563 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.76670081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.771286872 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.774449255 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.766782017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.76670552 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.882064542 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912060682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.765447289 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783084856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.779775805 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.767677699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.815368269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.770201866 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767715503 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827930547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888354349 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.798365647 seconds)
  done (took 195.911283787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.777367802 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.779388544 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.775747622 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.787873175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.772721126 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.773351897 seconds)
  done (took 12.34685745 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.774469493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.771828231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.773934248 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.772490671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.77376696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.772408429 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.772645042 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.774813998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.776961106 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.771883435 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.773666444 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.775216876 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.785086091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.773929554 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.771729726 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.773157207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.774728899 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.769717363 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.77288958 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774562675 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.928370799 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.774478899 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772780585 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.776807435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.777762314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.772463987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78277702 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.772761824 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.773729031 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.78086964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.777494709 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.77262669 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.778522821 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.780325502 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.778106026 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.77866121 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.776125817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.774918938 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.770857845 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.774584237 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.773743175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.773288382 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.772034533 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.776468143 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.775279437 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.782054836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.779275903 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.781955751 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.776079877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.773990816 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.77402642 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.775262976 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.775858479 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.774979266 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.778369263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780875045 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.779590136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.774900669 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.777827431 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.77916476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.777091679 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.776229878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777727668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.779015196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.773483372 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.777524833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.780419931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77907864 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.775263133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.776063263 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.777905374 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.772712488 seconds)
  done (took 130.696151913 seconds)
done (took 532.416375502 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.05724964 seconds)
  done (took 8.740486987 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.981934129 seconds)
  done (took 8.708040428 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.287079367 seconds)
  done (took 9.979569558 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.790609189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.806214965 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.784032451 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.772849918 seconds)
  done (took 28.86515068 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.858539953 seconds)
  done (took 8.544670588 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.789882665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.765828852 seconds)
  done (took 15.271810498 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.858818247 seconds)
  done (took 8.544979112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.84568981 seconds)
  done (took 8.538949955 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.791750632 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.790582359 seconds)
  done (took 15.290449151 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.754024143 seconds)
  done (took 8.439472189 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.93204423 seconds)
  done (took 9.700647885 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.79760827 seconds)
  done (took 8.546399722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.847856657 seconds)
  done (took 8.534439737 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.904139949 seconds)
  done (took 9.589972123 seconds)
done (took 158.978682857 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.789003291 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.767812268 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.767756403 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.767753036 seconds)
  done (took 28.775618921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.807597842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.809837956 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.829440355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.821710909 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.814618665 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.810711337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.802979689 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.805126147 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.820684773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.811601506 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.812569841 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.811712422 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.809338711 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.802976108 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.812893497 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.813366522 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.819860596 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.812845405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.803278665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.813274876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.778585101 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.820222428 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.812145582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.776861138 seconds)
  done (took 45.12212918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974818402 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.851374151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.935050752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.831628614 seconds)
  done (took 9.279011597 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.830061693 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836602869 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.844533395 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.884494307 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.91806018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.840571997 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.806332434 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.80269876 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.787818021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.832750806 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.908585415 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.827903522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.91842762 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.77874518 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.961122507 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.778106784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.779380968 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.834049221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.882962108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.897060805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.778810183 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.830641856 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.834714526 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.827130875 seconds)
  done (took 45.908706284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.776615169 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.784342287 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.783438459 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.778025031 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.780641373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.779135104 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.784585861 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.778878357 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.801681953 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.781034303 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.778232297 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.779874948 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.779450553 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.779623833 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.778963786 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.789524411 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.792008532 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.780903666 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.782043982 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.785777356 seconds)
  done (took 37.343006345 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.774709608 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.629446159 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.125446649 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.02867732 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.775181021 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.775036956 seconds)
  done (took 30.796647762 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.795243429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.786188582 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.781526929 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.837839069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.92222598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.785022841 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.783902297 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.794541449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.825521353 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844355219 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.801391824 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.812699224 seconds)
  done (took 23.459864771 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.776764427 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.774723324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.775476999 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.791554776 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.793282645 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.786841063 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.788785822 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.775513381 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.793050554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.801088779 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.787044695 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.793599187 seconds)
  done (took 43.132080156 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86028978 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663681162 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227655049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241886758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312614936 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983153229 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.777202615 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870839043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.778815424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049817365 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.060961205 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964899729 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030272252 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.590969236 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778297427 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.215428069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058550323 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992578915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802041343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341599371 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869645012 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351250502 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.401582709 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872974414 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98556384 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.912424449 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.036410645 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.733133931 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831725834 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785374756 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786106171 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778439122 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053161912 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901336094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853171699 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78703216 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20183519 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.490625928 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.768430094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.434926411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.215580202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.875330872 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786196056 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777513005 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712835463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341346759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873822839 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.782227931 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.479537108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.778225054 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789368162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859775731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.781045018 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.593291294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469702422 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048259562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.775138594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786385978 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343998729 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742149979 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421843462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.717070442 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.872811766 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346076209 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209437783 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.923661611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.781838887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781301573 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713819343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.40598832 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874259183 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920464947 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.796296222 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428109085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073279637 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.099622897 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816698056 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054800563 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.624256309 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.717858278 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002984597 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.717696308 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712652045 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.631429418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713249696 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994473261 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815143625 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.347329349 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813697113 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870585796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790069941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799147576 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787268809 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001370953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.659078632 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781360673 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.000018869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019997864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79963416 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87196091 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711150162 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.780654219 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033937369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.989157184 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.086271883 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.226914686 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859275171 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799687141 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.790762887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.771477895 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790598081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.046779487 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835358122 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745643032 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881784722 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.73838475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037669292 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808314985 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.87717429 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.052469535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999238436 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.092456852 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028611601 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846753977 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780108004 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781169767 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.421074001 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37795797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003794138 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.778890336 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325626923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792803845 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.781461242 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71593865 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.448910635 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.059849855 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.843756513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003226662 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.816294017 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056106293 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714251628 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926209526 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766955875 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.000150588 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.417305948 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.83713539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040009793 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09207568 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.080807931 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794338637 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801348291 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88090647 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804734988 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.284747894 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038520979 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.783925996 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.787611582 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.417936794 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.832420858 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791121313 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.784972711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319765047 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054669278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.802683206 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787143776 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.669397946 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.795924977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851857259 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788064454 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793023003 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.309535998 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295330377 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.790140962 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.441015188 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006906842 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793073776 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.403202979 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948383303 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.803231707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055547962 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841726297 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.714961752 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.486131673 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.48768935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785190343 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719831296 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.785049116 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793748432 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795621606 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.980675915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059329803 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825102496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.365590515 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873301198 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794293411 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.787651509 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785082904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.286566593 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757603427 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451098768 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.792836301 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919690821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.800025074 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.718552875 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.787659637 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789867768 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787270255 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.736122129 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836414873 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.355969661 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986295667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039876574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.201132379 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797586519 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.410276698 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.882389994 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.808861417 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011377191 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344327341 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.935465911 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867769967 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.795733093 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.363005924 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508072972 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353121652 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088977551 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086098563 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12030264 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.21600195 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.130880186 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879015423 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020233752 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.31390051 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84564878 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881336881 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735517628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804960993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421703987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120456582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802808711 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013294153 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072838204 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.057649256 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903397785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995749389 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822742765 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.643522651 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826900328 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.304677868 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809465989 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.135038072 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969402438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875187195 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008138605 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.850112823 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.787574389 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198998836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828072396 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.495853726 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.153806986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.225599083 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.183630523 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000896253 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.791524673 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231538704 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136636771 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.021241983 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.919078114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72302727 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797474589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79790382 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786228034 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.770695865 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.632994472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.040680448 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798213376 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02150283 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.969945741 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152792263 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.689999944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.795970945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79047801 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039316703 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.602398388 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953235154 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.151572651 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378054902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798446143 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721420702 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723005675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.491312872 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797865056 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.77128557 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007664868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.899443937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47668661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.215627262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111970598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041398921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.803161827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05882851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063697395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.288213647 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812785999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.890511992 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.016595077 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.455147289 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010438653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023201935 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366242092 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013924109 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237512454 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.742615178 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.791035568 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00293495 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.013126514 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.075003401 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947578509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.500182685 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.802510424 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163345131 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846011276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.069978369 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960156353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.886087043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804229794 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874627762 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800426483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.804225155 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801536029 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807218377 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.089041633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886725895 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.808517687 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873480799 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76576482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.357419877 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.80383311 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066518549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135641122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115765207 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847821274 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.793227183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79583734 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7291615 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923051164 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.238214231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064669199 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.920342925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.934170047 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817231595 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010871503 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.076567053 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110536578 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067052234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.68883358 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505492602 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926325361 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.016693942 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805586636 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.004065695 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011176425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099345401 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263571936 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.979861016 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99562235 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068651508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172277988 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793572304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385499749 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.803106838 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202519666 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.824122224 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074929723 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033268343 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801551235 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918091512 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804325367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.990398072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.24733809 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370468764 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130244472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656628531 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802724199 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066689644 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111290442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09617083 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87384839 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80315224 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490952775 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931166407 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.683837417 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.024790368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.795298685 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008813586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.510146799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.804313788 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063979048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097383592 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.792471953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.718036861 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821096984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.804167073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014749681 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008040865 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044200257 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805431099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.804586344 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.606672769 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070645651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8516626 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727930911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.799878158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845108372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030305523 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814086161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.313137229 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.49968334 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078132844 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.710479824 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816232187 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289426874 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173142739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112113175 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.322681886 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013801539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353527318 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694140299 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177646153 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.799852781 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.238503904 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181535849 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.801065526 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343371581 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914729082 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065186764 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116369591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.811036843 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510569603 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.815338626 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017852862 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1625809 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7355278 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797996226 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.829808217 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.797252077 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.788948709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805857956 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.754343335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281891551 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.644272082 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289878926 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.800148716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.79081657 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.052920359 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358483789 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912234456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826726799 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801402792 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.507081393 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.086473163 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051915838 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347703286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.873319678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.800866137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798718749 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724860538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994670841 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.994479517 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080868548 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.197255565 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.915296934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800643357 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.013129054 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008753675 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.090674108 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915018295 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986059294 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91923459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.722312639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512144191 seconds)
  done (took 1621.162511585 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817002203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.840619053 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.831986814 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.906512007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.841802257 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817687974 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.864223272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.8299308 seconds)
  done (took 56.465291477 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.798986304 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.962086479 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.808225949 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.799319053 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.807899198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.799670471 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.006336508 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.80952045 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.807370634 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.8106722 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.800384068 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.831887836 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.06073718 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.82469587 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.800976045 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.781571095 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.829371795 seconds)
  done (took 73.114175344 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.811970197 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.059498458 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.836166807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.803078028 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.124806343 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.814914737 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.951256365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.83369845 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.8133736 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.238287222 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.096571059 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.830837507 seconds)
  done (took 89.929797134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.817096368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.807326385 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.806965151 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.807741071 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.806804554 seconds)
  done (took 10.768455641 seconds)
done (took 2117.031432598 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.146847143 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986849343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.034023949 seconds)
  done (took 5.737262555 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.947149739 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.996979951 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.121414179 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.115788008 seconds)
  done (took 9.899889853 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.093381306 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.183097953 seconds)
  done (took 5.990046692 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.12729926 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.816878249 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.21857352 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.798148844 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.802065852 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.802225941 seconds)
  done (took 22.118733527 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.802419745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.806704839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.803390039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.805997459 seconds)
  done (took 8.933698987 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.785243579 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.469981968 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.787440699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.799434246 seconds)
  done (took 20.555807555 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.953884929 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.920349357 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.947052132 seconds)
  done (took 7.535051332 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.947011573 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.597278777 seconds)
  done (took 6.257283096 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.964101394 seconds)
  done (took 3.677989346 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.832367377 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.072940997 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.291210584 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.825433958 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.438138285 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.065985656 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161241679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.04453892 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.260754028 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.304480301 seconds)
  done (took 25.013222621 seconds)
done (took 130.744886054 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.405235598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.83595249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.007880087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192515427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.04904754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.010055217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.026695817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.192829046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.884257076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.879595947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225061668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.047014182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978295847 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83114049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983486254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.827645048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.045264675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.261769187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.884458355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.086173907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.041158705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.826850296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.022921617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842263111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.048354954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962444626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.372032183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.834268052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.008296398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.385606787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966531205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.219516323 seconds)
  done (took 166.907725843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.814123471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812964923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.809638429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.811186634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.373433458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.812121421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811641671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.810992751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.271325388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.253923907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.813341186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.374170623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.81251193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811706341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.810107433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809766892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.4315207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.81299141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.813166592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.81222661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.812035969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.210464059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.812769826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.219474604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.422377872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.810563073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.81006437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814344602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.8115855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.811682419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.810518488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.813406206 seconds)
  done (took 207.769792888 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812965296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.813170224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.812461873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.813680483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.815587402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.814714958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.813335941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.81394519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.593308568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.582268947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.811848284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.816163874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.816993237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.812696167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.812524244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812688392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.813045202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.812148368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.817441723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.813321626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81528115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.576332688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.821750346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.574911284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.820179286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.816046046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.812771548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814923844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811398437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.815790043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.819122612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.815499414 seconds)
  done (took 218.866160981 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068761954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.820809929 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.821125836 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.755397373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.823285636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.820986831 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.814725872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06962349 seconds)
  done (took 18.728441511 seconds)
done (took 614.003025694 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.324092198 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.162442369 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.997111797 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.844551328 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.231386858 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.891614109 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.838658881 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.909440218 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.456516246 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.911524025 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.473624138 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.869593333 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.559632181 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.869016964 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.961442448 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.897374963 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.398299002 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485736957 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.017360031 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.044655438 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.024015334 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.778331519 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.923929547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.496064452 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.590800812 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.825238313 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.901771629 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.395478913 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.850746764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.004025064 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.629586205 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.145564473 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.855998302 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.839295063 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.893719899 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.872772424 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.10977153 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.855775063 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.964778529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.581236226 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.049619319 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.381300257 seconds)
  done (took 100.839750058 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.807645516 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.807413891 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.809217083 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.808987475 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809017182 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.80706667 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.806302732 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.808280588 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.807381191 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.808187373 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.805669796 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.809509322 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.809734754 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.808610711 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.810528774 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.806559853 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.808347146 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.809701739 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.807324092 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.810753088 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.808689433 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.808944738 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.822775005 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.808162668 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.809742865 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.808825784 seconds)
  done (took 48.775353142 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.82545569 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.994843117 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.072826405 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.84707085 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.823270002 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.828928634 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.843188841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.827573926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.825278829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.826944816 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.918078985 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.830178875 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846990861 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.071536713 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.840530454 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.822936444 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.823661811 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.822421448 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.002869937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.842269909 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.845439796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.828500423 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.845232385 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.837682844 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.827449334 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.827575536 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.829940105 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.320677587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.835324731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.917487033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.885181807 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.84904219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.266665063 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.079732882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.885222847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.836915296 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.826499143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917765198 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.83485028 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.827252347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.844253486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.831682845 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.071454515 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.337968408 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.843320507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.825180572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.330309467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.934271277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.867891113 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839767258 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.075778911 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.846875312 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.827332541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.828735015 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.864356963 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.834874374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.826459379 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.182497103 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.840829131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.845117159 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.833884063 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.828767115 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00392192 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.836434128 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.995906849 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.838966696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.835871717 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.829569516 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.074427086 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847588033 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.344726951 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.841786689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.82867806 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918423641 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.000429578 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.35908687 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.84170951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.005164442 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.288909629 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.853183747 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.840003366 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.314668354 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.859728828 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.840458586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.833263089 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.829636838 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.82798357 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.872080498 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.846983009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.261177888 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.349455329 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.196573418 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.858494534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.846773864 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.830189278 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.182089236 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.840129716 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.831466191 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.070971019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.356330855 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.845696068 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.838869372 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.329490142 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.846122802 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.84944803 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.840984269 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.081890282 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.84737217 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.871675565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.831517193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.83663972 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.83584439 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851359805 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.837808514 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.829307126 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.324666182 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.940085502 seconds)
  done (took 227.629468294 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.826624621 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.825952691 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.82246939 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.827260863 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.82407964 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.83137136 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.825014336 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.825545826 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.830857692 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.82342733 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.826139177 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.826232679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.827938083 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.830975365 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.837784566 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.831842545 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.432563208 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.826858511 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.825185238 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.823621207 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.495682137 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.83308333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.825827974 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.825681415 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.826907928 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.829243072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.833407989 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.82583747 seconds)
  done (took 166.186242391 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.832076274 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.947995094 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.849888568 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.858840095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.838962085 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.830163022 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.857754625 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.849111228 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.838716278 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.830495814 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.828740645 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.896102678 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.843425796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932477112 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.861397969 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.863548308 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94170504 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.836125408 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.829900758 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.82874787 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.861472187 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.822459042 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.896559963 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96029302 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.848071284 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949134548 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.832899691 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.832052942 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.830767343 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954290653 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.848277591 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.894516444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.864141358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.850072622 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.956493273 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.954114171 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93755083 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.85966611 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.836140346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.831477317 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.831625705 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.81708035 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950535582 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.849977409 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.834255997 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.938312023 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.852478966 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.834376876 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.843497805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.83221283 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.846206292 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.852806389 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903636029 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.971248185 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.86604274 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.857499436 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.859228798 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.1288841 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.841638741 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936279631 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.820795938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.955911442 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.855196843 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.818945504 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.833544661 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.838933956 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.859917456 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.862186495 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.94092683 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.841379357 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934768565 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.864061782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.839298059 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.833916511 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.834634156 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.953639195 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.955550599 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.865919853 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.872396323 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.86503007 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.826793751 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.834637495 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.8160657 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.851892272 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.834889419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952853726 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.953387155 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.839696861 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.834347848 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.837231305 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.835668398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.861205547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.965543451 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.871748435 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.926716636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.902803653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.913152726 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.852045577 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.846637667 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.837560162 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.89864082 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.850463543 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.84575286 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.177938409 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906483724 seconds)
  done (took 198.726931544 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.203455501 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.884501552 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.891930521 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.16104567 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.195208686 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.011111352 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.883201545 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.882900789 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.911141031 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.077941448 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.958076443 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.902324973 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.87018865 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.859488679 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.883973006 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.904373072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.897881462 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.236686197 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.994468022 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.036911544 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.874257424 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.175642902 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.158895422 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.293301996 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.918063147 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.294570476 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.463735026 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.01494481 seconds)
  done (took 60.589315936 seconds)
done (took 804.475342579 seconds)
SAVING RESULT...
DONE!
