cset: moving following pidspec: 18508
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.275461089 seconds)
loading group "string"... done (took 0.621731615 seconds)
loading group "linalg"... done (took 7.49615525 seconds)
loading group "parallel"... done (took 0.15439454 seconds)
loading group "find"... done (took 1.188777684 seconds)
loading group "tuple"... done (took 1.76414458 seconds)
loading group "dates"... done (took 1.242063867 seconds)
loading group "micro"... done (took 0.216922271 seconds)
loading group "io"... done (took 0.903648121 seconds)
loading group "scalar"... done (took 36.921905277 seconds)
loading group "sparse"... done (took 11.6942501 seconds)
loading group "broadcast"... done (took 0.939195548 seconds)
loading group "union"... done (took 12.059236702 seconds)
loading group "simd"... done (took 4.455928944 seconds)
loading group "random"... done (took 8.927984776 seconds)
loading group "problem"... done (took 1.820052328 seconds)
loading group "array"... done (took 20.626963992 seconds)
loading group "misc"... done (took 1.693834787 seconds)
loading group "sort"... done (took 3.256976543 seconds)
loading group "collection"... done (took 16.991406015 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521312806 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12424482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132865071 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119334213 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146504194 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117413522 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125011103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087002481 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847986745 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146772285 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116087379 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397488355 seconds)
done (took 5.345686585 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177937794 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084118481 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084711558 seconds)
  done (took 1.311526782 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068101847 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126806996 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069679851 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070378157 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070507125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06971714 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068989637 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069371217 seconds)
  done (took 1.689291522 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075229309 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071610919 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069007339 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071421193 seconds)
  done (took 1.431441951 seconds)
done (took 5.833286034 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747944862 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211580526 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187392117 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.381063948 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130967028 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16914002 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655894451 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317714888 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187556584 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077783253 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108267174 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337665624 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121113293 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640030557 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076779928 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091172446 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140461174 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430465386 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069911081 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084488029 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092568005 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131210936 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086568383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076411358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146057166 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070295598 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133319837 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083069977 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068946435 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214788671 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174880212 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667828691 seconds)
  done (took 10.289637263 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100225916 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100603322 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071176485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127602852 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099644286 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072014021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077933079 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07040252 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09147717 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130863899 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092832756 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107192985 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068481656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071620475 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0852773 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210184135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08413478 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083730731 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072896421 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080160787 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109804326 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080119425 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082328799 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081878902 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130610316 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183121627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099953296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099832452 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06890809 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084058767 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117193512 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129242127 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068605729 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07055806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127810741 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097649926 seconds)
  done (took 4.712205494 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.95594455 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141572732 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090188811 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13199007 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067306569 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107732026 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06847406 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082471852 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204767144 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362008893 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573561444 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130761836 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112068471 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104528387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069863489 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070843141 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069410012 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.430765511 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099411382 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107752435 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082491105 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073209044 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071501534 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067932193 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069546394 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066658664 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070213663 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11486499 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076933583 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307806506 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119704126 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0916343 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069396104 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.998665573 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072659807 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.297651072 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069593615 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069271467 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10285399 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091690755 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137130616 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071691387 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068273141 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154728113 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067625962 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072732636 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072417287 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086329178 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105427623 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120362345 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06847786 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068724313 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165168767 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068222777 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081232265 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.102032754 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157903475 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068554527 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261156918 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091671221 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072503676 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067894775 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167410175 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122705787 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070365323 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069688268 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070811861 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071414149 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361856415 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068825458 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.999577837 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075086569 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07927168 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072817191 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072015779 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075002498 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07434149 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090343665 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068788637 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075916257 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068574723 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068780781 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068987685 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084621993 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.363819365 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.175388693 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070742066 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067824522 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092434282 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098967048 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070168523 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06832969 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101447138 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070889907 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069381378 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069009178 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084860893 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072021121 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115031379 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069844023 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088463794 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10129347 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072078204 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067337818 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100630465 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084008162 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071121015 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404687176 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068260763 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074353932 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068485636 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069870505 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069406541 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06668059 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080840609 seconds)
  done (took 21.672595083 seconds)
done (took 38.774312594 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245090631 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075604758 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075848572 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076116972 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075744328 seconds)
  done (took 1.780144168 seconds)
done (took 3.002988417 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120548275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09918924 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068112192 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097991367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070264251 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100501519 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099620115 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078723383 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099206216 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067860346 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096780852 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067588866 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06724377 seconds)
  done (took 2.374667683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086184144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086365607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072416496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085825303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06649592 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085842416 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084491145 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093908123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084202922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074840392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066557307 seconds)
  done (took 2.106415139 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086043918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086067133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072724776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08409476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066239609 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08492583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083762582 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087439574 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084420157 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076106567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066327821 seconds)
  done (took 2.090840618 seconds)
done (took 7.788641963 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08008053 seconds)
  done (took 1.279507841 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523058581 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.630353512 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082185103 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107167593 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184401889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113068812 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245184325 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086957245 seconds)
  done (took 8.343861676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091363359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07182827 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072305354 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083523136 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075094148 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071029673 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073088177 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07341405 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074565838 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073968626 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073057374 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071493491 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071967938 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070742619 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07044835 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073798214 seconds)
  done (took 2.471396754 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093330537 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092725897 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075843937 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076824424 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074505289 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073405457 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076128763 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075665155 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072491807 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074334524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076981001 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075171862 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073662499 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066550822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075819587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077811178 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072977013 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075635169 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076467753 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077354641 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076912157 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066778708 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073589778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075649737 seconds)
  done (took 3.13911016 seconds)
done (took 16.450431761 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106372959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070205589 seconds)
  done (took 1.379433149 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082784572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083573699 seconds)
  done (took 1.38172938 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08407346 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067583859 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089588757 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07885524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068111303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068234324 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087765704 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068325072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067826935 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067828492 seconds)
  done (took 1.967231635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070424604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078658919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072589223 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0819045 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074756131 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066812782 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073039187 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069883513 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077517784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065353469 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07266002 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084668355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072639687 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085637999 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073233343 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070810953 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072850614 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069379361 seconds)
  done (took 2.552823299 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068549881 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068252186 seconds)
  done (took 1.360752679 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069470619 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065958709 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069265768 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068755948 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065881675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064787714 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065735413 seconds)
  done (took 1.688483276 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.358893992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118336305 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300595772 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073782292 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083017461 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251141728 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0685223 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073599094 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073534338 seconds)
  done (took 2.659868769 seconds)
done (took 14.215884252 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082073529 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088210039 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096735155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.369501228 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094416542 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069063875 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115832619 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177617627 seconds)
done (took 2.329923609 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207291362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.654209819 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408614596 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204156795 seconds)
  done (took 2.490076801 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329937967 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089871888 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062484909 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069919409 seconds)
  done (took 1.78696201 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069031365 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071647853 seconds)
  done (took 1.372207434 seconds)
done (took 7.095380055 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069377411 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06865047 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066353339 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068720492 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066675427 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067039606 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087819598 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068540602 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069217888 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066476891 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068592166 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068387928 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068686633 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066695444 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066065022 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068643149 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06885302 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.180121358 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066615623 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066887739 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066561802 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06902269 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066515946 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066364492 seconds)
  done (took 3.015917579 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085917691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068933763 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073709211 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073343982 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071171672 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07362944 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073344299 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068278406 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073402482 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070967359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071017791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071125123 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070752731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071104053 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070304133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07110624 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073093807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068069582 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070676102 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071212842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072938417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068361372 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071670041 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07338752 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071017735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071059884 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070254914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068618247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073370213 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071208948 seconds)
  done (took 3.394046634 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073569486 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06607029 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066180654 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073131966 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065353042 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066714784 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065867331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067015444 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066403244 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065983748 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067367405 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065719231 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066268803 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066356316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066279898 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069357774 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080948669 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065763441 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065799829 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067059853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069502065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068404627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066274765 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066065204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065738207 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065422689 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066643349 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066064658 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066963904 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065722836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068973508 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069570862 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065787523 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072833604 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070224552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065786433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070227378 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06617237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066548998 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065535078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065576225 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066124892 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066407275 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072458226 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066120626 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066915292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066104674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067002836 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065957583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068008226 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065948351 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066164873 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067652997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067134075 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069824758 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065301209 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066796827 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06631065 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066446884 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066174318 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06545408 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06550807 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068562832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06647728 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081186655 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073452246 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065796585 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06755761 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06675252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068591438 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067527072 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079292464 seconds)
  done (took 6.130302437 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091723733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087837292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068211765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068331802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064061627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066664764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071279626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067486112 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068520148 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084487229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066388078 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067622009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068229856 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070173721 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066875419 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068085155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074709205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064337128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066538936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070084432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067035427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071535131 seconds)
  done (took 2.825492651 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15001114 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072688225 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105901888 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078081374 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072273965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07703104 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071754201 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072133228 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071907768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070671075 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07038385 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072604842 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0721851 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070152627 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069638076 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06962656 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071893187 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069887799 seconds)
  done (took 2.65798503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078862272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068603663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088401821 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068589775 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068205472 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070750907 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072314341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075926849 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070832842 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068276652 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07583111 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07022695 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070393533 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068390822 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07064916 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068585053 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070663508 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069200506 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075807474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072001559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072662746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075785124 seconds)
  done (took 2.842470645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082086924 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070760034 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082496241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069788619 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064016064 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066244836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072049121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068090572 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072072167 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07009674 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068335554 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066936526 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070466751 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067995999 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070971836 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068419019 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070634309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068518801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070277213 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064436644 seconds)
  done (took 2.655179703 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087566883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069956556 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070838691 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077148789 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070323996 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070042118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076339776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069966487 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070327499 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089872017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07040289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070933749 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076296476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07650081 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069717175 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076275972 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076508322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076445271 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070186949 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070267206 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089802116 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070320628 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076957064 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069858037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070342362 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070109763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070393765 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073863536 seconds)
  done (took 3.329586387 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069914851 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068967082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066253983 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066033403 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066134067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06649497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066187307 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066179293 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068828147 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066483174 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068913436 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069242958 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068308155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068774738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068634357 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068601634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068324404 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066324482 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066537035 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066196518 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069081726 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068337919 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068215652 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066687584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066476643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068423804 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06690333 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066149961 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068670349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06620687 seconds)
  done (took 3.282921751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077210966 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074609173 seconds)
  done (took 1.409947967 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066076504 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082168452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066334536 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072946529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07230428 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06928821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074861576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07173276 seconds)
  done (took 1.827796783 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084485938 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078352755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069830084 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079130895 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078926446 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084432338 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134940108 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068684134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074535545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066809871 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081183881 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068390844 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07540014 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069441984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074324445 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074886095 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06661118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073590647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069808911 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067273412 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068804619 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076946802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071461241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064387137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070429879 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090254231 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079323345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068425705 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071595928 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075922083 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073817203 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062883045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068087664 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068976318 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066322253 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077924437 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082067413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071539094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077159558 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069199777 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076561407 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063837937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073107276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075181911 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078838392 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06867969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069023623 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063622907 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067219412 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071537359 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064129322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069421129 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063784207 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075622717 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07226603 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078649845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067860921 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070552966 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072111809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071858795 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075648086 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071179326 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072182579 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067866508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078842065 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073485499 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077276797 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064081098 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063568424 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066570983 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077579723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090711959 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074403978 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068464113 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06900852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066342633 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071969111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069651653 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07417566 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075514456 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068184566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073546489 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07583749 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069036379 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071481968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07479923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067458805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070741536 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066397424 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083208024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06706794 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068849863 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066184152 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078056228 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071467493 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067887229 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066285589 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075273632 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062775358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067984185 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067927599 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068686216 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077733462 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070619065 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070913468 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075725042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074112443 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068176014 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069815486 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191345381 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069929993 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069245544 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077200362 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063515758 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072895855 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070709473 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06904276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078295645 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067048389 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068360779 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076897847 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074639118 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067972495 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065990674 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071832207 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068212675 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071528787 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076389565 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068424534 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064537156 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064407299 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072470305 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068308439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072062108 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073370131 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072202717 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063353951 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067248755 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073501717 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077436627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070183734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070414724 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074656822 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070650735 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067418917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075385631 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071115013 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068358308 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074304458 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070011026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064685357 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071566477 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071347283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067323393 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073204448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070898312 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070514039 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068733646 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06736784 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074395677 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068861453 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068169692 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069421551 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06733007 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078177642 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070922459 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064295379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066147432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075022971 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067051707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06839162 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068110741 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070909026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068876831 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066494391 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067749843 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070720526 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076270486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071300601 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069000581 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074391418 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080098854 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068863909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070970677 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067766148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069225963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068874027 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077599807 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07447289 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072384597 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071554087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065991469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074072409 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075824461 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068225345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067163897 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068906245 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072139909 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074279439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072261505 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069821736 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067089149 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069234367 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07072011 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070800676 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067419659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067605483 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07276034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066703496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072788429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068767129 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078290771 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071340484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063014649 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069329465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065581434 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073481432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062758317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065645435 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067382613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067827462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06615265 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.197730388 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064397158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07628724 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076894934 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070346436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069617888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068966612 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076378892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070561897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072957679 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072878304 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075144933 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078613227 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068728219 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073173909 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081802138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068326151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063667145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07523318 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067494171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067401562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067623093 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06642212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072160136 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076384059 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075229603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063263943 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07179895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066872666 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067966097 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064496946 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073441515 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071738396 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069711283 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075097096 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069346481 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068877619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072371842 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068114655 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068977441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068604 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072050481 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069311723 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070422223 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068999036 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072519913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067763439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066553662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070777037 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068450653 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06912782 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074050295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068074174 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068709832 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071130149 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068478507 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069254514 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069516375 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068430775 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071549064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069851907 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069382824 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07097748 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064555565 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076022652 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067811481 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075759563 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069492959 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065816203 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074034377 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07140831 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072604689 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069455822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069189711 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07052181 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067768058 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071734056 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076167266 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067487837 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079224085 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075710223 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069777209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071363949 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069246972 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070373037 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068476401 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070412552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068651787 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069519548 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068461679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073262585 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071690635 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069828694 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070568881 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069162749 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068894668 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069235719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063300594 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067975209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068232578 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067700395 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076839619 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06869706 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068686908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066790117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068575627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066961949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065037508 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073812502 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074513879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067778955 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073567889 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067271499 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068850069 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07736384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.193652855 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068153648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067779944 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068442433 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076512894 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069853229 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078154385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070195841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069122712 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066376651 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069456433 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067368104 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064014282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067011639 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072352204 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068644832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067927354 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068997443 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071430325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069679249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07799554 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068048324 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069772984 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068569365 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066016452 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068760059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068338477 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071694688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069272207 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067006752 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066895674 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068231339 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069685332 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070699413 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068693738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070319008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075318125 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068122904 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072012604 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070625259 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063716053 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071504388 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068428418 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068647106 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068276259 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072927922 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07486152 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069800477 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077651821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068552066 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069890312 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068379243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066911396 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068389385 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068620506 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06840318 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068258087 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069231284 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076101368 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066880374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071800053 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068861282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069791421 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074871398 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069856742 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071919451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074001512 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069292937 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070561066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077366931 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071768609 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07177964 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069073972 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070318651 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074220045 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068343323 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074968904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069563564 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068751204 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070269797 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067202276 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068219438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068092211 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067636168 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074329473 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069325339 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06845248 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068572036 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067004173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069984322 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071044789 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076476243 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071155776 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07221629 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064447431 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066111746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068803005 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067602633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069779774 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070640363 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073751033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070787006 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069079983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067175033 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077445399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07381325 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071739439 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066699106 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072500849 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067933131 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069791072 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069122961 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068142087 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068804535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071453605 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068886869 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067158806 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073613773 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070864217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067387699 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068917245 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068164078 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06803162 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062924036 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067655445 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069353118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072192908 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069978691 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067586424 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07735867 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066128052 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068267945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069134268 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066551946 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072052799 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062552149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069301258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067401225 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067240899 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062998141 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067190371 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065835833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069361931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066977634 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062826132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077821951 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076302667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070574944 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066309229 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065855621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062624597 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063550576 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067249079 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067800552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068285205 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075716264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066248601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066060025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062067505 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065857167 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069684281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070203792 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063869907 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061844331 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067150994 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070324638 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07134556 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064988424 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065582477 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070108121 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069491296 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064911256 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068252652 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063607499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070107921 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077677256 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066699405 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067763238 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07264712 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073395902 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067250915 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061696283 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067473909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069809963 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067772278 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066520913 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067419815 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080220026 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070391423 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067036698 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065436079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069465384 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069241669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074016731 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067611692 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066781826 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070855093 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068603645 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072098818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070207484 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072718952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070078391 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069682426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06568419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067359187 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065443574 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066266599 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066883718 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066561454 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069702146 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07197896 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066252561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076110988 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075100506 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068117205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064001087 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066721401 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066905854 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062163113 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067508819 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064915662 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065304388 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064704502 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065258392 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06827556 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070870503 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068096053 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066125401 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066625669 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061409338 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068917021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068405097 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.305502831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068091304 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069869194 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070902498 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075274441 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073655632 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069542187 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073002634 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073274799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073252342 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066511421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07892601 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071089591 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07332808 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070904457 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071412538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071018135 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073789691 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074141482 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07163785 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07286624 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074106497 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071783066 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068436291 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067738811 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076304978 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068749069 seconds)
  done (took 43.817345994 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105498317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067352279 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066335718 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066520602 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076754498 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068094228 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06670774 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067688742 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068023308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069447861 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066632596 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066778045 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074000072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081165223 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077126915 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070722042 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066970297 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067112956 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066319217 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067383538 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074005185 seconds)
  done (took 2.891517507 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078572748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080870375 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078861998 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085020459 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074522469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073786901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0775204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073235984 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080846708 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075590574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081027888 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072994643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074993772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074849018 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075101428 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073085071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080275365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0737041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07416386 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077765439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073351766 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078158661 seconds)
  done (took 3.056568282 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071164248 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068509093 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071495135 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064602294 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068844097 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064880466 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071772354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067331405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071523933 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068664087 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068975028 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069209287 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071443664 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064837043 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069996738 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067644815 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107813124 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072449785 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069013229 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070142652 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065021222 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071350721 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065414406 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065150054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069159179 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071547936 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069499212 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068035653 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068718641 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069156847 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069460517 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067358421 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071050099 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070732028 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068871814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069070359 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069170519 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072175161 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064921826 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06852637 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069617557 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064977496 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069999711 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071601627 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0677675 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067129719 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071283529 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068890441 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064653006 seconds)
  done (took 4.783192326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081214994 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111121289 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070276323 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091603297 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082378145 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074614169 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072440672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091724085 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066386064 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067227669 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083497244 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080648366 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068377882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07286847 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075232849 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068549366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069347134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067830672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086542557 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06795188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071771924 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075294764 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081638249 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079826741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072033434 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067371886 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067748137 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072688947 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079334246 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072376681 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07281732 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073546346 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082646363 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073409478 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067517008 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070117577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083376501 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068094956 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070596831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066564424 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070194714 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072162661 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075239326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082786119 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068553703 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072947398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067959774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065754133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079412585 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070227159 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074816513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080699203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071446807 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068397476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072550219 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082009692 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068029466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066566017 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071302022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079599201 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066411088 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071422807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08039922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069646353 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074657474 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080541005 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073246369 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071955218 seconds)
  done (took 6.57297834 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079805501 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097760919 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084257827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085144583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078043702 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077548526 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077812799 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077441702 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077164494 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081821517 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078284601 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116282612 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073915241 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080049693 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086754865 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077472608 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077340235 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077869423 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077944851 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077708558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07763982 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084304923 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077762064 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084054294 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081218223 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073647226 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077405813 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077634931 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084234533 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07748147 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081009309 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077717997 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07776513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083769632 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080586493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07699395 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068126254 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077040309 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077633589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077586188 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073687532 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083838689 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077274746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073572819 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077670064 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077945383 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083762528 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08090096 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079547428 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081124989 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077448394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083875706 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077281223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077374511 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084326999 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087111568 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083837419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083489093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077709863 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084193694 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084198255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086553023 seconds)
  done (took 6.409485049 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08581173 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077241022 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082741349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064501937 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069398219 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074016664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067117476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067384158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075934991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076056321 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077418795 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074151468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077197399 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077317011 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074314517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076721253 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074157139 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074091814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075463436 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074805089 seconds)
  done (took 2.91153096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078130948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084815145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069889911 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073490644 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072060077 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073916811 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071514824 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071905029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070088087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072174608 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077819002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077706877 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069560562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073497391 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077620584 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073330714 seconds)
  done (took 2.591115563 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086034307 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074916957 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081528393 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069675328 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069635909 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065649473 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068399586 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0641847 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065204292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079939541 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068292199 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078485629 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068606512 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067453974 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065366587 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073965476 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065319059 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066183998 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068844436 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079847738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071906774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067025232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071993212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068507863 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070862428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072450775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06762713 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069065295 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065860937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068691605 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070891725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071792912 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065380318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066467895 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067314484 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065947265 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0681856 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068749035 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073771362 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068204226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066648418 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07037921 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068619394 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069365158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065024613 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06902071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065345128 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071330805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066323347 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07090004 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068123951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070612782 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068720255 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074716096 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070937239 seconds)
  done (took 5.248436913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083263964 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072025525 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064558537 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066756491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071526207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06956083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072407038 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069325091 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069666789 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067048289 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069915986 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07168847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069950867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071829808 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069761815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071637415 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064260303 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070150707 seconds)
  done (took 2.68495298 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075705798 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069177052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074980857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068571297 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068530083 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071673636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065234293 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067244301 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06682459 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068391167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068578734 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071133371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067197009 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07061875 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068922281 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068792864 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071043394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067668683 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068446873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064945782 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070584587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06686769 seconds)
  done (took 2.93084921 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095430653 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084174797 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139506957 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08071188 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087852147 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073960078 seconds)
  done (took 1.972670337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095064993 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10135418 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069327799 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071516443 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078048438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073131841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072304819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072082006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079432004 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077056072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072182522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082227467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080009623 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079040093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077762299 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077307823 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072444944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072980468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069016286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084372622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072693978 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080091517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072378959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072536919 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072624202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078899051 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080081866 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077333271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072703428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080162683 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077458063 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072854032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079962384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077400858 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071490119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079728991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072832285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084736888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077975388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078622475 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071797935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077258811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079676138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07649435 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079524004 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072489859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076276182 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072493526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072553976 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085826295 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077784653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078691565 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077749515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07995526 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079752943 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086737202 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077675168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079087948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077521708 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077458591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079039518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077891895 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078917554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077730425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077279264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078775262 seconds)
  done (took 6.531668392 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107734981 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069798316 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073213169 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078577498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078960805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072338821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072286487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07264722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073053204 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069410968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108828438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072783914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079360905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079241559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072992818 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072355176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072624742 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079366089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069658497 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086021693 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072686687 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078582288 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079411478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079338111 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077824046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077337032 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0727042 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072480367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072251411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07241551 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076280921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072515307 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078988753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069288509 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079006625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072236971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072406404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076551533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072927384 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077616922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078903373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084318952 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07228344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072197446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077737036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072160811 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07285638 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069160392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072086529 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069388677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077590653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077487663 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077446824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079141451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072498402 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072481086 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072719644 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072563157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07302252 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077744548 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079058387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072640656 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085876076 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072406945 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072441401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079379272 seconds)
  done (took 6.455194295 seconds)
done (took 133.460552286 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197797775 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173125782 seconds)
  done (took 1.7672581 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072505299 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099133296 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078223121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131814114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068924014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103096373 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102045559 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079458051 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068739078 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068954112 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068865419 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071199769 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134094823 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069047185 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068962799 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071095489 seconds)
  done (took 2.774601189 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101153097 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158597845 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103351045 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068151874 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098907798 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074385761 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067616868 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079324413 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072781596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06767004 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074182233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0723088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067871097 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072586879 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072807539 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07426866 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067760126 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074175123 seconds)
  done (took 2.892338061 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10010933 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092140479 seconds)
  done (took 1.617140075 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158645651 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137471703 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203990325 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332444267 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154778547 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146677433 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14393408 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141653967 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120609366 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137631543 seconds)
  done (took 3.096020931 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100999855 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149329289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266859685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115764149 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074971424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09268657 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118129445 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080914772 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081782863 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081459961 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081616406 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077954313 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099932094 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07622411 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076019452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078113439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103130118 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075451606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077217123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07716118 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100852391 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069825352 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075437679 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075767198 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078636506 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078313243 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068914285 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068524661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077528332 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076814958 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077850468 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091962848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078529535 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103913857 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073920538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104944406 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079084509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075188967 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077461916 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075109923 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079447115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079378677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075435454 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077908844 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068822409 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078295806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069197737 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06898216 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07911485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070573196 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079023604 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07824802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103927235 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069958378 seconds)
  done (took 6.124508556 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1107088 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109294556 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072250573 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113695249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104807987 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071835281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106597862 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099599911 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108611865 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072766311 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070294313 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072843124 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081472048 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082662851 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116689644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109031652 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074567827 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071695182 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108553426 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109030148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071251548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103128687 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097940451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107898378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069930655 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07198073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07060927 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072068329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077653336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079635472 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070757909 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080707098 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085649792 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078885038 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07000137 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070875157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070889494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079981213 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080731281 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080052891 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078382493 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069572399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070644705 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072073599 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071515085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070327928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079307832 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080640443 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079381227 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0708158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074169676 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070751919 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071939163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080207945 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078481969 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081507975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080412226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07089348 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07102754 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073651654 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080493753 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080902522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080031361 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071667644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08052478 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073450565 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081334755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0842979 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071146493 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072171568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070316619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070939201 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071863961 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078625911 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078699911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072026064 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070923267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071010084 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080432749 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079171319 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070407252 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078169087 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069717085 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070725241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071419715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071554194 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077589875 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079669354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071604995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070753458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070480095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070108979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069002289 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077535803 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079125255 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078988325 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07839542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071060183 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078825933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212848561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073341075 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081009847 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071662927 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072631528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071976038 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079695204 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079336636 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081049831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070748438 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071516617 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07924158 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082356655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071218836 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07885487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081447411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079661531 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070551687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082520551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071378283 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081096417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070917052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08121419 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070940501 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079799006 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070949839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069970007 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070429267 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080369397 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071512495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071027128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071694132 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070628279 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079561635 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082859317 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072846084 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079320852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079498536 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0720463 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078826735 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070415063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079772237 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070652349 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071750251 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070115045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082010433 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071418535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070455595 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070583567 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080701502 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070630217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080875523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078414119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070013779 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082143742 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080917954 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07777215 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080730724 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071959444 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070217074 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069996983 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070732097 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078032421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079637574 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07193787 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070407339 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078070575 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080706998 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06987367 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078722145 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078800203 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079396095 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070852358 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070235681 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081527174 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081005515 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078747591 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078443496 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079044477 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071295651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078802386 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080044184 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070809698 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084168166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070819092 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083278255 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079607875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077323032 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078371363 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080033329 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080552069 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081023885 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082828584 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06959502 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070294097 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079186163 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070390381 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070199798 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077171643 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071286735 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071211859 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218863236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071997456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082286919 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070600506 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080559169 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070823269 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072552302 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084158171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071328679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0726392 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080168581 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073578336 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079103636 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081461051 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079263497 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071146267 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072136242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080333561 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081164426 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071218305 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070836477 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072102763 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07947955 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079088774 seconds)
  done (took 19.097423503 seconds)
done (took 38.810565406 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19274782 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.144484664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156634164 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111088032 seconds)
  done (took 2.115249252 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113494732 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098235454 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090967936 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067717272 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096725488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067865198 seconds)
  done (took 1.995808136 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273860729 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187433569 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169103671 seconds)
  done (took 2.088881509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192142968 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177979969 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420619171 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255874005 seconds)
  done (took 2.614343265 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137714236 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086175672 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069735904 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084715028 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126042796 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153528561 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096587399 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121041008 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080279436 seconds)
  done (took 2.46994965 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141108524 seconds)
done (took 12.883229516 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160901076 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102743269 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210379937 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073764432 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.198821643 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078561411 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.251128487 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070347506 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.209840914 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201244923 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077541709 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222985905 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.198653875 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078197436 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102556365 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182890841 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.155140657 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155421711 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076604729 seconds)
    (20/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07601591 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155243168 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174337003 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201906079 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075880464 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189946099 seconds)
    (26/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.156310371 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076248487 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088250687 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068423601 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076784591 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075044076 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113664111 seconds)
    (33/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099641339 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076680326 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.385593853 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11176368 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078370976 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075090756 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.186004471 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121806647 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066559779 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054476742 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11177625 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.199854241 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077309148 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 0.144518936 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079204962 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192546434 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056468037 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.108699405 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077337235 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.068882147 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117399183 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075060373 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093930198 seconds)
    (56/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079585586 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14445346 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055353793 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068043039 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 0.144915761 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076353277 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089365663 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081078556 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094123573 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.127828639 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066042638 seconds)
    (67/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088816497 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067852343 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078088786 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.17324928 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071920404 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084248608 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080403367 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078051973 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092806226 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108407582 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066439631 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08162277 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087585453 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077299499 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.128627002 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.354602293 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05515643 seconds)
    (84/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.101075409 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079774485 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09170733 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055955424 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112161278 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055133619 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131316291 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15189922 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178881907 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057778297 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094115871 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056877316 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076457796 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192208712 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054222625 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07659244 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.179131665 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076249244 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065817519 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080884741 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113621915 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092791643 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091157482 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.119576713 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074038439 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098751368 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108975784 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071037843 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093609736 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.151117921 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176405529 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.190691896 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054587926 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11510695 seconds)
    (118/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074941587 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067098215 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075553562 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088405743 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074511083 seconds)
    (123/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054673631 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06854688 seconds)
    (125/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082937536 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149351088 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077430523 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084569991 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075958875 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076883205 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05515536 seconds)
    (132/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.15517088 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088235939 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055382049 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065439003 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054071706 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058215869 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077181691 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141084068 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098930983 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074784127 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07507498 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111438547 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120083604 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190741313 seconds)
    (146/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065969367 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088389939 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074589606 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076345802 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055289653 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053989674 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069028845 seconds)
    (153/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.145212951 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075607391 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094505052 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069579084 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071508517 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07368733 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054515391 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070183313 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091062097 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067033726 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165189583 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0751704 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088177076 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069428029 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068203051 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094562216 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066458817 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054593159 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071975776 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091050042 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158394334 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154700244 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109924593 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075540868 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067255853 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053563315 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077630207 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139081244 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085250437 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054829888 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14017055 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054737935 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053676255 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06679821 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074556102 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107209306 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151455655 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076213323 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09071489 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056254315 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067659684 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087668568 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093526257 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166699184 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077136656 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053844305 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067445768 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068437209 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066477276 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172077655 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069016477 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053575773 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.118868842 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052910779 seconds)
    (207/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109237867 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072044759 seconds)
    (209/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069704713 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072893229 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106063911 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065374201 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116180593 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074020679 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066514867 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053481579 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0676965 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068276276 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072584741 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052845307 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052836422 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172133055 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053836124 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172389696 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075422716 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110676181 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073525191 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072524726 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072212836 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133384346 seconds)
    (231/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072457639 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055056736 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066356302 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074904794 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068715222 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144757988 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053728255 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073584528 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06878754 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053676289 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162901733 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073012708 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066187837 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072273085 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173267609 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067799044 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089475813 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068803069 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069105775 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055732631 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054113282 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072261353 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072469676 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067681961 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054514893 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065037804 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095568097 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072605534 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053613112 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054621566 seconds)
    (261/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064509232 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053556063 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068089274 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088974376 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053585731 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07854697 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066830195 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079048889 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134399491 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08845759 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066638894 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07451999 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072560592 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086676626 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06680153 seconds)
    (276/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053739178 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066893204 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066842121 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072970508 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06715432 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053404934 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074737682 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053111075 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056618105 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077884274 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054529417 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053196509 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074037178 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065680173 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.116252973 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06652708 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066800951 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073233664 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053695886 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069664197 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068137551 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053534528 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090079182 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183765281 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074288167 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067732302 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066346271 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073767527 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132459146 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06638718 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053262057 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.373110342 seconds)
    (308/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057167922 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073873521 seconds)
  done (took 31.15662853 seconds)
done (took 32.636945771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086966678 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09598196 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079403413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096329176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084952593 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079713158 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078315607 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083796742 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084642703 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086717928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084146043 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060484009 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079718246 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079730225 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080332224 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095269447 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083964697 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078261894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077767443 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069724442 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078212847 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069924256 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07134282 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05915812 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082472118 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07627232 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078677005 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07826168 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069884074 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069844565 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073788805 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077687819 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069757758 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083227814 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07719923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077180295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079079247 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080845453 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070838068 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069375639 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07840489 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070102298 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076941192 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078226305 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076193634 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074851775 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076998631 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080426948 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093711955 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071541292 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078310961 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07889278 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079926741 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076942629 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073147344 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076505666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073936026 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092714911 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077062306 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071217826 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077358287 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077140963 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074409651 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076676998 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076608623 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079001475 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079696292 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074315559 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07813244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074875908 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068897201 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075916039 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072034966 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068374893 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079021374 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083069377 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067234829 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074577645 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076451903 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076126731 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067928243 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070637285 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070294067 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075083795 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070630638 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057875764 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072893522 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075627117 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067791626 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07702735 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074982106 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076271286 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069834824 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079954062 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067811892 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073666763 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06838637 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068689569 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070412584 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07253238 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068310984 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070522833 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078799927 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070042638 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07539086 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08105481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068445039 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075268783 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066961832 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067171395 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080999953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077497723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067794123 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07043645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067151651 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07530041 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067193684 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067874251 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067858879 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067590538 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074433456 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067587036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070217087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.214401472 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082758757 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068342063 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072509624 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070482148 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06896684 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074424551 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068711233 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068755398 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06989539 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064402509 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070477146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068133047 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075249574 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070506224 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075738199 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069826776 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076538518 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07360189 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074678697 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073742053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067406053 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061794503 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070354356 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070371744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069403122 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068810015 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06920499 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067700688 seconds)
done (took 13.079723927 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07064569 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132617912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095029174 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09437605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085621989 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068867407 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07717475 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09625426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07068294 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098197358 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088058733 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086789373 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109803463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067588148 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068613964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072483491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069573837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081394377 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097219747 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087273632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111153039 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068191954 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091866255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088741595 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087771531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102367879 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069379993 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072380233 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071948245 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091444624 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089179612 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072514649 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069448353 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097215173 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092371927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08352627 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069372628 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083469593 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069398675 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068679747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069999992 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09637916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08113945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080961419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072285946 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078208259 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069615984 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083081823 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089184374 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079415635 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085516684 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098808679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070836094 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083974459 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067385038 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085594022 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077645079 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07195846 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069338417 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075935643 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068984056 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072334501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081113985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080780662 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072681841 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084428382 seconds)
  done (took 6.98070413 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087020142 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093190286 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083990779 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086749882 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068428283 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06871524 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068781035 seconds)
  done (took 2.168735421 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07066637 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088648865 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089724 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088807716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082307653 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088963127 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078056649 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069765708 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08935181 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07016383 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088551199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098242871 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072034163 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07568302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090266155 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068966558 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091061075 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069104591 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072157588 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09024697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071116338 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097209083 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072255643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069390626 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082537943 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069221197 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111992845 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072570115 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070815101 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072095361 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067920268 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105777928 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081844787 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076565103 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06917573 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083552101 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082620701 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068317328 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084715806 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077207237 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081815321 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069394249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069816351 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067025715 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072875282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078651568 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070079986 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069530858 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071523948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087186759 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070091127 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08206427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071769663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074324451 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071001843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075146184 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078669122 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070328076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08753384 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07085726 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084594031 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083490725 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081826273 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08307957 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071162772 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081697986 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082353877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0715055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071053001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073165268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083394267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068487758 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070921178 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078854141 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070919525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089868499 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089909225 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070779869 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081723136 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069949659 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069883423 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069555462 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090658494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074521664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068956656 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072740661 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07240061 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067806495 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068342168 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073059282 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067592203 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07149113 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071888428 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072365303 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072065679 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083770123 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071819901 seconds)
  done (took 9.100908737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073301532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070184708 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072048154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069951102 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070278187 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070123279 seconds)
  done (took 2.061845479 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093040317 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071311453 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08132677 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072823113 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102114051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087025745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087800451 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07934827 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08416064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079540385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087225749 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088351171 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091503072 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074277628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087245741 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073080882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087481245 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075783552 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078993773 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074104957 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086139811 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074034407 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074150305 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083139341 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077195346 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073636251 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079630406 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07989427 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07930501 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079069373 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073803284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07740338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072393836 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078845641 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088555704 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072476257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073243169 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079210701 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073581461 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079951623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088082865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074305119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0756217 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0785099 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078748871 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07277755 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07814757 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080553602 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087687424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078616011 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078992907 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073567157 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076582249 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078169386 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072660475 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079444885 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078219511 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087750759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073719864 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072568633 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07134899 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077290576 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07872736 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077705329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079177405 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078720165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072835546 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074293658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074475397 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073018767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078242891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070978506 seconds)
  done (took 7.287734419 seconds)
done (took 29.199718321 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.52953475 seconds)
  done (took 2.111117429 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596984201 seconds)
  done (took 2.210555003 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.535081292 seconds)
  done (took 8.149455518 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.364603089 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464601592 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696045018 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135425705 seconds)
  done (took 3.30682862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70646283 seconds)
  done (took 2.331689986 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231056054 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219612553 seconds)
  done (took 2.078155022 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378806242 seconds)
  done (took 1.992237241 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102337857 seconds)
  done (took 2.718200779 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233203135 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175640013 seconds)
  done (took 2.028912044 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451014418 seconds)
  done (took 2.068527228 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.809170631 seconds)
  done (took 6.427337095 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216776231 seconds)
  done (took 1.879256811 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235394996 seconds)
  done (took 1.859036418 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.753003332 seconds)
  done (took 3.373817815 seconds)
done (took 44.164374036 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086080062 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086127728 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09067385 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083315494 seconds)
  done (took 1.943704139 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080212401 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074515264 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077577802 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074103992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077777359 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074687149 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076315825 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078065231 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073957429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074487699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074499282 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075209325 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076750278 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076128417 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073529571 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077199141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078000626 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074169124 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077214223 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074166213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072813029 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076640675 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076850983 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073646524 seconds)
  done (took 3.439679175 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081344547 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075326497 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076245895 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074077042 seconds)
  done (took 1.940717533 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081570101 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091256332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088952704 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079755225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091122598 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08677429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071115077 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071353211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072850133 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079771582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070575004 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095157551 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088747455 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079468497 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082114411 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068346613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070399894 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087678243 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081246199 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08074477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072570719 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079828137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070091571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0889 seconds)
  done (took 3.558935684 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088853252 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10076781 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082097812 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090985528 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093727228 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068197304 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087426042 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092716616 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124465212 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067706963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072992144 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06843463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075551436 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067760231 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082689524 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110188078 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111031757 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071065734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098916006 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06810218 seconds)
  done (took 3.364236909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075405696 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071797071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072503336 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067787116 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079215973 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074236797 seconds)
  done (took 2.08304348 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072051609 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06947353 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069781448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069426639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073473803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07036863 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068325798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070675781 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070029141 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06914796 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069225195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068460933 seconds)
  done (took 2.47544685 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184928744 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071495411 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071455842 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068022021 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072528127 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068776764 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082707187 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070628729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092980082 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06883248 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069650795 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071320027 seconds)
  done (took 2.631126335 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196326578 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076936413 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221730339 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147679641 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107950376 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111414882 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110804601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10938755 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134378576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09830057 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157749449 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159055167 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105602579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133159426 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089551163 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099767497 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148227031 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157996271 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104802004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158402081 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139238392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12399416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141695239 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100517476 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103862175 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118007457 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073383499 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080606598 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161786295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128150404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139042878 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110245653 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095117452 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167544686 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161101557 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136052518 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143813085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084679848 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102010223 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129471127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187808419 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089582359 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29917235 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10981781 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082530615 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131647788 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116172637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117802411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102715987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090124246 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140936682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173498076 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131139421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086554517 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121923889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111524318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109523233 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111695127 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168859289 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152370152 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124822809 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073802067 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109587399 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144959907 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128505424 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105422735 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119922555 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093785698 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129153145 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14795489 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119532106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137472656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114008798 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089060072 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117111176 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133872814 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124023567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15641538 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122080425 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075311809 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119205529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098971425 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081927649 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144656908 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077585926 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16815209 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099175742 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10466312 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120804343 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105588316 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106577532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151343056 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284172553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103799011 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068654423 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104384732 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117282643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14045224 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08797923 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105949278 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11519721 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079366712 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131604434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076919705 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120415345 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077944753 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121290009 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126724892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078978418 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119441739 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102706825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100731659 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127492717 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152347129 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088622921 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082340842 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159325244 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119629852 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101120946 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137558089 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150548998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10004934 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098927513 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142854082 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16403839 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089505069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155902645 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104248026 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083987189 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087238765 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120424635 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108838481 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120175005 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082423559 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11552787 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159044823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076171832 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0952693 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13012295 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079338343 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081257633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10357094 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102661421 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096219267 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097402917 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100473816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131820582 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26973595 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107380968 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121482015 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098183023 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16148659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088111157 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101352624 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102836141 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072387651 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128785254 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14898858 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079908843 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154739296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119249562 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114130069 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116060772 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08432343 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133725198 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080041002 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07217895 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139005753 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108680686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106700102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143746562 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113737763 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120853592 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115279753 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127284618 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126821448 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125816894 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105752774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088617828 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109830363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124381213 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075521085 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090111952 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081155711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1040556 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094648469 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083964177 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136365619 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120295113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110872427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10966425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097008865 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141764402 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077897778 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122173048 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116017833 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094327396 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144586168 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143994545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127851065 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097560079 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280826654 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07335763 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076507803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088139391 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119374785 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083670505 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083859881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112916795 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140934911 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124027769 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131681494 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12027054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116788008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147410053 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071901375 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116921407 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139203551 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118221975 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103994904 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091349521 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098029972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137053811 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104322929 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169295661 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111718142 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12096393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148062928 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101068058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080838131 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100907346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128271683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102037238 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136943783 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097874274 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088509718 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106599056 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079546271 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097835975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123512941 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115479342 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131202668 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111954811 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130415885 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079313562 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112499391 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118149237 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11796122 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066521535 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115066597 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151709986 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094622211 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114108121 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296530126 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080389934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134251603 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165397288 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138416124 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085572597 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106069678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117078483 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121801844 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11687868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133539549 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104962549 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132270389 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108017686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085263774 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087925783 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095282014 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102840902 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09388225 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10264009 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110724675 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095509577 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127171417 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102610674 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109277743 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115016781 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099571428 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092392805 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096264105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166507408 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115916811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161889762 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098871542 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136286802 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154951884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076741519 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080585005 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079503261 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13344549 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085852224 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12669213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10889568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114644191 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120633062 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1354014 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095653583 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07100992 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106351665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129109357 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120222512 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09739816 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100454842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153362008 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097030507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22701787 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110875847 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114302298 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103457451 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163248217 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064702927 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104791268 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077871749 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081491889 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1222142 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144590641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081340475 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099571457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116721799 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110027053 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123246873 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098731767 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109429039 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121933702 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141604369 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123678997 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089667428 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108910151 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123546769 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149284158 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101553833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097181865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165903347 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145106507 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15174594 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086473386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112511732 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112306649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107024865 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134588326 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084274975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154541048 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083091545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131915905 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101877044 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088845698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125490666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110274193 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088572744 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13963426 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113803951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083073564 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078172973 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113283697 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115665034 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102769826 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076090313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281989872 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076267442 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129882302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153843474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082246888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103591442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095459957 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082293117 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103544545 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101567936 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087304976 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099462911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164085101 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086572188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141642635 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130691714 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109372691 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129742983 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101694526 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639699087 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078787104 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14422616 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112794324 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16298249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09862273 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114891135 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107999716 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117956528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13803631 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101568288 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176026112 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127585921 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11421639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08050179 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101661054 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102829443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087254405 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10591716 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111974067 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113657513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09398255 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113479015 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121542971 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083202097 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095876495 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148517835 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112448774 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13734426 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132362473 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084636927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11417664 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283826906 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082083411 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117712641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144997742 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105271327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099151903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082132467 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099032511 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153215817 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074973007 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151917034 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121373747 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107796642 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111141963 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109617081 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127210993 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104185284 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118977656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091155512 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106497032 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110925759 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082116332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078488125 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103448398 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108183827 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097372556 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096114758 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099248739 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144730659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074071904 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097983067 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112910794 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138147856 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164141678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087279068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084042941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11690496 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113204246 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110235478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118547899 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07998185 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082574219 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081023285 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082037638 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10569362 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111427563 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112232269 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1081892 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155124045 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085521727 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221793454 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094738711 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10294402 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071547123 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078930251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095771572 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247362865 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105676001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111499475 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153231808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095025299 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09000044 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091958819 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077176136 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08497848 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122956012 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107205887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115826208 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100095063 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064987626 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105867238 seconds)
  done (took 57.89866674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109778397 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083822049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098116328 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144639674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123167039 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200061947 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15651562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189193223 seconds)
  done (took 2.846992545 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071796542 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095531554 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104244983 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08416569 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069364251 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071113368 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219608964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083291643 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069230016 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094426433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080011066 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071404772 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411784944 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06825272 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070381396 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064661935 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069330506 seconds)
  done (took 3.53262872 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378894109 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622468851 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333059766 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079401344 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.944756218 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091528237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.178374439 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135493086 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08013303 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545248833 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.40906615 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131205952 seconds)
  done (took 18.67351142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08429815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077705267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09059899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090308411 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080622366 seconds)
  done (took 2.161653473 seconds)
done (took 108.199037794 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088449636 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.580888609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056546241 seconds)
  done (took 2.408462522 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090714846 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087174882 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086855818 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084471695 seconds)
  done (took 2.103719466 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078010927 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078774141 seconds)
  done (took 1.906045851 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223425908 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166297647 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096092062 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08594847 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080867052 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081056038 seconds)
  done (took 2.001578436 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075349186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07769438 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075345592 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077831915 seconds)
  done (took 2.049887567 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080260601 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054939547 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057648983 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060849732 seconds)
  done (took 1.999770599 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089637317 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083589162 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080421972 seconds)
  done (took 2.004770789 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101540885 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088668245 seconds)
  done (took 1.931387535 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085091172 seconds)
  done (took 1.828351981 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095202845 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099121164 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128399427 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109619769 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134884017 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106095231 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085338566 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08573256 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077322528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087298945 seconds)
  done (took 2.748048283 seconds)
done (took 23.293656639 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081218148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368312376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361460675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091023439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669403474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359988435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970321701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094646535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138977778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069732337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086142008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65108205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961427575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323324666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946765258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326980452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651001133 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07054415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070248645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071161133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957494868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070364825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070521199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070608069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650723393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373083092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071210246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327572229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070331474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072926832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358157527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070858859 seconds)
  done (took 16.244894535 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089961185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119250281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074595728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086437423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072528273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071615309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073834711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070654915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121082803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070245961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087386399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070090583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073627373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070828479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089333116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070757486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070939809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071076353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072996863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070870449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089051135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070295977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071015449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071513406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071073988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082072355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0714528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070964607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071293125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073216921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073644908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071564897 seconds)
  done (took 4.247806156 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117105055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124922606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07581141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104808148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113024371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072756501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143337682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094857461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127701731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070494985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087856298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071188942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102884061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071068743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09044637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070848132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071516516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071719774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070711249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071204212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089707601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070556547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070821023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072070851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071262416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08393858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071184867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071515532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071702832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072775048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074464466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071538957 seconds)
  done (took 4.479649375 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076206127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077737981 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084658095 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085434234 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071208506 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074148267 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075675593 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071825316 seconds)
  done (took 2.376743356 seconds)
done (took 29.10387078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081719253 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071056497 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074349892 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089527472 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075454592 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079346743 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069767541 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077598162 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074797779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075190361 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076389637 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06973086 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073500893 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069226094 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07627074 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070676672 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081599835 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07455054 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080717762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081887578 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072420613 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075215427 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077593705 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080579188 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081022619 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080938443 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079283261 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076230124 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070875291 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073536017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079773762 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086188493 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071136825 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081343439 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070316043 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070506676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074830075 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070889862 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081087616 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079062645 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072810426 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078933818 seconds)
  done (took 4.93267553 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090243809 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091885016 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085698444 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06396161 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068360618 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067048842 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089991622 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062768582 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062573773 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089446296 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059177968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062197665 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065428153 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057254533 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062517301 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060613974 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063840278 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058605365 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062148324 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061913553 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089501166 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056746593 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079263135 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065131321 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059599683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064740134 seconds)
  done (took 3.566614956 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077391731 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084843089 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09099398 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143073394 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112127544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079339052 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08068812 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094475219 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095939869 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069445521 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07290797 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094195719 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088632909 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076223278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070105061 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086423472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08676573 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071303422 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075040271 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093214027 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087777666 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08681069 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093765727 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085510924 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06933058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073506322 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0829625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072315143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078479201 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072691681 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073311298 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072164886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081125631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07234552 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071992877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094757373 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079405399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080144783 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070705066 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07755895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071070083 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093291305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124387091 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069371177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07538307 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073630354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079721197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069769492 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094499522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081360377 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069479225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072637474 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069249398 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06928898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072258178 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071809469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071903061 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077757948 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075093029 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09254858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074323131 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085378297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069215849 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077445775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069455491 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070463213 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069166875 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094049178 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071761162 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108909574 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070607172 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070898758 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078500398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077562584 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075670806 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070298956 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085427438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08119024 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073268818 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077310996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073001723 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072163093 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09742117 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072091006 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071807991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070686654 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075263057 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07226099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071061725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082061258 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069461737 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072153762 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086357722 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069941636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070995042 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074933659 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074246652 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069201988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080093356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074041242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071225062 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078699435 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070130925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072245706 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081317438 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075730975 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06859796 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073546734 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074568207 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070436486 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071473052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071985623 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071497237 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07773324 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07649854 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074533748 seconds)
  done (took 10.964420864 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160152931 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149594368 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072573847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142854677 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078181177 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080511404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143604282 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09405668 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071603445 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071044025 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070313504 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109353893 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104432781 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115088859 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080471014 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069955936 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091820852 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113200081 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14601198 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141206978 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092027235 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077948229 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072535362 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071976477 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072310563 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079282393 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087031384 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079066557 seconds)
  done (took 4.540909498 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083456027 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102731125 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076673321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092084556 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091413786 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070444593 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072491925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071474203 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08608692 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079827434 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070178375 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075321958 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075996083 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072701974 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071003559 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076755391 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077241807 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071760238 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07406138 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075129625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079698169 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092846949 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073750679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072681658 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075279006 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070106517 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066280005 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085172046 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070819248 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093746297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068390805 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075659319 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083423627 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071309748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070665562 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070293871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070742838 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070269856 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073071954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068834556 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068894085 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061215268 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069722336 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080518676 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083288322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.0593924 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074859311 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075464509 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075202261 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068158676 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073280011 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073242609 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072920809 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076698239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074225733 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075210133 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071483056 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075909321 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078504784 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070293149 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068275607 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069068102 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074659619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06724925 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084750258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07436978 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068797894 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069945135 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072163185 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083148963 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070210469 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075685669 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068083571 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072226999 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075084168 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072651047 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07149603 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068892174 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070623087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071355919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058969305 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070576404 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05696357 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072947344 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068812365 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068763472 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069856518 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075895363 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080617514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071382005 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075776388 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071585807 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069216525 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072565783 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062770255 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072331806 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080078007 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083802677 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070484845 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068588446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081740408 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074692005 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069577058 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05907005 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074534532 seconds)
  done (took 9.548838177 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093822101 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072206568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08346187 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089806901 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088006361 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076660872 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079783275 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071520248 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084864739 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075424502 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078929049 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070279195 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079568069 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078989832 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071856966 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079883894 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073607003 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084412685 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083857241 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070362922 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078596987 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081765073 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091098383 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082702143 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080888474 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082043351 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090854955 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07865279 seconds)
  done (took 4.060625044 seconds)
done (took 39.367153742 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.848704372 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.007077408 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.831428932 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.152378831 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.052210425 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.848783156 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.027102205 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.826684452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.078331053 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.868717672 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.198458075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.936838514 seconds)
done (took 66.57147299 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.911280035 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.963863494 seconds)
    (2/2) benchmarking "String"...
    done (took 2.058197486 seconds)
  done (took 5.775491772 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.079746273 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.430006362 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.074644999 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.823906123 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.830741024 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.12457895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.618038801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.344511748 seconds)
  done (took 31.000107231 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.003859532 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052011517 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.517971683 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.552210668 seconds)
  done (took 15.92860286 seconds)
done (took 64.54316549 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.825853024 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.83200318 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.866306515 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.808539856 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.883761918 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.841524739 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.242113069 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.940588013 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.818929826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.807315757 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.823089178 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.240014581 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.834888729 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.148387712 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.81808964 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.82794013 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.854652527 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.305996885 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.969156227 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.834122803 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.824560509 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.860210144 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.809810917 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.821386024 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.815414223 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.814564229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193619417 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.8117671 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.662381763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.815195302 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.867295098 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.377126743 seconds)
  done (took 205.946377622 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.813155852 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.807395504 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.850254643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.860412121 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.21753162 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.992573752 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922043749 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.260593915 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.8181278 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.828987578 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.967848066 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.815087403 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.992071471 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.813226409 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.844474862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.906304262 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.998186133 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.001635554 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.852322827 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.962499637 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.833425437 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.897099307 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.831090715 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.95023719 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.815987971 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.923450438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.832051319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.816146241 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.00763429 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.952098096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.824382604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.821432825 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.017724082 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.684418188 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.828333214 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.828862146 seconds)
  done (took 171.133333174 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.002086417 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.815085415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.812058412 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812589136 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.819853706 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.817989594 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936615141 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.938522733 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.437748559 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.217057606 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.869930709 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.815432495 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623922735 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.814094447 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.885233921 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.825356395 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.814156413 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.832588505 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.840675842 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.815585046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.816277924 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945462202 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.82670642 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.814655699 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.821736527 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.816238612 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821518167 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.18779943 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.812963865 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.891181204 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.8173085 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.816819265 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819032063 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.353336877 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.06260516 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.814837353 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.818246928 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.814872267 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.667260486 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.899031542 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.817027404 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821736017 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815648867 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.036666919 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.815395789 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818676163 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.81634241 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.820934158 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958517165 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.820696551 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943411195 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.816304711 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302189262 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.819917167 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.818190995 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.459254218 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.417224879 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.818497834 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.822605065 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.823733564 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.818742444 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.823555518 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.444626064 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.896413779 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.822067212 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.822808486 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824577998 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.820848504 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.822620399 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.819746968 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.170813566 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.877189197 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.939007606 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.948708173 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820057908 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.888704912 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.912666335 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.82044346 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.818811209 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.819664728 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.820323504 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.902017819 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.820384689 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.944931998 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829475383 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.819444329 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.874007429 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.891007308 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.820287223 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.695522792 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.821820248 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.821224501 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083126879 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.886661897 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.819312194 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.822011813 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.94383185 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.942697836 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53809654 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.8210303 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.462536754 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.955147997 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.825116506 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.822332938 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.974582343 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.822886121 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.906937097 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826044923 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.825903823 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.854649508 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.821386154 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.878439946 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.822157844 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.820901736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.194233452 seconds)
  done (took 406.393974307 seconds)
done (took 787.285770441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.431406978 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.400602019 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.497611095 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.41873095 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395353213 seconds)
  done (took 13.892960622 seconds)
done (took 15.645374529 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.909745313 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.915461307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847420603 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912805044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.841817306 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912325552 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893168486 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.843656052 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880091619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.845962055 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882252646 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845263306 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.835427489 seconds)
  done (took 26.115416619 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.05964507 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.070962643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.89224205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.05893942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.869868736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.075018921 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.988716641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.976840108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.978991585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.838061817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.836800913 seconds)
  done (took 23.401208795 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.067506927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.071015031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.902203433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.068762603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.874349031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.065079494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.991068837 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.985471239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.992919616 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.841333542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.836230643 seconds)
  done (took 23.448390068 seconds)
done (took 74.715306843 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.837031658 seconds)
  done (took 3.586705507 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.858265759 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.02429019 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.838075639 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837373061 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834619387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.830959227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.835660707 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.831315957 seconds)
  done (took 16.642277023 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.830546608 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.827512025 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.82916599 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.830416138 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.833220413 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.829162596 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.829176444 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.832272272 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.834723848 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.8299566 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.83059622 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.83197551 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.830379365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.827801594 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.827674645 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.829879776 seconds)
  done (took 31.03613133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.831082751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.829565478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.830477978 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.829383904 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.827934458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83085981 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.832038495 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.827727553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.828510556 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.831169395 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.833892764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.830686107 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.828919721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.831179036 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.828608239 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.833867132 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.829716836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.829675319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.834051475 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.830048934 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.830223745 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.831141795 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.828958793 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.828753824 seconds)
  done (took 45.686376896 seconds)
done (took 98.703540375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.594505093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.451902646 seconds)
  done (took 9.797967663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838610591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.833695335 seconds)
  done (took 5.488610856 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.832408775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.834732268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.832176592 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.834027332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.833055971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.832171134 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.832390578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.834368648 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.833898354 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.833737961 seconds)
  done (took 20.086055677 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.831737873 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.832544583 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.830138849 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.836501928 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.833138609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.829366165 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.833164015 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.832984754 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.835255914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.829393885 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.831996256 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.831746904 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.833784465 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.831214074 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.836425301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.830553867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.831614835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.830055605 seconds)
  done (took 34.734067945 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.837222538 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.834165648 seconds)
  done (took 5.42597496 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.830423045 seconds)
    (2/7) benchmarking "second"...
    done (took 1.83349846 seconds)
    (3/7) benchmarking "month"...
    done (took 1.832455886 seconds)
    (4/7) benchmarking "year"...
    done (took 1.835554108 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.831346705 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.831050699 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.830955087 seconds)
  done (took 14.579989645 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.838137772 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.977228436 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.040308545 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.497619919 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.836650693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.838881866 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.806057215 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.839738505 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.840575919 seconds)
  done (took 20.270070742 seconds)
done (took 112.13816846 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.660100148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.831164389 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.047700404 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.908913066 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.847976534 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.169056307 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.863998206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.106395141 seconds)
done (took 43.192598074 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.911702371 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.516439215 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.782081698 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.862435624 seconds)
  done (took 15.918698833 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.834309155 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.228637137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.843616071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.706870532 seconds)
  done (took 22.439007081 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.200708643 seconds)
    (2/2) benchmarking "read"...
    done (took 2.181906035 seconds)
  done (took 6.146253555 seconds)
done (took 53.174037441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838369261 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.837481907 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.835766286 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.838976531 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.835619558 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.835965251 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.837766974 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.840785607 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.839102869 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.837890215 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.838169535 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.839388652 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842228287 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835454929 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835290354 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.839216163 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840952371 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.83701218 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837585278 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.836764336 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838619831 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839522711 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.836433085 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.838816269 seconds)
  done (took 45.870550843 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.839842942 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.83841572 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.840790599 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.838529162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.840475402 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.839993943 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.84001843 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.836358633 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.839176039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.843295161 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837625409 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.83711252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.838269431 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.836947911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843093563 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.837895377 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.840849255 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837593287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839923137 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.839583978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.840960703 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837671337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838190798 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841651667 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.839727396 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839547709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.840229333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.839999206 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84185777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.841803545 seconds)
  done (took 56.948255051 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.847627376 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.850555683 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.842096794 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.841449265 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.840281213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845025165 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.84045931 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.843978439 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.840949143 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.841059498 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.842547015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.841129317 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.841938848 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.842612571 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.841394959 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.840982068 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.844466653 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.840985069 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.842376659 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.840605782 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.841404846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844199073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.841352365 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.841442279 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.844096416 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.841155835 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.841703301 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.84400863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.842171754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.842341568 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.843522471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.843725338 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.843690291 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.843328264 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.842178938 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.842495248 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.847550055 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.849605948 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.845592679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.842263542 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.84312345 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.845007603 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.845521227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.847471528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.844832687 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.844473162 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.844314068 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.844705629 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.845459717 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.844419911 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.842613002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.844757702 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.844440809 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.843937543 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.846562072 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.842239948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.844793372 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.842914371 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.843798513 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.844021169 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.843282264 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84483956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.842815693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.843192341 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.845419219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844409053 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.844491048 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.845319539 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.844983715 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.844532708 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.844754365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.845660366 seconds)
  done (took 134.505908368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.845985095 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841552241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84235531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846107717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842138624 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845748322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.842419102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844533394 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846631026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845177766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844444191 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841593526 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842028789 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845903356 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846601989 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843382408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846157295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842700394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.84507365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846532549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845926929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841874914 seconds)
  done (took 42.339888636 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846130116 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84881335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843390714 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846050006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.844014413 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846662066 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84688254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848007891 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847650143 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845889013 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843955921 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84659385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.846736614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846529956 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843412373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845145428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847906072 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843931873 seconds)
  done (took 34.99302438 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.845832504 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.844911996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.845918184 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.844839766 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.847891021 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846858313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84410573 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848924704 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847174442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.846227136 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.848536524 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847174162 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.84755036 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845211921 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846936567 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.849207573 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.84735826 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844732527 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848592663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846162752 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.850517718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847653145 seconds)
  done (took 42.400326678 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848525347 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849453419 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.847173504 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.84663321 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846960539 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848982205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.849219572 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.846006176 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.849633935 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.848480545 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848531871 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84887022 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.8486955 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848012041 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.847977258 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848161011 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849198611 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847241741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849762095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849804344 seconds)
  done (took 38.736767676 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854444527 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853686068 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.85255886 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853567677 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855177249 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85431841 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852180067 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.851755065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852542334 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854996613 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853025655 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852052676 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854606347 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853804748 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853846916 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854892847 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853003706 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853109567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854928169 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852028559 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85432879 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854820936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855492915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85345367 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85644584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855167951 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854010031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853104651 seconds)
  done (took 53.677511812 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849556714 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852513345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.850311489 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.847929701 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.849689193 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.849871528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.849513473 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.848523437 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849901982 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849441103 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.85229792 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.850864437 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.851928537 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852639256 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852489913 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.852759507 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852996545 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.849087642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850776506 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84795342 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.853548769 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850493673 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.851391603 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850201449 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848408505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.851829976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850663907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849445544 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852252509 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849427407 seconds)
  done (took 57.291318683 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.871377014 seconds)
    (2/2) benchmarking "in"...
    done (took 1.86950612 seconds)
  done (took 5.512844931 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.84891366 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855405338 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.852961942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.851122744 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851412097 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.854046805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.852547506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849426269 seconds)
  done (took 16.588150596 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.85203093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.853230501 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.854643189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.853050902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.858480597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.853762506 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860278429 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.855013915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.856420508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.855011981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.861562789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.86239042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.856172828 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.857338681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.854259407 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855617518 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.854385378 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.858424459 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.857629 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.854488709 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858964331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85590975 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855768095 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.85379799 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.856262744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.866078576 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.8582953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.855677423 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854304735 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.860660795 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.85544227 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.853528107 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.858752584 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.859287755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.857599697 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860122009 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863567032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856102678 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.862095697 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.859880174 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.855992722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.853646668 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.856766564 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85686449 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858372529 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.859431262 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.857117696 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.855022163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.856085801 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.860098751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.862164216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.856055685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.85499058 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.860114474 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856640583 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862989429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.861938494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.858642063 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.866488937 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.867043358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.86827884 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.865951707 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858930342 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.860888466 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866364156 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.880584676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863528704 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.853838801 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.85638889 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.856952536 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.861800475 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868396425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.866821202 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.860959218 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86103859 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.858231402 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859435669 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860746984 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.865092072 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.859635637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.862307062 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863447332 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868807284 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881454957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.859751255 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.861379249 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.862623845 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.862258 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.861580434 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87094397 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.863351053 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859049514 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.858847158 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.859102283 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.861700858 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.862534587 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859895525 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.860306773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.856432809 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.86073616 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.862928454 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.862514111 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.86930935 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864235644 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.864149146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.866044511 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.860666101 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860007072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.865950157 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.863119638 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86449463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.860813972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.867366277 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.857538312 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86265188 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.874044859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.86422617 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.862237671 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.865391183 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.860892103 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872476556 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.886762064 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.863165983 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.861333851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.866820436 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.880198722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.864211434 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.863628061 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.860212749 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.858638057 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860007902 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.862236914 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.859508269 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.861312465 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.865581093 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.864233155 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.861628202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.860990653 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.865368879 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.861703034 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.863481698 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.86434888 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.863839519 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.864918572 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.865995083 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.864488922 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.86839899 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.86281596 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.864613139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.863457995 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.859477831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.862833234 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.864992503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.866262408 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.862432635 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8665049 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.862810061 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.865495873 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86338993 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.86315765 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.865148645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.863893098 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.866948996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.866351248 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.864353283 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.863536218 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.859757544 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.863216729 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.865314533 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.863670927 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.864281352 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.864891378 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.865105787 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.875301241 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.865524333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.868347981 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.866754093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868294201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868613479 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.868770382 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.865325629 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.872054496 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.86780445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.868134352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.86793242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.867650513 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.864529438 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.863297404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.863742872 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.868701538 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.868246458 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.874112992 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.877063856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.874418668 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.866337302 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870576223 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.864651565 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.874074026 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.86985991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.869019449 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.867207871 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869042455 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.86571727 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87020673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.867599986 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.869745817 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.865397422 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.866913682 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.867193473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869800761 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867690927 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.866563819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866921925 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.862566338 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865558107 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.868934231 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.866061123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.865857113 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.865662289 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.865089801 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.86643085 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.869291009 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.875412981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.864646751 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867958336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866625597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.86559748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.867359067 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.865852045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.868229611 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.866766419 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873001329 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.866928527 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.870152342 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.872923083 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.866842479 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.865210167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.87031604 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.874278338 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.865439729 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870337748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.876789865 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.866752029 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.871629032 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.871543708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867909878 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867963517 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.873537479 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.865108705 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869721982 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.866721244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.871067565 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.868197838 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.871264803 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.87044865 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.87132344 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870094393 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.867327093 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.870229726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.870423173 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.872808099 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.871394937 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.871754637 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871703503 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.878974252 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.875446762 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.867728481 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.872039123 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.868929886 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.871357227 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.870892556 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.874473173 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.867951298 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881960623 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.882927311 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.878028125 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.871472293 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870279439 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875269092 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.869988583 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.873363063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869868466 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86953662 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.870020199 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.868825617 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.868777425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.870432758 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.869519129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870742516 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.869885069 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.874601629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.872936988 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.869997364 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.872371012 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.873542845 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.870504504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.870237304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.872041555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.873507656 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.87198052 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.870325881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.869693626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877969014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870559627 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.873458005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.871188375 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.870799346 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.871139008 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.87192733 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.874092628 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.875831301 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.882669556 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.87518661 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.882078689 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.872090638 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879774535 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.875395323 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.875286769 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.883994921 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.869494942 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.872437587 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.87182908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.875578934 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.878577565 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.874473158 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.873907137 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.879710123 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.875744832 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.877589992 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.872897865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.875115232 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.872828423 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.874241696 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.879123135 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.874344882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.875911495 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87352878 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.870614932 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.874482428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.869834443 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.870654438 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869820996 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.872371169 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.86831236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.86734831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.871142685 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.866210081 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.872900464 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.871458918 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.869023494 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.870278832 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873346119 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.869810442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878499757 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.872017602 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.878264149 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.873388675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.874868033 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.873302132 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.870538278 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.873747668 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.86609177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.870578035 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.870827125 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.870032891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.874244205 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.872995912 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.875324372 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.871106276 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.870130294 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.868706385 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.874941267 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.868696596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880910593 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900046697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.868676056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.877387489 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.868951892 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.870570559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.875752177 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.87116125 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.869193618 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.874235497 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.882643781 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877162131 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.871787053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.876993258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872701357 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875453866 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869929258 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.871526005 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.87400954 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.869884456 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.870631648 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.872413659 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.874576017 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.871456857 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.875676206 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873298269 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.871791585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.880030531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.874871785 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.872857349 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875806692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.874032726 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.870658903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.873570358 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.878088979 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87149796 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.873614029 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.87289294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878134474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.879970728 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.877447146 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.870484386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.875027044 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.873623594 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.873024251 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.879349632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.877262138 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878159079 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.875148786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.873772235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.875794497 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.873553779 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.875472582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.87235776 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.872566824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.877703136 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.882975522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873672659 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.872457036 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.874607256 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872057474 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.872085778 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.875401947 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88192166 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.875573216 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.886145614 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88487316 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.881982782 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.877010871 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876990906 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.88053801 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.873081372 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.873869431 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.879985529 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.877430918 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.874798883 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.878456934 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877733358 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.880840437 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.873494946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.875019533 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.883535796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.874106612 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.879875354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.876278893 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.880617452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.877538863 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.873025944 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.876761239 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.875935767 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879441949 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.87533718 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.875717195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878469075 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.877043752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.878979205 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.884630729 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872115052 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.874496168 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.873382176 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.874872065 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.878261867 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.87518693 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.872518876 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.878961308 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.874599985 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.880732245 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.884494267 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.874774006 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.877377588 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.876489923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.878525468 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880045657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.878216669 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.876522268 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.876611692 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.876848736 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.876209288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.878993991 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.879794428 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.878191321 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.878450934 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.874816331 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877876691 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878208177 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.88858042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.885008304 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.873495213 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.878488163 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.879173665 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.881014683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.879396683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.88153336 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873148121 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.878644954 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.878316728 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.883824229 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.875898655 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.880336179 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.895555561 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.8789052 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878142692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.880196586 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.883337474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.87919649 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.878911449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.881682687 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.882478818 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.881063727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.890260124 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.88440965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.887262247 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.877997404 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.881114323 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.881224847 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.882470489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.888820485 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.881302379 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.882420241 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.882659334 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.884164975 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.896391559 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.879985642 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.889710194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.911282402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.881459497 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.881751337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.884174575 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879489571 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.881907035 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.882771184 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.882719253 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.876258636 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.879909179 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.885305541 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.883053344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.886779608 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.879288048 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.879646213 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.880339857 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.878465666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.882516187 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.875133789 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.88589466 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.878902349 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.883293075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.881033926 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.878921599 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.880438342 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.895721005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.889721664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.883339061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.886831309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.87964267 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.881722025 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.884789416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893479339 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.888708566 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.887202595 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.887367694 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.881870725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.882531257 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.880990711 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.883415642 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.879728328 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884304275 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.877598715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.893205684 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.893155269 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.886206147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.884349864 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885680579 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.881683511 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.882490427 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.887985301 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.885269558 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.879818943 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.880654261 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887692661 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.880460928 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.880003067 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.88564946 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.887533392 seconds)
  done (took 1117.148683607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.876677258 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878335613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881198724 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882248284 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878406854 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879006142 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878155193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.878372548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.880674177 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.880244239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879229202 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877058493 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881092928 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.878602009 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881529417 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877943192 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880063233 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878068555 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.879787498 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.884115279 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884182192 seconds)
  done (took 41.277589411 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.879921969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.880337029 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.878871517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.883142132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881477057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.879163264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.883144742 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881895545 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884339446 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87846925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.881584312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88258619 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.879578389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.882408051 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882890139 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.882999187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.883301899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.880173369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.883558227 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.881191706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.883290856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.882064376 seconds)
  done (took 43.198175313 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.885384368 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890168126 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881418834 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.881420379 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.885022721 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.879688947 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.887149437 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.883776805 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.887025764 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.885407775 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.883231345 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.886010966 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.892723355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.890210856 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.884297179 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.885904563 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.029689177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.888052294 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.889419163 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.885431044 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.881160536 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.89140976 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.880621812 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.883788797 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.883456958 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.887300838 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.88734901 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.882798103 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.888669664 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.885706055 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.896431303 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.888259236 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.886790493 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.889150672 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.88463724 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.888125342 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.888655551 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.888417269 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.884767087 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.886032274 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895488908 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.909188626 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.890723009 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.892948543 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.885572083 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.885826408 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.888554334 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.894969596 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.884566088 seconds)
  done (took 94.425302897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885876365 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.886507975 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885181011 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.886235019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.887697861 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.884012771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.886711065 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885052553 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.883273305 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.884142734 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.88439192 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.884241115 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881184547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.885088668 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.885247276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8851344 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.885840082 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886001953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883634954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884388024 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.88204427 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.886569692 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.886850319 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.886286357 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.885084865 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884155119 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884497921 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.886486789 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.883147598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.883751541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.886580217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88761459 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.888511779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.885887897 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887559086 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.888481933 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.889291841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.887099012 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885872769 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.885978749 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.887926801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889543291 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.889665082 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.889253845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884527644 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.885953536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885267364 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.883126381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.88309603 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.886171254 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.888151195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884398274 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887355923 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.883083991 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889241137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887718868 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885140374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.885739101 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.88656851 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.88538803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.884864312 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.890026587 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.888194345 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.888620773 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.888478058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885827001 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884123197 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887627979 seconds)
  done (took 130.051533783 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891564142 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.892603452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891369015 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891019942 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.893786918 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.891226566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.891811212 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.89398539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.894086541 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892163407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.892346031 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887039953 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.891346968 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.889621714 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891779327 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.895152774 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.89429984 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.894720941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.894319051 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893053905 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.897346179 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.895013989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.894071125 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.894174648 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.893956218 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.893872932 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.894654326 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.893882834 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893582755 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.895369068 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.89473081 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.895621847 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894945782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.89649951 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.896954496 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.89370571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894227415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893971446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.893794963 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.895109812 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.894784101 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89607856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.892987746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.893984745 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.893896844 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.893638249 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.892846402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.892867724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.893333045 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.893760944 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.894392958 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.892822477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896224712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894505844 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.895242971 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.890618606 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893145541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.895849311 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893709751 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.897800536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895442762 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.891609151 seconds)
  done (took 119.221539406 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893299838 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.890452634 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.890036237 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.890266212 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.892841468 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.88708296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891376911 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.892577686 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892158044 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.89240579 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892890006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891067318 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892800602 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892447378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.890708089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894235509 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889145239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.890535636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8920048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892370261 seconds)
  done (took 39.6406828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.891935718 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.895138242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.891574932 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894260899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.893792502 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892230518 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.894138911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895915472 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890424115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894139716 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.894770483 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.895680061 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889844346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.891267914 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.897697705 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.891558661 seconds)
  done (took 32.10657541 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.892627041 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.898260931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.897753792 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.90270371 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.891696718 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.892719794 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.895988593 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.892237103 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.894786518 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.89534011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.89391579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.89464534 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.895989116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.904322621 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.890077724 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.896806076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.892627348 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.893363123 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.894021781 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.900582176 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.892756725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.893370036 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.89714016 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.89494329 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.893097139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.893308433 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.894712913 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.89573758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.895360752 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.897383585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.892785386 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.891768341 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.896388721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.897315239 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.900506954 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.896340269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.900451853 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.896197775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.896716616 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.897236224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.900561937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.894983564 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.898757644 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.898003658 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.892818921 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.897956616 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.893495653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.896240771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.893324279 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.892781075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.896043461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.902497053 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.896557827 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.900330216 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.900378062 seconds)
  done (took 106.092786686 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897550865 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895151002 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.893292407 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.895251722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.893865991 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.893653847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.898435137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.893808227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894710084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.897359849 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894054444 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.898704158 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892804544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896286795 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.895212298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896844434 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.894339981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895061835 seconds)
  done (took 35.932510888 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.894731197 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.894929439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.897575309 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.895657453 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.895956283 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.899173959 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.897750098 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.898956231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897299066 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.89981177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894977652 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.900123536 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900882525 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.898210642 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.895045247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894808271 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.898540654 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897658867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.896130207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.895158794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897818884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.897783271 seconds)
  done (took 43.555428355 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.896658614 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.895908724 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.914567117 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.920050743 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.92151996 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.936254633 seconds)
  done (took 13.299945983 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895779115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901332538 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.896573231 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899592088 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897886009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897090256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89596723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897551801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897418848 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89440302 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89605873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89770529 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90096543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900202707 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901860957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901940064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896467251 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897341374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89574956 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898418789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898407877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898668623 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896993014 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898268933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900206386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898724037 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899291705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898196504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898184868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898663508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900480734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898940926 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89878885 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896314071 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899931137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901403613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899892868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899786949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898668145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902134758 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899807411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899507159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899979311 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89848884 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901327711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898162435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89859493 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896821226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898555142 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900626159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900294718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89846342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903296 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90422807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901473244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902809103 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900814569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897129714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901226368 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900510605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897709924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902803249 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898307545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898310285 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902663603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899715153 seconds)
  done (took 127.161483859 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897675483 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.899581759 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901519099 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898817362 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900550931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899023042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897062045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900100825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898843957 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900364972 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901107828 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900565894 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89934755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89912059 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897388694 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899925462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902407351 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899295786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899912349 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902720399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900669694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899177328 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900312278 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901524443 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902194734 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902625438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900900117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900235486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90086446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902499887 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900480525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901101806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901929796 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901937623 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902588412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899772082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903258077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902203665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903434328 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904995926 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901447428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902339031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902583637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90067953 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898898821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902102919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901375317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902433594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904097446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901001278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902355903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901225529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902803869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902319349 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899427951 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902166605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901710788 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903427576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902076002 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904123751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902047238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902225279 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903928859 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902688323 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901398719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901565125 seconds)
  done (took 127.30088295 seconds)
done (took 2601.0416818 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.92933528 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.918949377 seconds)
  done (took 15.669580311 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.066278598 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.022586934 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.903773533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.953957434 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.903897916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.90034907 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.912799372 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.901436345 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.906545897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.903856119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.903814707 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.090366572 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.960804083 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.903233164 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.904815868 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.99701781 seconds)
  done (took 52.963459334 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.907322507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.909087442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.918548734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.911081142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.90910725 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.921951213 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.94367949 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.910513019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.944008982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.922177907 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.979089406 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.918600925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.908698904 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.957642528 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.920049396 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.923999351 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.002558738 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.985787352 seconds)
  done (took 36.616599801 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.985964381 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.913335819 seconds)
  done (took 10.731633032 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.940071857 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.930067938 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.945687143 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.932092258 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.927292074 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.931142385 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.943545631 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.908834873 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.92172948 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.937723096 seconds)
  done (took 71.146282626 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.913938864 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.910229123 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.914010518 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.908468675 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.902642063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.906028274 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.911435011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.902833394 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.571200836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.945861066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.918692954 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.913310285 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.909784868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.913685459 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.909446445 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.933890062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.016827349 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.909764748 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.905922209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.91588799 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.910848608 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.978322573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.923566079 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.911853067 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.940511011 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.570824473 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.917036386 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.916280538 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.013220042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.908222164 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.909383704 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.909875084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.916379734 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.313733015 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.183281648 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.911680576 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.924061596 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.918479171 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.907723384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.045322635 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.911644881 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.917608279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.65979496 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.161709146 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.016580459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.954671382 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.217940032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.926976159 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.914178618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.941409072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.91539727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.912541096 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.924096373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.405485821 seconds)
  done (took 134.578230084 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.908961834 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.258005754 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.078252757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.908323634 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196400198 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115969266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.906391431 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954488567 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.907184388 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141890227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.167253763 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.014950744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.908775993 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.906509592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909440051 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.903462773 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066736734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.982108665 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.909241533 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.905733398 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939704137 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151728691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032231151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.910274653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.939211715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.12345232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032103357 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.013968339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.697034404 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.905957541 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972826543 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.909607991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.909431486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.906865044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.066065039 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.005687091 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997783728 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.907722865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90888954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.907781657 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.57816723 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108746027 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.00471172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052466107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.110035163 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.114811644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.694925819 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.908878301 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.648674037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074682834 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.138148434 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.146339895 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.032827856 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.91001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.439374289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.908849276 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.908609571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.161213452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053342955 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.008583575 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911362856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.910895219 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.906805219 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.155658324 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909880943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.00639332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912120955 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907837378 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.008862456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011612938 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.049820748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123299823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.943470951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.852609078 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.451120022 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.161786967 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.975393048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.16157006 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.91082214 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.908943923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991946324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.752390313 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.167131913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.162198469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.164262205 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947106922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.636453082 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.90964566 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.139961958 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.134847637 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.172941963 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119891814 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.151799049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.240876049 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.909583163 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.91040891 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.131010764 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047041468 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.912455356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260240536 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146059094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.463180187 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.9340693 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220038274 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046463891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.912322097 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.555128932 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.910112521 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.144313398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.953551146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.91213599 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912258864 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.133477279 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.904939902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911952868 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.562588517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.976943908 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.915954464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14832889 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.915966208 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18399939 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913421631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152411379 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.939734719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.946303604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.146266111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.120786578 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.915455287 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160786189 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.16074031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030365442 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13609808 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.609288867 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.913992664 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205245344 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.913842645 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.91288983 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.085570015 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.913858665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.061593889 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.915771003 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210814134 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938534843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152183045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916630454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183431846 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.949901666 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967939112 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.917326218 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049804126 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.91720881 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.842476634 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.076896457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919587678 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.914327517 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.716868196 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.913612958 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.069379188 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.151220348 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939579165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.98950143 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586253703 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.91460731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996735578 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.939741913 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.308328957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.912434446 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.167234556 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.910821052 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.911445758 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.909186936 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.156391258 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105756091 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.914933267 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.907042091 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.817090916 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.907028295 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.90629187 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.09049009 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.367231406 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.903483222 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109509231 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907160257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03448403 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.907679883 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.985171986 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.251257122 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903751993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.901742405 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.904051089 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.907526098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.898656076 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16743481 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.926400593 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.421993459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.041766504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182892717 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.213537146 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.15426206 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.944418325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.902847506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154959091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.900386486 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.961772119 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.902267225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.920188613 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131846997 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.901128554 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112500309 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.17771989 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756619454 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946314888 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.896569258 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893708332 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.893740857 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.043837267 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984620707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899806227 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.897208854 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011413176 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018180632 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.105842841 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.896757875 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.950325954 seconds)
  done (took 912.488230014 seconds)
done (took 1236.018570615 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.893762884 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.890809194 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.878845323 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.89353996 seconds)
  done (took 29.372678404 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.902112515 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.897875831 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.901484847 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.898100342 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.898650158 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.896598426 seconds)
  done (took 13.209653372 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.352401039 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.89146174 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.891353609 seconds)
  done (took 21.952219474 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.965909675 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.277727075 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.00167808 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.318033343 seconds)
  done (took 10.378375292 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.901152798 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.901180749 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.897815231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.898713616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.900499985 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.902099306 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.897053527 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.898295603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.90487865 seconds)
  done (took 18.917487762 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.89295699 seconds)
done (took 99.541426753 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.06015949 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.919952516 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.232533056 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.994111016 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.905956739 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.03374798 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.999606787 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.151444629 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.909364046 seconds)
    (10/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.123039649 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.941441396 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328567075 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.912833674 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.012245135 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.359780342 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.157173126 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.929910081 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.544825816 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.094346384 seconds)
    (20/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.023380284 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.927882023 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.103454124 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.267631005 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.087282325 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.485078293 seconds)
    (26/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.016492717 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.926302314 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.755710056 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.928415672 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.055455055 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.021117477 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.958876652 seconds)
    (33/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.03288042 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.956355022 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429304953 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.8145613 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.018174852 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.102696791 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.030493413 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.916127411 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.425057804 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.097904647 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.078813776 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.222656264 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.032545129 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 2.147533673 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.945588655 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.128997128 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.262343219 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.132685424 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.917262978 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.659828386 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.917372838 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.200204028 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.58555724 seconds)
    (56/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.452591754 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.936155937 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.990821556 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.094938975 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 4.828842704 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.948288074 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.839211829 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.072136588 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.925223188 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 5.655789749 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.021660895 seconds)
    (67/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.93809899 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.929608925 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.051762528 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.218894747 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.017228547 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74335761 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.609376209 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.930923086 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.172722392 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.377897798 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.157804611 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.111307473 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.330077538 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.950992888 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.660620301 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.330011186 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.028561861 seconds)
    (84/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.996961116 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.929657493 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.727487259 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.20337957 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.004285967 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.103865901 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.950300111 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.163473646 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.246885254 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.919055882 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.021087667 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.995630838 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.029494306 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.916762437 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.340496671 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.962014638 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.290472206 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.018098014 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.017869804 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.631165674 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.00934858 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.632515671 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.939701539 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.304810498 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.951887974 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.000431136 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.366282775 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.124739078 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.912351289 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.923632718 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.513142887 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.217870789 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.236600911 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.455598589 seconds)
    (118/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.070372965 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.17097899 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.933683039 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.371596746 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.209424529 seconds)
    (123/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.99731205 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.931134408 seconds)
    (125/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.864549947 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.044755378 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.026243247 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.13418011 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.960837084 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.028285569 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.24440906 seconds)
    (132/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.129812174 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.870247229 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.109496582 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.027827621 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.182215641 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.314383931 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.070077917 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.211471383 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.005987617 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.191030161 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.313040708 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.028166543 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.938292204 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.494573714 seconds)
    (146/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.072991992 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.873261717 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.190465697 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.889050031 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.917877507 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.71106708 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.934142366 seconds)
    (153/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.091995452 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.967908243 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.983002899 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.021110192 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.00092641 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.960443856 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.355332011 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.075969903 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.750851159 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.074207579 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.106872224 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.961314221 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335368325 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.93312142 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.271003372 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.929653863 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.956011101 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221467497 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.021577656 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.949009205 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138494057 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.002782902 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.181265163 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.953153943 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.24102131 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.099452046 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.289770533 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216383334 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.866777028 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267223001 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.932068935 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.342286581 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.099916519 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.266947491 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.955259402 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.913300683 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.257062082 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.021993655 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.926590586 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.008065552 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.363119423 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.939250486 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.05411944 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.918297486 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.017706939 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.258546822 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.546685014 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.116708826 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.36137393 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.924745178 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.058294889 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.288919305 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.046607045 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.822748092 seconds)
    (207/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.10456425 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.373133041 seconds)
    (209/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.991482105 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.985760703 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.904763852 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.098805124 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.941503342 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.943045112 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.320385437 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.199412569 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.078163626 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.038666323 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151594526 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.344605294 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.048924906 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.915432258 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00304357 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.911022138 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.756818366 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.979493907 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.113579892 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.046458387 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.064985841 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.768864651 seconds)
    (231/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.366009377 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.857761943 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.17026503 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.917463456 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.21226061 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.046015336 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.04579073 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.933168156 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.836043236 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.00022745 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.907377948 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.28928155 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.295105363 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.919898782 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.26584637 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.069121062 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.920086 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.306883757 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.064844034 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.199151742 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.45644788 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.068105933 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.098387698 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.906088905 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.026191383 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.954260017 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.116904715 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.233263897 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976389435 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397257134 seconds)
    (261/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.033657179 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.009372982 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.908727711 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.171006058 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.276790636 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.498192366 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.267858339 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917285371 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.907303478 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.245710725 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.222920137 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.241995655 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.925597656 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.848903851 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.169919015 seconds)
    (276/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.988822537 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.26439488 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.002966863 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.147498865 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.592647182 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.05084477 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.922177463 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090642605 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.895792796 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.632914413 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.440329639 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.014833898 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.705690509 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145870362 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.000623614 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.047236874 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.209359275 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.948155202 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.095542329 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.974758753 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.916742861 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.088868827 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.024979928 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 6.907652464 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.939590755 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.040601493 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.125384227 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.937390339 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.909268533 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127164468 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.96496015 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.059184493 seconds)
    (308/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.346029226 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.940167997 seconds)
  done (took 1024.691241965 seconds)
done (took 1026.599440159 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.940983904 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932870718 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.91876417 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.940519416 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.030037996 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.944488586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.928808499 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.922056717 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.965537463 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.968903666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.916414574 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.944197326 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.918831365 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.917688869 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.917281479 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931531742 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.228703801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.94706906 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.935671767 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.926686807 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.936351395 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.916653738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.968229629 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.944886806 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923719163 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.921010682 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.921564666 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.939118478 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.032958759 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.922356592 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.922482212 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.931244427 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.230707299 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.947978109 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.915054248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.938485787 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.932759136 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.930328554 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.925336504 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.953733206 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.313942083 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.95625862 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.920990418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.921547996 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.921044645 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.925663564 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.922310436 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.926875619 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.932639089 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933296162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309653677 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.970719959 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.922998827 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.921375981 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.931521225 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.921843722 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.924903971 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936703282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.938751531 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935405516 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.212383297 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.95000104 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.918236242 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.932238185 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.92280533 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.339765711 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.948042804 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.917854822 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307752303 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.955230817 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336688663 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.960289579 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.916688317 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.926816525 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.945914923 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.225081712 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.939417626 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.911399848 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.920867395 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.908498121 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.921246558 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925458813 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.915714247 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.910145715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923402789 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.938106892 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.920858257 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.917120203 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.918478866 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.927454276 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.916559542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.920833083 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.916706282 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90145404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.915757041 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.910811692 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.908920982 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.911891341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.908604355 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917001275 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.295762571 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.956658698 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.902098065 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.901423363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902670419 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.919490277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296243726 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.942801261 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.92869317 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.95219642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.907913959 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.198069939 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.936905951 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920204718 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.914116825 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.909583643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899826891 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.203283161 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321072376 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.956532997 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.90478528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.900145117 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921769432 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.907895708 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.903176641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.216163766 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.933210717 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919326521 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.019006534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.913884044 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.932273497 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.897428257 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.906653071 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.928898441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912396146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.925123364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.897964042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91036637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.913960648 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.891027824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.905874869 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.90498396 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.895802309 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.900995769 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885707937 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.922208586 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901840548 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903740464 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912535194 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.009062798 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887941354 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.181215181 seconds)
done (took 300.133707771 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.9577134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.884946615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.983908867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885000548 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.964812314 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.968294494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.882962096 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.881608559 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881758675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.254787009 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884623395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.884853072 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.878210072 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885908103 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.966278054 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.887353371 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.883671379 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220994329 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889415418 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.958788215 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.883076045 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.888895145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885683205 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.279381345 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882795589 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.881444872 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.959676803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.886526162 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226247198 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.888000954 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.883296146 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.225494195 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.977885103 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.906263017 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898480397 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896539305 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.971944667 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.892136372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972180443 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972055211 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.988213157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.932086893 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.883262638 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.887138307 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.890238185 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.893586756 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.884494892 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.917892166 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.890595555 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.886421519 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224178942 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90017408 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.885021513 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889278063 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.885270994 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.921738807 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.888010777 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.894188811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.979263245 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.893169664 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.951182915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.283349747 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.262564381 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888131578 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.888116008 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.887447838 seconds)
  done (took 185.527430051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.956625638 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.965292982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.95536607 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890963502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.93636328 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95637054 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.890472668 seconds)
  done (took 15.353795019 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.89382857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.889695563 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939513563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940181439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.890617169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.037935493 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888505718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.903256746 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.887230185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.941188561 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889774958 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892547272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.895717654 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.885618483 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.938357832 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.89962794 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.00550877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889900137 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894004869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.041574688 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889412839 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.898797095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94291849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900137065 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890925777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89674936 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.473584146 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894058318 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888878222 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.890546765 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886097354 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.930561953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892495163 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.890436586 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886317165 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004161566 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.892013487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886258969 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891384952 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.886672814 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.890883193 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.890289044 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.889480905 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888154738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.891337813 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.912070646 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890434923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.890717251 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.889546425 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890025145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.941281668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890723569 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.886819067 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.887861823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.945272313 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897282774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895678834 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.887192524 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891909646 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888108664 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.041245179 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941613885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.890840005 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940683901 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892672641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.893055831 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890242403 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.893448311 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987505955 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.891868349 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.941164761 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892444581 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.051453027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.915913769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895682427 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.894784308 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.89577189 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896790205 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.892955345 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.898230193 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.893464743 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.895001961 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.899501168 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890006931 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89000925 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008787125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.001648668 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.89118004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.906347919 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.899471383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.889042471 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.945132977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.892998226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.890142243 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950908223 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.009586978 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.947625925 seconds)
  done (took 207.938034319 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.898112612 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.899758606 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89567798 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.91042621 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.892210632 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.893633943 seconds)
  done (took 13.198570868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896888372 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.894309509 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891940886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.893361298 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897445232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.895814811 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898833843 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895714771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901833096 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.894331826 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.895714306 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894838994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.895420775 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.898589744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.89819019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.89514932 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.898217219 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891669973 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.894352426 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897497644 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.051036741 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897993154 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899378745 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.895701845 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.899720386 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.894327382 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.902973818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.895563677 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896188667 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.908757273 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.902537818 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898042123 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.895151628 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.901012908 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902218106 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.90357995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903908227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900439861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895604321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899249728 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90114109 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898620367 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.895645871 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.895011711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897608622 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.904176634 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898521338 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897006807 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.896296401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.890718527 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.894575557 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.886856286 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.885439552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.88608706 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.889465374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890875599 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891978021 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.88924245 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.887665832 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886332907 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886058566 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.884837531 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887453647 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.891121087 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.88451779 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.886730168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.888823416 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.89409565 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888388543 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.887002818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.886227149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.884069062 seconds)
  done (took 139.387631541 seconds)
done (took 563.228722054 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.043545594 seconds)
  done (took 8.843417758 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.936834132 seconds)
  done (took 9.042985648 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.705153309 seconds)
  done (took 10.519955833 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.90691314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.917772703 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.893235003 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888921877 seconds)
  done (took 29.43978932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.939928564 seconds)
  done (took 8.750590602 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.903785813 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.879695424 seconds)
  done (took 15.618051492 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.040351573 seconds)
  done (took 8.843712669 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.317649393 seconds)
  done (took 9.146167121 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.897219865 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.910238144 seconds)
  done (took 15.625395733 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864985887 seconds)
  done (took 8.668517351 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.323581234 seconds)
  done (took 11.206124875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.90369449 seconds)
  done (took 8.807622152 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.885822456 seconds)
  done (took 8.688755565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.011062036 seconds)
  done (took 8.814362796 seconds)
done (took 163.818160972 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.883399461 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.877732167 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.880719747 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.878427018 seconds)
  done (took 29.323217879 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.916910773 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.917208621 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.920437442 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.92818731 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.921039794 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.919101148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.911398582 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.91154773 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.92883877 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.924226621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.918862671 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.920161672 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.917453794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.910973413 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.921133858 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.919581317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.929406595 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91998723 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.910011182 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.921345817 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.886076128 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.929398951 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.922107919 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.885781621 seconds)
  done (took 47.815655382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.080692837 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.956958644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.038860495 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.936689834 seconds)
  done (took 9.817977061 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.936585725 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.938752855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.950378172 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.988887677 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.012895736 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.949509775 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912315388 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.907872495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.890854745 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.932197032 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.007375418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926803358 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.021869359 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.881620906 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.066538615 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.879920575 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.879860533 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.93189854 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.983213465 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.994304181 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.877128895 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.926793693 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.930405652 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.927406731 seconds)
  done (took 48.460604677 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.871672458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.879976544 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.87827019 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.874794072 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.871294551 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.868772849 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.877482159 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.871433598 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.890115231 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.873685895 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.872332202 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.868794227 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.869041739 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.866243768 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.868367987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.88177376 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.883706876 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.871982459 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.875312457 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.878061964 seconds)
  done (took 39.285219887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.865512809 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.719838702 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.217941931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.123006417 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.868837827 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.867869975 seconds)
  done (took 31.449866352 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.884167822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.877052455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.872798839 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932134795 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.016424085 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.881388422 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.873994013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.883326874 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924821076 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939343146 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.894852899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.907638511 seconds)
  done (took 24.67723837 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.871766267 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.875067123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.870682073 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.889591882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.884535493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.882967395 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.879859923 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.864131845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.886310975 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.894544955 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.883006281 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.88528738 seconds)
  done (took 44.363382244 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957527072 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.754490007 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485688244 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580286537 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.403780843 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078594988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386888873 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042518253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.873103562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141413635 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.456160546 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110749401 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120558183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869394305 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941500367 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.324078847 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162506183 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108596948 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89406919 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6133479 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046867015 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.562946469 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649789328 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053922107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137426105 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.05984258 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.189175625 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.880914068 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055942146 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965171924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938249391 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931004701 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203251495 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134159626 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061472254 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94071761 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582630841 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.647643693 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.924514114 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.627290721 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.620061745 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.06099812 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939211646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933808683 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86503028 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.568502365 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10798084 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.936705748 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.632931126 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93369921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94135458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023294163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.935709604 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.74557844 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884603061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208628176 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.927142513 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936479254 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49994845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009470511 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.648182176 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.872568903 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.027573275 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672065434 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401096717 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.089546548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.939021791 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940008667 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867974623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.640395973 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058536548 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079609109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.954596109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587450704 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229276007 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.583841551 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014079949 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237677768 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824820086 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.871349673 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162509082 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890640726 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867269298 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.791781132 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.872801988 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194488058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971112273 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.567663702 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973412177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109816397 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950786395 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957670712 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944702385 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158099342 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.816951053 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937249686 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.466235199 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224293248 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956370134 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118242942 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870905922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.939027592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191761137 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.148782274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295130316 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40046064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100010865 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938200448 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.027188726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.951372496 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947092336 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.225472373 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002741094 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.023006059 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077981568 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899668169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259162475 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973092631 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.125915111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.564006307 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211792161 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.263709776 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197754652 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031111809 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958394572 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.952437104 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703867701 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574171279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.17688877 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.954090806 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.562075179 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965424405 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.962078099 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886912679 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.585530867 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558740824 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.057261976 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179989697 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.033820851 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228206442 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88666367 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101554342 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072713099 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.175764854 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.599229665 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.030771895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219285491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423525573 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295291494 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097762467 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973872294 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078415523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978275956 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.381841874 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352404928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.963628141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.961365425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.699791297 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.039508115 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968139409 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.968222287 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77032371 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24874941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993760929 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.962679176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.898823182 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.97939652 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051935134 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972036732 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972843105 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.497063327 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717580796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.977262248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.646445157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188967238 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973170396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.690012201 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157962218 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.056310505 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247065077 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036840803 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.902971425 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.67180654 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.672729633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971461463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905721645 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973520214 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980382517 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981653464 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.170011332 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264676148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026993591 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.688392527 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.087213715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983447278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.979322181 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975412444 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.498345344 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.056467228 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.55690667 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109070217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112206194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.991774845 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.914096049 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.983628665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986581505 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.979669078 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.933146153 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033069897 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.722413506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318143928 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244270414 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63189187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005387223 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.681267952 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.116466166 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.004283226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.519316631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.054260619 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.095781224 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075613791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.005141654 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.666836126 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773035075 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.563519095 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309752186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318258143 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439449318 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.521727935 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.333048136 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174986337 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231078652 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.523902848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057822714 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174370586 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93947873 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082046936 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.638797529 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349190981 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011051414 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222293227 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382661851 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.590190442 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157840294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206567245 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032203719 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915130143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04090141 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.518115227 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154334016 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590217326 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226054964 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167044407 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543103078 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.105736805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.00194186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.449122121 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075437666 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.706189571 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.359554664 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.634135169 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.597671171 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372344486 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.996447945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442192576 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375384047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452749119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.089775056 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932506436 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008635375 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009879897 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.999037564 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.979649126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.90465063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.270037831 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006545703 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233787825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370553152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284446716 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.909430471 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.003513838 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00077429 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292097059 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.762510766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243974984 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.424651858 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.592300674 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004175076 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.932355711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932731702 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.700864823 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.009347316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974823139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218473805 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.107198553 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954519693 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454658813 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325810916 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254677797 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.012183205 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276216188 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280987196 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.736718128 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02979921 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.101992614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.532531097 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.75927041 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221976076 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236322017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799579985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229127317 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635527376 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.97018883 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.002246034 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215154914 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219780286 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.615976562 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248235434 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.72516875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.010009792 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370097068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064810329 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.602801638 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218811224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.096518166 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012501139 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084074907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013296383 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.012606777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012677348 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049334619 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609671316 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.133995294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.014817446 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093030943 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.101683646 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.591500065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.012257187 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279691256 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357626179 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34850208 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068860983 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.004164986 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00498343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935914774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13942233 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.450234806 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274902925 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132725281 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.141652134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028655875 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541307257 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373395694 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326696821 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278908403 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.898140576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006666053 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093929364 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.229013849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014040664 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.214501616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229246713 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314684219 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469154214 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.234943358 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29179191 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277554017 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381712129 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.005515865 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592440644 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.015232698 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509962361 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.040409944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604776884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289962024 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01486441 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254282389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025715869 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.207107673 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.459232287 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.760590296 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36886993 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.988287309 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059465905 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2831431 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403658518 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324333486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086409772 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016166498 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.702739749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144468851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.944177817 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259354236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.009693739 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216651907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.717368608 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016495752 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296555419 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322622021 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.004252987 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.96815464 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057682135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.014837509 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230181348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286693661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254762703 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015714401 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.015499491 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.822808883 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300449682 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074269581 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939801765 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.009703127 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106081237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252390558 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028031456 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.523149879 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.710364354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323826617 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.923580422 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027859442 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513157547 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476247333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354431848 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.542576206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250632476 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.563666717 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.947847834 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.39429871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.012937106 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486465003 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.397474242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.012220021 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.587129232 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129134147 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.282408291 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341169002 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.019068494 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758062184 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.053435177 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231878071 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603077457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949879326 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.011024504 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.070723534 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.011139322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.140133613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020195283 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.99881353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954854145 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.858246135 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500404449 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.01348394 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.004093878 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.538984737 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.658390594 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129499585 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165846604 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020938579 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.731840145 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.303186312 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264146317 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.600985934 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.091129306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.012513817 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.013038235 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938941809 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209458796 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.209602023 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308301774 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.443275546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.133101016 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013924864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.224794008 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222386888 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.608731596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164649882 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475355142 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135517426 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.938628884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.723545912 seconds)
  done (took 1731.57829343 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.010874315 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.018955515 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.021408681 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.051094002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.024769368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.023179352 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.072665932 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.10142708 seconds)
  done (took 58.253897947 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.010185023 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.195512915 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.019500555 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.008907674 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.03177628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.012227809 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.199174308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.022767354 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.026863518 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.019293129 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.012806084 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.01101888 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.331590324 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.038271701 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.011480975 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.020786017 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.025865584 seconds)
  done (took 76.934021997 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.012410615 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.193226274 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.034260347 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.035601512 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.888022246 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.012548152 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.970805719 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.034417906 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.017067303 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.183651991 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.344620022 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.01499376 seconds)
  done (took 91.670663793 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.028132645 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.019193382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.017730489 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.018765294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.019499555 seconds)
  done (took 12.041745325 seconds)
done (took 2247.493274141 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.258097566 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.205879319 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.251742397 seconds)
  done (took 6.391439194 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.166658477 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.212578144 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.334457265 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.339120824 seconds)
  done (took 10.992265591 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.317821825 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.39202865 seconds)
  done (took 6.64250468 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.345454874 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.036986735 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.406763666 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.014613737 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.015127958 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.016855323 seconds)
  done (took 22.984224856 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.023670811 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.024715502 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.022230572 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.024162067 seconds)
  done (took 10.031506175 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.004233292 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.735630533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.002987089 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.020038494 seconds)
  done (took 21.697279877 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.776993946 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.150447075 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.766136529 seconds)
  done (took 9.627698087 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.6175478 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.944309622 seconds)
  done (took 9.497546826 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.178949255 seconds)
  done (took 4.115139451 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.052201976 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.292426105 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.546059515 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.575556224 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.644895454 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.855002291 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.321384598 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.250377678 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.456846483 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.477870098 seconds)
  done (took 26.408730494 seconds)
done (took 144.367450247 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.363263542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.041524626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.224891229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.372255796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.272975197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.222571278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.244955712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.36752587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.049645593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.040000509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.376512922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.262593651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.185896454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.036472971 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.19363738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.041748048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.245917233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.379036564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.05783238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.280547655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.249810822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.026994734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.22204317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.036517533 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.248965459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.174146429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.570633223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.038517763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.201347805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.581645292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.178375723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.420648549 seconds)
  done (took 173.143322533 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.022479294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.023159693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.022605007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.020791791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.618564012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022712282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.027177162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.023706302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.470634958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.467330609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.022919075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.610451068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.027313965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.02199311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027675116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.021304331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.645492639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.024580801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.024732849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.022841944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.0227587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.442066854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.024427193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.442771319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.641025024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.026348857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.02565098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025862069 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.02277625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.023719244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.02525015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.029363961 seconds)
  done (took 214.862158041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.922260797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027342549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.02449595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.022349174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.025405324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.024311475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.023118393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.022192467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.644086124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.63575287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.032202396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.039179907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.038778512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.022095587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.041243732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025571127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.044131462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.013319228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.044347079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.041667916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.046782052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.653930154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.045442626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.649654911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036937868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.037283115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.026502611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.042651751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.044436344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.039954385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.042359864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025991504 seconds)
  done (took 225.357824634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.286052369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.031940258 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.031254214 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.960456437 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.032823019 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.032762883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.028999933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.282946932 seconds)
  done (took 20.65015531 seconds)
done (took 635.958046966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.491218391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.331104001 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.209466859 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.05497941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.285141277 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.089423331 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.05128895 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.11988495 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.690569226 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.125989041 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.721239007 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.074541835 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.807501008 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.081949414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.17437008 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.108064813 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.637178097 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.736988831 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.229171098 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.128897428 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.223529909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.98688546 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.134972975 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.712465988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.824338775 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.045853694 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.112608564 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.641369867 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.063520001 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.212093753 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.762763401 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356030665 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.068493503 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.047793461 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.105743154 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.089404753 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.326623041 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.062620068 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.174034966 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.789576981 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.118298913 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.590995141 seconds)
  done (took 109.542506528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.020138523 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.019806079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.018228485 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.019518735 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.021545493 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.021172179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.020845835 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.024191702 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.024141723 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.020409816 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.020673294 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.021069212 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.021935878 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.023593036 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.018439179 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.021030637 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.021854141 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.021942438 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.021701854 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.024576953 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.022568591 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.02029378 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.038958732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.02387082 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.024101559 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.022304957 seconds)
  done (took 54.53235669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.037174071 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.199571119 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.28592967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056453534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.03661444 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.038752915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.053858603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.038328791 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.037998941 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.035184265 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.127713756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.042058827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053797523 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.274454307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.052863187 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.035073844 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.036015894 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.038198484 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.204428196 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.050881921 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.054248632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.03915881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.054057308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.047393787 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.040483138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.035425881 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.039092045 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.467279365 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.044297554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.127217239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.07712571 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.058539437 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.412771175 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.285482178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.096258972 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.044270155 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.037384212 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128980061 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.04067698 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.038603678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.054246878 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.041503249 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.276461284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.532261007 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.053106051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.036910979 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.47517543 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.140391969 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.076961191 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046351965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.281008228 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.055884999 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.039585017 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.037787586 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.073194444 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044308825 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.03791119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.344983627 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.048727567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.053981208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.039917444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.038327194 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.210483414 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.045438954 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.200664009 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.046777232 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.044004906 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.038322284 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.280733183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.059362949 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.533004915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.051501876 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.040397705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.134639758 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.206346877 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.502240659 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.050197702 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.209854227 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.432414343 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.061702423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.045193481 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.456531787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.067678476 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.046791696 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.040331382 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.040551957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.03920134 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.083149085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.054081538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.469178388 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.539140944 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.365447011 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.065172793 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.053181287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.040083942 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.348923617 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.047631386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.038597594 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.282297362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.545561593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.052851953 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.044933202 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.52148773 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.055163659 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.058481025 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.051106527 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.284119215 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.054861287 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.082530445 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.039497108 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.04638458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.042569766 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.057911461 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.045978061 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.039937366 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.519255138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.153321904 seconds)
  done (took 251.646749175 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.03670787 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.053767037 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.034203162 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.058595444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.033883193 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.039617247 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.034776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.035372801 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.038011729 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.034203114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.034591429 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.036390936 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.035719144 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.040916026 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.592647551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.043089732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.640543206 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.036112905 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.03696952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.049663641 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.720829989 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.039525986 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.037082348 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.041653403 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.046877182 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.034742606 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.037537794 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.050641338 seconds)
  done (took 172.906695689 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.043088807 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.221315367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.062995189 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.082122227 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.048610329 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.038728914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.063950323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.05923368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.04744744 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.038796953 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.037931236 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.103336937 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.051602395 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.181031473 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.073741944 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.074649606 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.146491211 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.049565208 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.039996331 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.039430007 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.071334105 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.037604995 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.103353544 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.168207164 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.059847569 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.158602422 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.046869284 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.042735924 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.042244859 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.159609469 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.05848748 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.102572241 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.069924136 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.059424035 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.164676117 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.159007145 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.147099761 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.071584787 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.045005501 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.038595409 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.040754514 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.030728885 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.160307484 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.062191936 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.04488111 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148890462 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.061207239 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.045119024 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.050907027 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.03944312 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.054738553 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.061453104 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.111159427 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.175121269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.076046929 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.066673252 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.067042553 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.326652152 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.056947729 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.141334244 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.035591597 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.160169305 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.064607597 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.030763375 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.044478286 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.048878863 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.071623214 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.072702469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.144638128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.052156556 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.141835894 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.078374727 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.047927379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.041901354 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.045205655 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.160827287 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.162620164 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.080026285 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.079273955 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.074637128 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.039032386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.043623531 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.032448463 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.061410768 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.047988853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.159849887 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.161223618 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.051800069 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.046509744 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.045800166 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.047458456 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.070611768 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.168303726 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.081311937 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.138759725 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.113123525 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.120161546 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.058927707 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.057495414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.049485799 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.107773346 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.059453974 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.055631481 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.376755639 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.113748328 seconds)
  done (took 221.032025414 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.527309089 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.095770727 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.102245937 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.364101625 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399145337 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.987224944 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.09221456 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.095772093 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.120590742 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.284233274 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.15799705 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.114422397 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.080595014 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.067645383 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.097671405 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.115259768 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.10455905 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.430842192 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.194337061 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.238222021 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.074685069 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.374872434 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.366708844 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.483668134 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.131373608 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.42439621 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.751158309 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.238269912 seconds)
  done (took 66.478070047 seconds)
done (took 878.084153254 seconds)
SAVING RESULT...
DONE!
