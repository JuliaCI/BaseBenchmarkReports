cset: moving following pidspec: 15270
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.339636632 seconds)
loading group "string"... done (took 0.53705949 seconds)
loading group "linalg"... done (took 6.713208359 seconds)
loading group "parallel"... done (took 0.1543665 seconds)
loading group "find"... done (took 1.162119357 seconds)
loading group "tuple"... done (took 1.750586036 seconds)
loading group "dates"... done (took 1.183179683 seconds)
loading group "micro"... done (took 0.290373191 seconds)
loading group "io"... done (took 0.899336508 seconds)
loading group "scalar"... done (took 36.386597327 seconds)
loading group "sparse"... done (took 10.917482833 seconds)
loading group "broadcast"... done (took 0.908766946 seconds)
loading group "union"... done (took 11.780489209 seconds)
loading group "simd"... done (took 4.142116799 seconds)
loading group "random"... done (took 8.512249406 seconds)
loading group "problem"... done (took 1.859519939 seconds)
loading group "array"... done (took 19.64448501 seconds)
loading group "misc"... done (took 1.639093327 seconds)
loading group "sort"... done (took 3.035030312 seconds)
loading group "collection"... done (took 16.907536419 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479508513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121745996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113345895 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116868242 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139087428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114392133 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121729686 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083261966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870722382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138568505 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117396941 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407693379 seconds)
done (took 5.022012034 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170354079 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081293458 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08025663 seconds)
  done (took 1.317438609 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063954026 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120603852 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065226236 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066145844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065856447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065133237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068360889 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065135919 seconds)
  done (took 1.672698824 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072064473 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067247332 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067230663 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066927717 seconds)
  done (took 1.432307375 seconds)
done (took 5.823774494 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756141402 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19819447 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181148384 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389790018 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125462087 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160458289 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65653566 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301854131 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180907778 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079220146 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101429304 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318009926 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105246023 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63662978 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079006564 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088433395 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137526469 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418635519 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066267869 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081159543 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087896146 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126700319 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08418941 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074722054 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143116307 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066812063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127230415 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079656969 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065737918 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205588545 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171948803 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654160369 seconds)
  done (took 10.145913681 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095293841 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096107599 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067893224 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122270588 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0946795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068695747 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070079679 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066359905 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085476295 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126384223 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087300588 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099787253 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064701075 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067869212 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083571701 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203076626 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078780763 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080192974 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069484575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07443143 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104844823 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077001367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076728902 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076353744 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12737226 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179649706 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095397157 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096655505 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065810985 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078979836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114214349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127201281 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064890021 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065513065 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122264374 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093600436 seconds)
  done (took 4.562025414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.896647822 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137638343 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08881952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159819876 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066725859 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104537539 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064483797 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082833545 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196430257 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.038507986 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.426771742 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083583895 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108806501 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083464571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066544895 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0673624 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065693417 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343194892 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107933736 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111082676 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082708349 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072931129 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068454787 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360111411 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065724355 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065351861 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067073794 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057831926 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090212213 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110858538 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067425199 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.967791612 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114873693 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065809486 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099832563 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160851553 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089614236 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131397076 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063842309 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062445672 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063979527 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144863034 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06242629 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071789482 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064379103 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080716253 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100704044 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.232753317 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068285274 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066325235 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162423702 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065884279 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082875857 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.698247077 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154346227 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077774261 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065520746 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242481258 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084290962 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065921838 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063282424 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185825208 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129472679 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067390352 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065515459 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065087786 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068224993 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361150972 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068293011 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.88115191 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069601049 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075786306 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068743982 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065705873 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072448443 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071707376 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084677062 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065899354 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066883293 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064961064 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064587641 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067014379 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084296623 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187258237 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065520236 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066611938 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064461837 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089237796 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09608742 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068116588 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064890136 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099131356 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066895456 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066505181 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099986756 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065578713 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082468874 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068361447 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111983082 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065495538 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101713448 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066043608 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094525061 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067333142 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097753113 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07577484 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15968402 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.213286968 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064321601 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064024969 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065878038 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067597733 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066630714 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067617421 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078238298 seconds)
  done (took 19.910517693 seconds)
done (took 36.672472645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272040911 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073992937 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073751555 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073579184 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073714893 seconds)
  done (took 1.810434052 seconds)
done (took 3.031888081 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118470989 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097142273 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063633109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093776606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06303025 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098417478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097804758 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080481649 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097818079 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063197162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095201274 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063177062 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06324174 seconds)
  done (took 2.340427008 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081711462 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082816396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068503846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081449402 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062845731 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080953121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079607772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087156686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079955768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071166994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062602529 seconds)
  done (took 2.057920237 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08036216 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082023404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068218583 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080356514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062652976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080217625 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079821363 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084114409 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079911317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07188889 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062882496 seconds)
  done (took 2.04902956 seconds)
done (took 7.660535159 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076595784 seconds)
  done (took 1.28510175 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.577919724 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.024391802 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08057117 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110113404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181165664 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117718123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272977514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085287495 seconds)
  done (took 8.838421799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100659452 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068802798 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067461911 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067678611 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069469124 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068446842 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068148827 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071067881 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070026465 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067555707 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069671522 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070868425 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068416747 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067652579 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070620438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070665351 seconds)
  done (took 2.416692041 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09034813 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089373064 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072371935 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073798063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071032015 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070920072 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073449977 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07206139 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069617239 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070944801 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073416584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072193381 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070611556 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063492115 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072673105 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074660383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06990822 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07296029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073993783 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073575257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073186313 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063330628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070632844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072296525 seconds)
  done (took 3.0650153 seconds)
done (took 16.819893583 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110334888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071176739 seconds)
  done (took 1.398309831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079575715 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081120213 seconds)
  done (took 1.385909567 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080967366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064947494 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087520746 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076165379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065384663 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064699321 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085858787 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065167312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0650553 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065422199 seconds)
  done (took 1.947063377 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067328618 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076426916 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068727304 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079779908 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072189699 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063109464 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071402611 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066787203 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075870046 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062125795 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069823411 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080709416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069560759 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082736256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071385743 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06684968 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069004269 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066036283 seconds)
  done (took 2.505956306 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064857229 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065476818 seconds)
  done (took 1.359499537 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065886455 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062657644 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06561018 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065718969 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06248725 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061385673 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062138944 seconds)
  done (took 1.671548897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37145374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109167857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290083203 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069435062 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080327404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247666992 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064647831 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069359745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069243228 seconds)
  done (took 2.63870756 seconds)
done (took 14.136781125 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077187456 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083604305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092962372 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338250295 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091412489 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066422672 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112675661 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188813954 seconds)
done (took 2.288066618 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.203965878 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.558314534 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364255664 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193255447 seconds)
  done (took 2.348332252 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313260755 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09031796 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058186836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065445558 seconds)
  done (took 1.769099738 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064890156 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067691356 seconds)
  done (took 1.372601055 seconds)
done (took 6.931687112 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065737778 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064982842 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062871581 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084049176 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065108092 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062557405 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062604501 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062654993 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064595205 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064513576 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065663528 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065193341 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064773732 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065056127 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06258757 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062827176 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065063692 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062987183 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065196252 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062761445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062270912 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065294819 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065703165 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062434366 seconds)
  done (took 2.832362961 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081445382 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065355686 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070836791 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069901765 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069058436 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069853215 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07040639 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065564813 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070101851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067140191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068644617 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068738062 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066740382 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069071941 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06664998 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069020756 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069927147 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065392133 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066889825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068875705 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069658116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065126334 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068290981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070150979 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068774008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068448656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066755447 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065089271 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069882631 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068197529 seconds)
  done (took 3.307197477 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068336712 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062091371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063725888 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069800105 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062538997 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065051041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062359047 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062919412 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063373273 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062447651 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063679411 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062701864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063085273 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063431329 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063642997 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065912289 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078111885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063110818 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062527804 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063508388 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065807937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062681639 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063236904 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062269109 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062406719 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062810644 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063183012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062596444 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063540599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062529183 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065918688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066160205 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062348269 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069430573 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066027076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062678957 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066758793 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062126556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063398176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061944499 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06258966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062328891 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062595183 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069143399 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062610536 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064307259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062868346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064527473 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062838883 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064829281 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062111892 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062274017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064148 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063836233 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066429968 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062178181 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063102742 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06217905 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064049423 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062098314 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062229184 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062083404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064513597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063043055 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076497823 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069085386 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062064701 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064006652 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063343764 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064836455 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064236958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075053391 seconds)
  done (took 5.881351498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089212535 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197994624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064828051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064196711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061087976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064648228 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066949367 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062928664 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064705611 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068480732 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063499041 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064170728 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064294915 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075360536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063478401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064517044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068358767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060906607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063050432 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065992079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063514606 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065863241 seconds)
  done (took 2.850090635 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151985665 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069304368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104160464 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071358826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066429573 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071561995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068337935 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068904066 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068966105 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067335475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067065276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069087693 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066776938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066922943 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067328299 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066969836 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068944747 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066975059 seconds)
  done (took 2.599936218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07580762 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065519596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084766442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064986565 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064862492 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067651654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069495344 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072820976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067585024 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064906508 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073192124 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06743982 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067172207 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064911136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067082849 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065833764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067653662 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065010409 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072569492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069520737 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069306112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073050285 seconds)
  done (took 2.773713926 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078563275 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067291207 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081817549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06770557 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061523525 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063576943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069262817 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06534276 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069310216 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066594435 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065097262 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063714972 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06809451 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064878294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06838952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065058617 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066690011 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064898314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066827362 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061088068 seconds)
  done (took 2.600454662 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085622607 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066839712 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066901423 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074078399 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066883694 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066467197 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073935415 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066361081 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066480269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086316165 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066125329 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066069815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073839721 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071116891 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066004565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073972392 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07343577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073297081 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066044181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06639954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085924261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065927543 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073464023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066020427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066473919 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066343144 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066114839 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07099002 seconds)
  done (took 3.233139128 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065510321 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065077636 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062929667 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06271472 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063365085 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062567839 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062615902 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062610282 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065015588 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062718728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065228788 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065215507 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064824949 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065026861 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065337948 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065357512 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065095236 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062832928 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062756177 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063316907 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065064351 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065279812 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064959119 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062435317 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062260891 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064744392 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062613391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062623799 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065215559 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062515726 seconds)
  done (took 3.177791053 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074131715 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072345244 seconds)
  done (took 1.407037635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062344824 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078855507 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06235053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068946006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068522819 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065467154 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071845255 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068774351 seconds)
  done (took 1.803893948 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0804459 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075554914 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066377718 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078438251 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075459834 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081750099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130846612 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065941768 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071891595 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063697605 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078344016 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064136791 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07106051 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065726534 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070610132 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071189041 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063190357 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071502771 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06709313 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063689633 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066650114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073611726 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067320629 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060702374 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066519879 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086611544 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075595874 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064820444 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067884989 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071976801 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070564026 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059425848 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064973813 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065354518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06385302 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074585596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079706997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068379395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074036656 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065992976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075361421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060468137 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070138038 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071777493 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074896824 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06550189 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066033834 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060664764 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063714998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067865508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060995969 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065616176 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060144799 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074551262 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068920857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075399955 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06371164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066640373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067688319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068235715 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071495785 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06722545 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067485372 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065061282 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075197521 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069293085 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073682269 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060339992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05909997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06289238 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074329631 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087116713 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070845931 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065428266 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065994689 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062986604 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068229487 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066498841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071018545 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071803809 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065261467 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070690855 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072589919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065508811 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06827973 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073188554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063374279 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068026773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063719031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081176614 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064198435 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063447379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063272544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076234978 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068990812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065210892 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063626379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07253054 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05986904 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066046219 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06649797 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066492432 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075426022 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070099112 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070337791 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074623432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072500319 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065319615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067677007 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062183841 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065398533 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063892837 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071396454 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058799125 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067110826 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065205118 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064791737 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200587552 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064737779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066130571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073178198 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072005555 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064941001 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063236406 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069165804 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065734963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068709865 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073549359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064842744 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061050902 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060667481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069580338 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065843577 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06887874 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070187351 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069389401 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060456748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064826917 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07114858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075028947 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066462342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067155676 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07153684 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066701243 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065391301 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072197971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06832185 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065428853 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071580445 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066146391 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061175125 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068608632 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068200476 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064752295 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06944912 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068589305 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068570358 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067129412 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064709484 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072832334 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066386468 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065690569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066348667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064092073 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075840503 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067542665 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061217094 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063221272 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07506596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064626658 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06630664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065212767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06777439 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066617834 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063622758 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065028924 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067389887 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075696127 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069373572 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06638465 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070728314 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076411506 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065452628 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068159505 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065006881 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066552124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066115718 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074348833 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071128834 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070020971 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06803164 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062350147 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071328644 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072858351 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065152646 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063589407 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065153449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069730026 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071671558 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069665111 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066170317 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063815039 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066337325 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068858538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068413625 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065194816 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064614139 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071987582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063894614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072582971 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066628587 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075390249 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068923105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060849377 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068627814 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063656572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071641793 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060791444 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063620042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064573634 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066131631 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064488551 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067637173 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059847636 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072201964 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072723051 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065592501 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06442463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064808164 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071491477 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066273765 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068494376 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067826917 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070446297 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073982639 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063536241 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067365326 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074052886 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194207447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05999785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070653091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06503883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064424368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064479037 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064076985 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068699824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074413699 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072337098 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060022509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068483825 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064218544 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065615717 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061474501 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070361373 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069246537 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067325243 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072360302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067205147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066595196 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069450943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065824373 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066635132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06704028 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069334277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067015047 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068002154 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065867545 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068907257 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065370121 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063619061 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06888672 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066356899 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066832248 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07100502 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065243953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065506722 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067998126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066402431 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066566557 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066313161 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065326323 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068554723 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067673546 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066997457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068372598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061001383 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073486975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066186316 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073518124 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066099768 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062549935 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073060494 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067799451 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071151967 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066673319 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066362544 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067737857 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065797998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069242197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072263549 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064404212 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076742314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073655996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067156632 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069341184 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066833877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067287655 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064905071 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066936394 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066812939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065857003 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065318625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070376834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067652576 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065792983 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066900074 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065844571 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065493602 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066527897 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059837953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064547387 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065139324 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065015281 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074652002 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065706543 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064849515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064260273 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066255881 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064179079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062260631 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073700302 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074326314 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06555951 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072741287 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064524645 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066540216 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075482846 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059353771 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063327975 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063115047 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063394701 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072729646 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066374075 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0744911 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065683022 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064899559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063024128 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065748722 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064222887 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060117162 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063021564 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068556499 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064273721 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06387442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065487201 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067692672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065816637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074012501 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063587203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065233062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064017475 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061391536 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063394718 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.197945169 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069209979 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066493671 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063946893 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063325106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065533179 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066776613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066945393 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065921607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067431643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075357378 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065134808 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069267623 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068657245 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060787491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069398546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065436356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0667089 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065442855 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069768281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069587714 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067355733 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074476883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06558475 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066330482 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066134429 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064515105 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065633046 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065483289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065278725 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065681112 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06711362 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07271175 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064203745 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069089787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065978299 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06630764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071915483 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066414724 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068878523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073036636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065991745 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067490431 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074674481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070543463 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069087997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067211936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067479018 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071682873 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065338415 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072000254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06655966 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06662328 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067514296 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063804843 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065906864 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065478343 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065351341 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071263492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066846822 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065304375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065156858 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064180504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066518619 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068505671 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073412419 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06831178 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069292925 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060832656 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063167451 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066360952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063321479 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066853326 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068260013 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071501273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067674222 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065776961 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064448348 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074632515 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070947162 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069179135 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063420008 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068623455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066268918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067750961 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066259035 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065610062 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066295409 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069314072 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066561988 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064603555 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072266755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068422072 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06609238 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066580071 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066023832 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065593945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061079313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065881016 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067243502 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070003935 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067269817 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064966327 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075342903 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063294294 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066020452 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068371763 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064924221 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070350669 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060804599 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067092756 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066714838 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066299301 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060728073 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064990352 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063672065 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068271247 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064650416 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061009367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075066393 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073065237 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06720637 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063779754 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063315921 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060005755 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.193186023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065187456 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067985724 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068381811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07533301 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065491313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.0650505 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060545775 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065763461 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068172921 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068788966 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064432565 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061673835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066374594 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069532347 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070876668 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065231306 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065867291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069282538 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067785648 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063952561 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069933711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062868552 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069679113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077826608 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066599781 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066829299 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072207067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073429101 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067054548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061679847 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066067847 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068433863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066263532 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066780737 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066711643 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080739699 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068693816 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065545681 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064581039 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068623327 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06539794 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074348983 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067020852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066469664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070557565 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067713909 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074915936 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068174392 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073302422 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069446805 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068524627 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065154321 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065945163 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063298985 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0651227 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066291365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067026217 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07011456 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073423261 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0651174 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076315083 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074119058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068042826 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062631689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065038302 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065629462 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061013145 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0658299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063927024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063560059 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063773083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064488245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067089667 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070595255 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066700153 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066193765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065151161 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059890414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067891187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0681504 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066728183 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063058711 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065819465 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066202372 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069604624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068945447 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063520754 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066970212 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067260197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066009329 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060807675 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071892758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06472192 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06768454 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064919458 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06560917 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066071159 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069045626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070085483 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066859864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067717056 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069409794 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067894762 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062989277 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062891723 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070534815 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063383337 seconds)
  done (took 42.086415057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098440049 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062656067 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060968075 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061042428 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072422 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062491341 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061328711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062241502 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062075581 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064204395 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061334234 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061575129 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069595204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076594493 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072776568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065745332 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061250777 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062363198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060913377 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062451324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069550186 seconds)
  done (took 2.742448981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073312267 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069046754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07147153 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074359735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066611755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069203848 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071287188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069266469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074458609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065760778 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074500985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069540118 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066216939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074581248 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066127327 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069715804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07436524 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065933254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069285824 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071038772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069451276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07154155 seconds)
  done (took 2.873931304 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065783727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064571296 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066548001 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060577591 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064576206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060618384 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068814004 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0629265 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068147872 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064892185 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063968578 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064358543 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066844018 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06099021 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065017984 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062795564 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10630369 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068087494 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064571945 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065573403 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060677527 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067247696 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060725009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061168559 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064181958 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068265398 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065968154 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063305352 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064890017 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064197384 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064665562 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063120131 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066621494 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065702245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064395901 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064211269 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064761845 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064900706 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060594237 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063462727 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065861435 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060922648 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065158643 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066334242 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063217529 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062787957 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066755112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064474893 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059910134 seconds)
  done (took 4.525020958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079224766 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107196754 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066596396 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087217531 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078628533 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074287097 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068310435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087674337 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062472908 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063279085 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079932097 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078168065 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064623852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06898505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071285559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064707105 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065815493 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064030466 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068562349 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064403385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069000912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07099587 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078605649 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077821676 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068331432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063759101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063874356 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068943508 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076942818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068669391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068654263 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069705068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078912864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066520215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064118388 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066482983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079931035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064595979 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066952593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062520819 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066620839 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068604427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070865421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080525082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065181554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069825178 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06458827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062036757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077074656 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06706314 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072270509 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078591334 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068462716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064809746 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069030677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07864877 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064637094 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062687313 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067796544 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076266225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062385038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068296017 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077530724 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066240837 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071244636 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078581539 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069341702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067837853 seconds)
  done (took 6.284651347 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074100104 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071198699 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079637164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078428491 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070971914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071097078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070779843 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070939749 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070635728 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075246852 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071133802 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091214608 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066420366 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073283147 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070927387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071314911 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071218069 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071112081 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070951386 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07083486 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071378168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07855105 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071020579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07827184 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096507147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066898199 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071259668 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071170304 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078558872 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070909411 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078235379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071158218 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070964943 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078650725 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077752479 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070753487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063971938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070545724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070963864 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070605617 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066056115 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078427428 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070677048 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06664911 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071288341 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0709466 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078572852 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078181325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073131208 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075231962 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070830093 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078646713 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070849012 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070782176 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078400373 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102587786 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078042232 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077937561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07111363 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078318329 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077991811 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084263665 seconds)
  done (took 5.961388025 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083646602 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073659427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07466848 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060760937 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063088242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068306637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063112963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063671787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073194448 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073365745 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075148965 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068320899 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071054445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075562459 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068677145 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07167942 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06850628 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068561982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073323245 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068458524 seconds)
  done (took 2.760597791 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073621449 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081389486 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066516581 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071205772 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068051978 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070600488 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067522827 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067787017 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065780147 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067879438 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074630122 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074528598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065778608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070295329 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07487299 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070988059 seconds)
  done (took 2.477315614 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073863365 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071258841 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078609133 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065422392 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063049499 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061517791 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064804181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060533201 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061098737 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07687277 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064644921 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06767392 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064929386 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063595801 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061751576 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067207869 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061256497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062635844 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064529486 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076681469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075354293 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063720762 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065427239 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064599743 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064762242 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069438046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064454641 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062534909 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06276747 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065357034 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065382334 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068398281 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062216383 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063240102 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063643309 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062428941 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064705608 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064975742 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067529916 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065160321 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063323867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064572161 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065008102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065766229 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061411347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065227056 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061780839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066849231 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062876233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064998002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064403908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067356382 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065231533 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071083042 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067557887 seconds)
  done (took 4.96179528 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078271002 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068523963 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061218305 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062543693 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067593189 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066797041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068800461 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06658138 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066508838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06309446 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066892628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067899199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066328855 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068842875 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066482435 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068450733 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061098711 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066945096 seconds)
  done (took 2.561499488 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070505283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065712318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072140748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065145631 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06472949 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067552932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061151911 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063909645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063965749 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064965832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064835982 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067089382 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063990758 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067401562 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065070147 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06505304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067048652 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063612938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064935663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060924321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067081029 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063581417 seconds)
  done (took 2.791042124 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07113286 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091188714 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.13713165 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082745961 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080515214 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077693776 seconds)
  done (took 1.893084086 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089202783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077885262 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065504811 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08722061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072635607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06591392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066296443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066368087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074306592 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074595501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066491504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074462758 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074602755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074077057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071977063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072144794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066305619 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065954326 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065719339 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082736987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06653473 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074639665 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066583197 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066436901 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066472465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073959774 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074744734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074861762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066414965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074197578 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071731097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066449531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074815285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074488951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067838855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07446903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066086253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082460687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071926612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073722767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067569655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072446986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074445938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070578346 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074640349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066397644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07118034 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066673322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066332619 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083997779 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071835573 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073399786 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071978513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074423989 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074598122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084251772 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074659639 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073630805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072417743 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077552512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074023641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071550016 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07366185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074671001 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071770487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073695105 seconds)
  done (took 6.142180005 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080654268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084945688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067016437 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07472639 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073930663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066292748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066618174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066489446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066504521 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066249712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105373493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066810847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074016444 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073979264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066487395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066268618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066617086 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074158707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066289585 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084308423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066374812 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073708344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073768533 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073894367 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074944375 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072034952 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066441788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066521033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066433881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066641239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071110437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066963821 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074248946 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066356934 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073927429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066559395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066298035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071159371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06620968 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07226245 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074366847 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082317487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06630442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066344812 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074600986 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066313526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066116906 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065873996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066321263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066091361 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074809555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074791558 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074975184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073911736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066442181 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066587472 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066078549 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066440536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06650188 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071758353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0740168 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066356037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084286351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06637649 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06667273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073961757 seconds)
  done (took 6.055019782 seconds)
done (took 127.821076238 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181672538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168568321 seconds)
  done (took 1.70123734 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067145174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094866182 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075978702 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127655073 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065686482 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098567122 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097618994 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076839246 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06563786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065035603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065059607 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066806609 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130132493 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065575812 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065589066 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066767244 seconds)
  done (took 2.658606888 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095309044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171793378 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098451489 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064311183 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095621274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07225632 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063700793 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073815787 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070255722 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06432824 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071739487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069476104 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06504962 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069658536 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069601317 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072110718 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064147419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072142894 seconds)
  done (took 2.78876067 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098289565 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089730199 seconds)
  done (took 1.558107135 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153506161 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103308443 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147557758 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330570601 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158561141 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227085875 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125469926 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125006507 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114715735 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121089966 seconds)
  done (took 2.973438044 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095963011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145057745 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252523142 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11355525 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071015976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08953589 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115538361 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076454351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076264155 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076280971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076104621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075391428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09482949 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072553001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072519838 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074590596 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098007641 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071704067 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074423001 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07285432 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094975878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065076566 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072459561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071597748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073821246 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073813353 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064733406 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064834852 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072816556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072617066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075936186 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088274169 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073598482 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103266978 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069392871 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104157105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075195158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070178048 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07248847 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069911709 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074503396 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074513689 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071117486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074606574 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064322693 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07522384 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064496291 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064886604 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076914539 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065469667 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076774762 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075574256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102947473 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065450519 seconds)
  done (took 5.843515985 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.659410899 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101051375 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068990223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106194092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09435317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071141098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.681047742 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088930845 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171860652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090408398 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087374876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069076736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079665898 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082039985 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108614293 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100087746 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091637855 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070162234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098911031 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.09698143 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067095509 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09207355 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088580576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373675299 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066317538 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068486644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06675377 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069091726 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108048603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076863167 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068682087 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11948506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08285737 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119380106 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065860391 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067316065 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066831565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078034093 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17952527 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131089115 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128936837 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066173334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072762476 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068229953 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08868156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066284776 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108719684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078756674 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116695279 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068670312 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068722479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066808423 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067565877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078289209 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075941871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078944758 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227390408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067190434 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066798958 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069506089 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178681664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077925736 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078209255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090019941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.128147355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066771388 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.69066003 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08328747 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066474785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068038591 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066609131 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067835852 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066786643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244852278 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.340793083 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069972925 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069814785 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067256457 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.160001587 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077110363 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06873348 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110639648 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067041367 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068070918 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069140252 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068927975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116499131 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079210705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069807962 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067312056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069558203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067881612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066142772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160637522 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079037175 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07897158 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158074523 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06846824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110325752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078758329 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068871249 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078231411 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067698247 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069741292 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068560591 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078647912 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094062485 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078675009 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06942236 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067895443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097257005 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079905865 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066929158 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077562605 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395237732 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078095618 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066328186 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08033853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067223625 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109389428 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069053036 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174044765 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067851944 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078419922 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067518199 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06644923 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067114542 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108768165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06932482 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067763732 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0680465 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068946421 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078352158 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131979453 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069500187 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159709354 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.131946967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069159582 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117706385 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06703249 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114427629 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068786259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067889804 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06593372 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.708726742 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067223943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067739244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069016018 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136327996 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067069782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077916733 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075570596 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065654396 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685758206 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076856567 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.205772582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0792015 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069294356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068437983 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06770041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069872964 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108863791 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.14363921 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06970477 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066986963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076913912 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110296117 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067134804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076896198 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077113059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076915414 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068054852 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069405544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079599167 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116576473 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077047213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132406903 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.515056081 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067591038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07656757 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141169684 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067835675 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083020203 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067765036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08146248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110762576 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076207298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225881215 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112524268 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137241875 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079888852 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081410099 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066761628 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066897326 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07821709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067117033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06868718 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077206915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06864451 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068510926 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082159051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067771235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171555634 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066553752 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077752764 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066793671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069013602 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081599774 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067567808 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06887629 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078634441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069063925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076110473 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657024525 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076528832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067007551 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068449207 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133192759 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110502213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066805438 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066504753 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068762439 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108210729 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.154464836 seconds)
  done (took 27.840248123 seconds)
done (took 46.738412247 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205872798 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148625647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19851852 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116078598 seconds)
  done (took 2.13381188 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120014005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09950328 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093142786 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064562979 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099580068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064431344 seconds)
  done (took 1.946347154 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304512839 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205884891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177641011 seconds)
  done (took 2.090148528 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193665476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183817537 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387125166 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248455933 seconds)
  done (took 2.519206499 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14025397 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087341986 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065980075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081880902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13138711 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157214809 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098808104 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122911091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077228554 seconds)
  done (took 2.414469387 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141910293 seconds)
done (took 12.655947621 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11922926 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.108023432 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198990881 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072622186 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.176522343 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105223762 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067875172 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080615083 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232133642 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089453021 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147349344 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07619692 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190155728 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069582665 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072570708 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165953297 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 0.146336234 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072346214 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.171423515 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09894471 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191894976 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144728438 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133467049 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104243299 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076965178 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106396625 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098805148 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070440987 seconds)
    (29/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070909035 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070533882 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135551962 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182335771 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.159008978 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160215583 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087058499 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073631101 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.136705675 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107483123 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.073634562 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132731163 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077451587 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071780522 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08975676 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150880583 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050616668 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072880208 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078436828 seconds)
    (48/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074208973 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.148068803 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066518941 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088008923 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079234482 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.157170264 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166525087 seconds)
    (55/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152160688 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066813108 seconds)
    (57/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.152000324 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050226161 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.147684459 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157578702 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071313303 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 0.125064071 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051170761 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106328119 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132389363 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117122263 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074160454 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05016693 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120051897 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06077527 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072098218 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.146089288 seconds)
    (73/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.153823929 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077181771 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.064906522 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07225515 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.123352626 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.135500195 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051137281 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.063701183 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.049619698 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065463623 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.153327296 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096841095 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.131139214 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.329981566 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060413457 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165006404 seconds)
    (89/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098077554 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062591928 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070595577 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050453707 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.1678928 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094382253 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098941617 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091113854 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075876385 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072948154 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.166404729 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090516777 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071722037 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170562583 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145047284 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064785981 seconds)
    (105/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079613348 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086740223 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071434285 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.181253187 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142954006 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113809296 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.147174935 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06680906 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091218821 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071070301 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071540899 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09112374 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.135648081 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071545732 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.133356193 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.292664772 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070930756 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071010314 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07065544 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071327192 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074883169 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070895153 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068615009 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.134933572 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071169619 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07699586 seconds)
    (131/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10858139 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071200485 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071263943 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070750386 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064804325 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052724534 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.161526877 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0637093 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064209647 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075393131 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071959501 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080603797 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051535179 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.16807998 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.134447742 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064294882 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088020489 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080688312 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072096184 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.159034764 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064052782 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063469304 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050877394 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050160465 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066096484 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051521618 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.168693579 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097319487 seconds)
    (159/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050291152 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091428005 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093920249 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077222409 seconds)
    (163/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104253801 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064134576 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0736779 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074547474 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.171948533 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072310583 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064693357 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06554492 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064350421 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087729939 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.170183301 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074933626 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05061866 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071363836 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065756558 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050951565 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126183831 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063957886 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072698255 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050262657 seconds)
    (183/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09781276 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049917514 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091249491 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05020765 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066458577 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08741452 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063324441 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051842232 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073762307 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087269725 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065940288 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060645889 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063858384 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172878825 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059972483 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.293667228 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146287706 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074114136 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073016794 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066708307 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069062219 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050950768 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10246659 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074664412 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116053635 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075267937 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076866856 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072039278 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070620487 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052183392 seconds)
    (213/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051257151 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066534037 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064774817 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070534232 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063559154 seconds)
    (218/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067025004 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061215486 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067683964 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054311161 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065466847 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138115129 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052138279 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051326765 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065996061 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051081038 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052380181 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069231059 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051415464 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071960118 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051954731 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140100081 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051823158 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117576332 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051697612 seconds)
    (237/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062486188 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053684974 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051480527 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051522196 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064643209 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071221992 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050768965 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066162745 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108394724 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064289717 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050772963 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109578099 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088283459 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070820627 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065202129 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135632414 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104898848 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070151747 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065822552 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072255978 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06606827 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164507476 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070935638 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106567092 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070255166 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049918822 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07820433 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064723956 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065643618 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063080968 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070157399 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049931068 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06435568 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088239155 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067069596 seconds)
    (272/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050233225 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049836414 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06497099 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071706118 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064331833 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050569204 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063854172 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06292299 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06301064 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093979661 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063025889 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050344817 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05352039 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071721802 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076734009 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065604488 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067453501 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050143796 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069426853 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181994769 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051347341 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086362323 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088013677 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135359454 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051058979 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051991631 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085891902 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089263465 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069821081 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064515682 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173408623 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088385167 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066444755 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084094233 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099743823 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050414274 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05042805 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072301957 seconds)
  done (took 29.903557935 seconds)
done (took 31.314580221 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083539375 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090498609 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073153723 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090860425 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078805506 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074988774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071407336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076415081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077918098 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079967856 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077044553 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053757991 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072117861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072871086 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072681881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089513505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076831836 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071574755 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071530881 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063412068 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071879895 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064546111 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066178779 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054192167 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076145226 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070228574 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071442942 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072244537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064775603 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064556452 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067544904 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071933125 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064517583 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076627223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070741474 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071594728 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073032556 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075390774 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065955833 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064725084 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073106152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064710494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071749486 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072043462 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070511365 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069936853 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071925134 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076787951 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089938413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067706023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073220486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075225926 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074849532 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071488509 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068230256 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07189572 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069172965 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089627556 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071896551 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066711658 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072696838 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07220352 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069666919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071984105 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071522345 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074138187 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073661182 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069616305 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073315542 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069727825 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064315101 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071597447 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067765123 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06449719 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07429664 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075759531 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063141072 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069983911 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071222936 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069929938 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063762287 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066316602 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066376202 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070524443 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066042013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053872897 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067582767 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070340821 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063368578 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071739771 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070334826 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070728817 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065882517 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074084805 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063641266 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069757729 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064434599 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064450057 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065999832 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067745743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063897255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066551549 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072959573 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066037857 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070051434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077887685 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064162948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070579203 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063425152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063483449 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077948272 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073574248 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064634123 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067199543 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063950593 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071338977 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063606953 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064029093 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06383383 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064606606 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069402203 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064133254 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065703483 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070261591 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075347685 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063409021 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066879431 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065484818 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063456667 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06843822 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063462674 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06354338 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064662505 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.059409253 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064956023 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06309074 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069873347 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065153646 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069890439 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064485234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070434468 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067448031 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068406872 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068014288 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061891903 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.056964353 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065178972 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064825378 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064486648 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063104618 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064368549 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06264443 seconds)
done (took 12.092321085 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067466359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141333672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097421728 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093870923 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084408263 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065884894 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074518136 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099647801 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066728947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100467058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086042609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083554529 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110202325 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063677376 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064928893 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068992363 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066499149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080056483 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098703028 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08519262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107604368 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064456649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092637378 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08864221 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085379402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099644427 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065970419 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068504451 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068499393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089104686 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085539435 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068528394 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065433156 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098833794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090267176 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081305938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06545551 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080445595 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065615714 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064973806 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079389845 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095783721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0784556 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079089202 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068765706 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067870773 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066075548 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082294766 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087498165 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076992397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085280628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101312689 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067737652 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064652597 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063759856 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084038849 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064759899 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067798811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065376299 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067297907 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065044812 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068555291 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079634469 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085438153 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069148911 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079239304 seconds)
  done (took 6.734708066 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082267511 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088503171 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081844989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081761181 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064452874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065548034 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065708585 seconds)
  done (took 2.039149984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065913007 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087187842 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087933401 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087697258 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082959093 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085690568 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074496297 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065866258 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079150941 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06645825 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085608453 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100344231 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065971583 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07136632 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089384049 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065417941 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088962064 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065752672 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068231977 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088429504 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06774252 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081200416 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069050809 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066330021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07950316 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065574835 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110616695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069830401 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067124445 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068524893 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063528634 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104233441 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079194533 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074480781 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065342613 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079472359 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079494076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064572436 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081201441 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071385678 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079015455 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066905955 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066501179 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063496179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069944725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075942915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066884038 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066212917 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068594236 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084682913 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066310875 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078976199 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069911652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068251459 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06695596 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069236731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075442081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066409345 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084768213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066664569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081701177 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080841287 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078601908 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081243546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06754686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078279148 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078974849 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068225556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066817863 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068573468 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080955288 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063679239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067196592 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075777914 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067290838 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087392086 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087817217 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066412677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074501251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065791944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065463066 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065602478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087627063 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068231346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065357386 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069596925 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069136243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064138204 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065224825 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069430856 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064035705 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067384181 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068414241 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068565124 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068119204 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08134802 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068186591 seconds)
  done (took 8.663372277 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067743471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06672992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068286037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066988319 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067296493 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066905099 seconds)
  done (took 1.93625972 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091755871 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068463504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078934918 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071267472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102798397 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085522968 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085680092 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077554188 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08270658 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07750386 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085116494 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086621951 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091309732 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071245904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084758595 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070596184 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085921114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074414806 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077027188 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071846361 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085189021 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071330887 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071913988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080730845 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074484228 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071574132 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066446875 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078750428 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077661868 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077860463 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071271108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074603656 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06923447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076851917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085288234 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069406161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071201067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076001731 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071184325 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074518322 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086555986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072184074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073447937 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076240711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077015908 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069172547 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075764465 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074940332 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084780929 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076123969 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076014467 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070871207 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074156571 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075848366 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069147569 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076921135 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075741845 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084953402 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071734104 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06897225 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068142837 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074382847 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076666928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074307845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077411968 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075914106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069990397 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07128466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072047014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070776659 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075803142 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068361069 seconds)
  done (took 7.012065057 seconds)
done (took 27.915601074 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539035241 seconds)
  done (took 2.040973554 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609089727 seconds)
  done (took 2.13313164 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.403982183 seconds)
  done (took 7.926751411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401145271 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511299296 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708170857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129035683 seconds)
  done (took 3.321609022 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675714127 seconds)
  done (took 2.208544891 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20836607 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194202043 seconds)
  done (took 1.946665966 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.367111205 seconds)
  done (took 1.891400368 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102268189 seconds)
  done (took 2.627085107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257641317 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161249031 seconds)
  done (took 1.950297387 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459472591 seconds)
  done (took 1.989196372 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831246471 seconds)
  done (took 6.361219949 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203503409 seconds)
  done (took 1.781599667 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239575083 seconds)
  done (took 1.772743318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.717050476 seconds)
  done (took 3.252418867 seconds)
done (took 42.733314067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078759379 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080795311 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080770435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07712951 seconds)
  done (took 1.835337433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075587007 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071565248 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075419555 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071604259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075646056 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071517367 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073047111 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075321468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07137507 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071689558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070979441 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071809175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073469467 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072899726 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069983665 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073377316 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074844825 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07164881 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074181177 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071180245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069748174 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073234963 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073936607 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070676892 seconds)
  done (took 3.277771234 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076328213 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071490152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07356488 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07094962 seconds)
  done (took 1.831532966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076486231 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090024926 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08757953 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076328924 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090569991 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084703595 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067768561 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067674145 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071946568 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075954895 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06675129 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094085692 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086020109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075411426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077642564 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065039931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067015619 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085307724 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075810271 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076211483 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069520018 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075723903 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066545436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086941475 seconds)
  done (took 3.393747845 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07638364 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101380805 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076302381 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086481188 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089144871 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064512151 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073369219 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087545324 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121237684 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063993707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068798538 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064274139 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071399378 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06400992 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074892338 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103455058 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10662392 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067624893 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094259245 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064424176 seconds)
  done (took 3.166406847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071826926 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069102318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064977037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068184637 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076959456 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071998873 seconds)
  done (took 1.971643857 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067073485 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066565498 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066985537 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066030933 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071047201 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066900451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065082852 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066484303 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066076913 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065949497 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065362492 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064561855 seconds)
  done (took 2.342586226 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332829557 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068094346 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067573233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064638137 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069414708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065370522 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078769017 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066802664 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088937999 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065668443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065663544 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067527475 seconds)
  done (took 2.648077866 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202069216 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074726853 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231924479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134829835 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109600658 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113171968 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101995619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111034345 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140463973 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100009179 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164292874 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162158479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104975245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134616159 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087356777 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096653159 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152008786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159180061 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101677903 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162303693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141060479 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122547109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143890659 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099626947 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103750514 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119440578 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069652502 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078389612 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166393013 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128879185 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142866802 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109016073 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091881477 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172854901 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167085654 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139311448 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132107565 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082552835 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100371194 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130310467 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194075792 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086322052 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159262445 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245005822 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080047214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138707923 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118530239 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117754895 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105283977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088443307 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143498358 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179315022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137020072 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086323092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109883482 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113086692 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114319284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100947069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178930843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158654214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125435823 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069371261 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097707071 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150975234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128764374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106681798 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123827106 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091546583 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13076682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151346958 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115797863 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139560025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126117758 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086575812 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116313533 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136395311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126191317 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166195941 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121772589 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071417929 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122039264 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101556015 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079407431 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140143663 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074076289 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172198015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096706667 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10395357 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110849055 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106503751 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106292532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157608902 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140109141 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244435853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06547787 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102238726 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117989835 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146018339 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087047393 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106027932 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114773708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076560577 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136931251 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073781564 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120433829 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074002656 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12240421 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13063788 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074787023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11852834 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099492534 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097804626 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130712885 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156218634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087812524 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080968037 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164544098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120758175 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101982821 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141821605 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152722802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097375577 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100972423 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147171046 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176270926 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087834932 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159731088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105340342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082529725 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086125446 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1211798 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110397184 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120194233 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080376686 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11614172 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164869946 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073705456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093192432 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130431076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077520775 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079729719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101024549 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098170926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093193552 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09781732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101422042 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136039029 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120284432 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102651747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268748631 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096969782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167593589 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087984826 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09890175 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102306572 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068463147 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132895978 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153525223 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078638471 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161017106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120829951 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103409313 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117214763 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082178643 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136825198 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07783189 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069256592 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14189501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108506937 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108773452 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14784686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102345923 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125812547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116617777 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132589063 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129422685 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126630022 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103483972 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086560391 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109872622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123354983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071771359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089493187 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078753053 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101660992 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093521558 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081494091 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139220786 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122019275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098318706 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108954053 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094514081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143926991 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075107933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125969345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117000187 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093125309 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148592653 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148816432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128665436 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097212169 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141784596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069015806 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072099184 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087039186 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119276777 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080261722 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080448961 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111768495 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140260863 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122886115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130059026 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106687601 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114934352 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147541963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067269163 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.111592157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139015016 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114720702 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100437307 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08629849 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094667929 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135591301 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103146299 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171835421 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108636527 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12063549 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147392163 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095597554 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098718788 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125910344 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096193366 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137749883 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093165792 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082484293 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101534851 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070930782 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092100941 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117331261 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110921372 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12512274 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106872597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122541781 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073099437 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108325224 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111981006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111692316 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061413347 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110456247 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147523189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088072405 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10955138 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139882663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075340565 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.116947387 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.425523071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144496594 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084236084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109607356 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118236357 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127595618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119528333 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138543963 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109458824 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134600866 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10872296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084982814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087002918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096231842 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104410599 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093658635 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107252672 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112674733 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094054064 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13058618 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102558517 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108018284 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116361683 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096016649 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088520731 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096168073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172611141 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117916932 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16710739 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097503551 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143277152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161766703 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074172635 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077859865 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076982892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136860067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082337469 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128307945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096246294 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103789451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121914676 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139401095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09337073 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067300029 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106299015 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131322605 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110377096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096056203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102411368 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159574637 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09829753 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077446805 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110829227 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102284083 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100253107 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167950673 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.207644805 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096561682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075017243 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079440264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126241961 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150856357 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079738326 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10198441 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117078572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108093963 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126068781 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100214903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097563218 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112567465 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146903712 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126753887 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088059319 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110420227 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126788457 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170035367 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103580514 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093559671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168142423 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148449707 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156949736 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086963456 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112089944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111948865 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108947843 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136443297 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082007188 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160652141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080741952 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133655439 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101964656 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088318453 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126906535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097232134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08666215 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144558009 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114971701 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080867344 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076590116 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115870023 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118318199 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105698578 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074251821 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136419242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071827608 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128509367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165050868 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079338515 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102465643 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241059272 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078465216 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106411709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10030267 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088497864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097548544 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169931052 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087015796 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146610207 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138625802 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111412786 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134215351 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098213664 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635090321 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076844565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149195748 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114824746 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16987504 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095129917 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115502918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107194933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120846545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141734826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102874405 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176704063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129488179 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113851535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078257518 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10031891 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100852442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087013366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103490122 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111175272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113741333 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09179651 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113619367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1210812 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080268546 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09365221 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152428527 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114818142 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140986729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137893776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08356097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115747387 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136376172 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078105794 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118233284 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147944156 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103717061 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095694254 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078710307 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244991212 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166332529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07181365 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159646793 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119595744 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107702072 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111400866 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112292629 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127887087 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105785947 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119297565 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092564535 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108881617 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110975311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080572043 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075852572 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102687657 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10959007 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09568869 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096038326 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096655607 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147391556 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070501714 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094717295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101181172 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141371962 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17084446 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086656395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081294079 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116465169 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110962218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110917354 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118690703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077684708 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080559683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080015154 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075880796 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10688576 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110464786 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102435712 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109047634 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160360339 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081377935 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221936025 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093124802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103005568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068518791 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076972658 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093962157 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095723891 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106625453 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099309444 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166740836 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093062777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087750232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089868707 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071959788 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081037565 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267054575 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109850538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116383583 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095872794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062562574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106996721 seconds)
  done (took 57.616716429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106238735 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080883369 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094662867 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147871851 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120525819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210221033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156071613 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197931569 seconds)
  done (took 2.795592214 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06702725 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092464144 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097940055 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080263527 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066232541 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066966912 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221502087 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079068342 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065208588 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.0868283 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077543782 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067200599 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.396035272 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065176909 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066271888 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060573388 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066039603 seconds)
  done (took 3.396146933 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369802901 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361150365 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367974927 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072258132 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.664455229 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087056311 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.073570153 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094971776 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069970717 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282208119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.709162012 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093092713 seconds)
  done (took 13.926222252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07443801 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067886381 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081850767 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081950018 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070624541 seconds)
  done (took 2.058888804 seconds)
done (took 101.83332623 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07817012 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.290772487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052650519 seconds)
  done (took 2.051211743 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081240619 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083195495 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082664638 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081022788 seconds)
  done (took 2.011122002 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072398655 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074793907 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082694408 seconds)
  done (took 1.909421916 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220128149 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139533691 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085586241 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080526767 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076300923 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077258229 seconds)
  done (took 1.920521246 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070434922 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073491668 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071248613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074743823 seconds)
  done (took 1.971520236 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074894041 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051761439 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054451655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054575778 seconds)
  done (took 1.919278554 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084843877 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077208861 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077139655 seconds)
  done (took 1.921086489 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104250812 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083760018 seconds)
  done (took 1.870533002 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079826097 seconds)
  done (took 1.763602334 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096799241 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112274476 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125436979 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107674911 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13390876 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106868376 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0837078 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08469653 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075340323 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08579433 seconds)
  done (took 2.697902242 seconds)
done (took 22.236508974 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076715748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3653138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359280005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089549517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66637664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356288573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040610971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090987954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119275424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066652495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082622753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645744851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998547973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321082154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982806639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323524402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648446998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067232042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066592372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066885952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029985931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066541694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066814082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066912758 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646948678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369960664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067202688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317908335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066700918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06815265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353564858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066802179 seconds)
  done (took 16.293144646 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068550983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115399508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072175738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082995678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069184491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068283424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07095281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068163051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122869436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067038678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083012083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066394033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070998928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067604211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085471178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067180582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067685238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067597148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066981938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067096539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084959692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066302409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067746724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067174145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067045923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078731041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067692372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067285698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067417893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068855557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070191766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067960459 seconds)
  done (took 4.055141043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113320302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123206573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07277215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101398021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110546102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069258956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141312434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091060609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06699689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08347882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066877327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099640974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067979161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086552432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067476003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068045711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067698782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067127732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067419655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085719848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066988956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067575678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067864075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067284106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08024288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067978127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067409537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06763358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069362525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070697217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068139633 seconds)
  done (took 4.306458114 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071674674 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073970925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08155476 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082524104 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068446695 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071243965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071927138 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068676916 seconds)
  done (took 2.29323275 seconds)
done (took 28.637516061 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077318933 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068250363 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071064996 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079400132 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072286929 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077506767 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066003337 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073637716 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071383927 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07175486 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073752873 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066489612 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069778926 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06610883 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072189108 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066880736 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07795611 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070641269 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078502141 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07829308 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068670034 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072050289 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072929772 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078204823 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077762848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077704173 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075858095 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071675038 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06772701 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069744718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075494696 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082629717 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067291503 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078095342 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067024676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066891457 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07031814 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066570796 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077569482 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075129255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068645775 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075003349 seconds)
  done (took 4.735102448 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08667443 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089958439 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083928433 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06034746 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065567712 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064321058 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087742114 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058475911 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058885686 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086549592 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05507428 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058604623 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062005821 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053452447 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05843814 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056080819 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060971593 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055328466 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058534349 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058179463 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057364178 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053459483 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059033065 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064567034 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056126834 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060729083 seconds)
  done (took 3.382269707 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072936863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08224097 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086252155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124408396 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101880789 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07538942 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076589943 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086176722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084439512 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066114875 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069911877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092685485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08699942 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072738593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066303615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082534286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080971937 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068409363 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072069667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089290885 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082749077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.075994868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090761434 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079141319 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065679628 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068197064 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.06986962 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079847871 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071124914 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075801272 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069870133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069700038 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068751169 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07767293 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070331125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067736927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088059268 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076102067 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076537346 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06724956 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069501942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067475373 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088393286 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121214761 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065733238 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073047639 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074366986 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075111632 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066880099 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084953 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077365075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066394451 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069290414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065652739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06662041 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079289202 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068727994 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068694183 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074797862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069262826 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078597051 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070469819 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081591088 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065921545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073787252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065769028 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066855605 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065421511 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091377172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067588363 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106991926 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067241116 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067539681 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074808594 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073955225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072447693 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06701793 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081037847 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076183486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06979968 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075002927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069584935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069048324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086795889 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068774101 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067893826 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067398355 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072248802 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069208162 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067862504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079440536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066634757 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069255865 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082691512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065841747 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067522339 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072009758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070615832 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066264881 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077258079 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071383744 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067725248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075769846 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066319757 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069675429 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076739695 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072759671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065829283 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070665267 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072610877 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067021256 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06829602 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069627464 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068474825 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075796943 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073185706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071169287 seconds)
  done (took 10.457962355 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155978208 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161370925 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069632235 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142331895 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075153941 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077858844 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144649161 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093144226 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066461433 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067180924 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067757442 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113403077 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104268618 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120271463 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077433813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066561657 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082146883 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115624993 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145815723 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140978785 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.081714597 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075855788 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069295841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068016342 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074573792 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081132438 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089830904 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075348371 seconds)
  done (took 4.446865373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079714327 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099156647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072612597 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088479003 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08911551 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067122388 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068954288 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068943393 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079275493 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077746881 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066908752 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072195401 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073594446 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072863168 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067983973 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073601548 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073912301 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067744069 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070342751 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071689669 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076724341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079259431 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070459607 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066116047 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072810838 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066385447 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062914917 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082775884 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066865204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08830856 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06492221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074004274 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080379341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067425959 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066913348 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066649844 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066647651 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06634493 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06832182 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065313746 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065240303 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056555464 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065661761 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078371332 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072552296 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05589427 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071485568 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071705194 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071459141 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06454871 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069482259 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069632012 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069854452 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073855331 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071055367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07153843 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067657882 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065277592 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07386589 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066592247 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063570916 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065224493 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071122097 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064916927 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074133088 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070704288 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065032368 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066166704 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068336902 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072898464 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066154686 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0694416 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064325037 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068089364 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07069439 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068192684 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067989302 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065316759 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066237738 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066819201 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054817506 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066234655 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052750927 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069409812 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064667943 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065165187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066264763 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071458528 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078565726 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067730457 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071903248 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067364119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065803303 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069892104 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059371842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069427348 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08154813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081079848 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066329311 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064910071 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080978133 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071139144 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06602219 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055395496 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073880635 seconds)
  done (took 9.087092404 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093349898 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08633242 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069369676 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082277078 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089313891 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085668485 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073604927 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075774132 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068436208 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081178689 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072707913 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075321878 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067207365 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075735176 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093189306 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075873885 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068717078 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075905862 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070708367 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099874324 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081131454 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080603203 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073818155 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067106395 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074490054 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07863347 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088377799 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078896227 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07704557 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074988028 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079124227 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088756491 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07314833 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071000862 seconds)
  done (took 4.420914113 seconds)
done (took 38.226713187 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.798031793 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.958093382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.7792768 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123205813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856444965 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.050126871 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.788966642 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.787144671 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.028547136 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.821048989 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.006137332 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.863510551 seconds)
done (took 65.581088218 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.854714651 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913791958 seconds)
    (2/2) benchmarking "String"...
    done (took 2.048763922 seconds)
  done (took 5.683834491 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.100207588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.303680398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.022889183 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.774539397 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.781167009 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.084592276 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.580169084 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.298953003 seconds)
  done (took 30.567389313 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.035041645 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972336047 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.466652148 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.503335579 seconds)
  done (took 15.750330578 seconds)
done (took 63.754921218 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.782261909 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.833767097 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.778045243 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.760426572 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.832352578 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.782455173 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.3787354 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.835420216 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.775703344 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.763259648 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.77703293 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.207481268 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.787139769 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.001570441 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.777728731 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786542222 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.778690106 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.311688647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.930682788 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.799129742 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.794635463 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.94178018 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.782096352 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.790470108 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.831557476 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.783539795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.236653861 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.794182182 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.408483576 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.784670624 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.810738287 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.911706004 seconds)
  done (took 204.272406572 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.778379166 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.938292681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.007894219 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.819544473 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.403085478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.974862846 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.918220391 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.46040261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781898163 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.786185412 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.916981032 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.781526306 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.918740604 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.745525461 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.793703693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.87509031 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.034727137 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.937598964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.781710142 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.020340364 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.790468613 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.741275953 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.722009611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906206335 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.80743349 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.780476307 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.784109242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.788681404 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.970768562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.946971658 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812802695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.795572543 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970907266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.647604015 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.780141741 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.777925259 seconds)
  done (took 170.425750346 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.164582106 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.770979815 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.772090305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771125679 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.774460148 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.770190754 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893701019 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899006259 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227102065 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.107281136 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.82208602 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771109779 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616033006 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.768936724 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836354087 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.781740941 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.774590017 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.784316339 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795619794 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769561287 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770666425 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896765846 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.781814041 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.824793801 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782370605 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773368228 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776017274 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.139824759 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.771535445 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769821508 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776315344 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014439821 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.770740233 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.770764963 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.682694955 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.452859371 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864030315 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.771226247 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775324562 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.770841824 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.768557469 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.987821286 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769292052 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.771796388 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.770995558 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.772316285 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960413687 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.771788212 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895518992 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769722457 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278367598 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.770474151 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769681252 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.396708223 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.493530128 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.76505288 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.761306174 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.765874404 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.762474182 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760858372 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76770696 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.409143726 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.008058006 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.761684037 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.76292786 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77330937 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.760061273 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.912894574 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759153664 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.201159695 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.818652187 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.871885571 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90370149 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759918413 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823256504 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851837032 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756821535 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755934267 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756525148 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.756478599 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837607992 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.757745864 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.923975697 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764603371 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.75802819 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808503222 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826433147 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756583997 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662102225 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759734375 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.757458073 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.088726323 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821443463 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753734425 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754544624 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754251696 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.894800259 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877936229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551361304 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.755299442 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.341809263 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756285779 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.902861703 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753616648 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944757002 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755534267 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834905883 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756151321 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754057151 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.752290789 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782064652 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753157335 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.811446958 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754159362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.121641368 seconds)
  done (took 400.945114215 seconds)
done (took 779.584630904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.432273623 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.392111313 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.507282809 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.423547979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.39380649 seconds)
  done (took 13.849116109 seconds)
done (took 15.545675347 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841204117 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.841359437 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775237703 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.83743987 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769491094 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.838905765 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819800035 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.774635925 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805622062 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.775283939 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808236106 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774525993 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761871115 seconds)
  done (took 25.119250517 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.980437431 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991622927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820077836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990294544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796625115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977459531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912077027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904566154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901638925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766349731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764281255 seconds)
  done (took 22.501545691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987118224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001106492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823796867 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991604609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797864174 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989421305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917190958 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904502699 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.909646054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765635651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762318657 seconds)
  done (took 22.546716953 seconds)
done (took 71.859761453 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.757687559 seconds)
  done (took 3.452249257 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.779999036 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.917707542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763657106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761632613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.7565007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.760244223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762118329 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.757229807 seconds)
  done (took 15.955920191 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.757156652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.754727608 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754989206 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753379269 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.756394646 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.755340399 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755758358 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.757385011 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.75641417 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.753828761 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.756777251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.756613604 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.753749831 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.755408662 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.756142095 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.755631391 seconds)
  done (took 29.786811876 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.7554131 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753775765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754379292 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.75354192 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753727938 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.754170891 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754912145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754368138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.752916754 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.75385171 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.755738575 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.753800743 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.75419942 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.754813681 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.753007853 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.755063043 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.753057842 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.754023897 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757855429 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.75408911 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.754008773 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.753046406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.754475872 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.755088392 seconds)
  done (took 43.800826161 seconds)
done (took 94.688577649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.498516797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.227432332 seconds)
  done (took 8.421465995 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757230811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756095513 seconds)
  done (took 5.246152271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.755837444 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756337453 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756883839 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756407134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756655898 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756087471 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755954303 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755558593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756774748 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754802201 seconds)
  done (took 19.25612523 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756587161 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756244465 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.752964343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756151293 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756112724 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752809552 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.756161515 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.755567331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.75701991 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752935216 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.75574629 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753676587 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.755871739 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753449995 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758138197 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.753111508 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.752942429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753904225 seconds)
  done (took 33.283685183 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755789582 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.755790274 seconds)
  done (took 5.205685175 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752913136 seconds)
    (2/7) benchmarking "second"...
    done (took 1.753875017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752552475 seconds)
    (4/7) benchmarking "year"...
    done (took 1.753417501 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754470094 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753840444 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753853931 seconds)
  done (took 13.969845582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.756661656 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.914217096 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982679817 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.444074952 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758084106 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.757959967 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.729975211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.758720895 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.759860979 seconds)
  done (took 19.557772641 seconds)
done (took 106.633019031 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.58090106 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752105298 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.159141916 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.812067642 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.801791924 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.048875443 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754698264 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.967491037 seconds)
done (took 42.569486792 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.770787185 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.217617836 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.233426024 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.453787251 seconds)
  done (took 11.598832103 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.737182348 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272010289 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.788897639 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346971537 seconds)
  done (took 19.850536646 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118215709 seconds)
    (2/2) benchmarking "read"...
    done (took 2.111203597 seconds)
  done (took 5.9270756 seconds)
done (took 45.839966935 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754761116 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.757316112 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.755971424 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.754505047 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.754444685 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.752299764 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.752833711 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.75356614 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.755093395 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.754330368 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.753211731 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.754897358 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.755505467 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755863191 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75256312 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753322845 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756307986 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.753113375 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.755435159 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753834947 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753091394 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755250153 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.75345896 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.753263347 seconds)
  done (took 43.799780897 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.755852018 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.752860538 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.754748481 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.75544815 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.753501314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.756916777 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.756199714 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.753339869 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.756857243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.755922045 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753742753 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.754607381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.755526606 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.753727846 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7561796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.754264133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.757080626 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754033383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755489431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.754201479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.755956391 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753143565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.754717391 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756455072 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.754400326 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75359666 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.755924472 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.756203491 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756993694 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.754980676 seconds)
  done (took 54.348745403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.761780138 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763350681 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.756685426 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.758282288 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.757227877 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.757634168 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.757581755 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.757379667 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.758100856 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.756845328 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.75796922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.756752669 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.757221677 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.757201589 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.758735256 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.757439888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.757999448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757326068 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.756940191 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.758729661 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.758994321 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.758136049 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.758312458 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.757965978 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.757015632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.758749743 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.758478312 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.757736932 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.758542198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.758053868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.759229444 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.758899111 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.758208936 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.758769696 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.758572537 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.757887561 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.763079088 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.766238956 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.759204556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.758057599 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.759096334 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.758397277 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.759885845 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.758750209 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.759657662 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.758880938 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.759651379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.759062645 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.760993864 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.759535794 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.758956004 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.759385831 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.759080173 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.759502658 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.760398016 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.759511602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.759642717 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.759936874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.759328574 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76148363 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.760391436 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.76090018 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.760205064 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.760924761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.760993642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.761849218 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.759869726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.760997338 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.761889669 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.761658196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.761237473 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.762557572 seconds)
  done (took 128.364918901 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.761597175 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759037472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.758677704 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759710107 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758402783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.762065952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.758290337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761871113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759504877 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.762412552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761543278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759261471 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758160024 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.76211058 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760707207 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.758626016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.761182603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758543198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.760999324 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761336934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762318242 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.760266167 seconds)
  done (took 40.426476024 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761778512 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761232378 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.760137723 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76158007 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759590285 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762819923 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762398468 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761700453 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761621116 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760167795 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760153491 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762118088 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759505961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760446772 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760013855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76033842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762056951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762021627 seconds)
  done (took 33.40064763 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.760664024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.761506899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.763383785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760628118 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.761754053 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.763300325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76170707 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763697324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.763307778 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.761203914 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.762852195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763370071 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.763421537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760899377 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764286931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760951272 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.76347297 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761087065 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764329596 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761060362 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.760419053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763422873 seconds)
  done (took 40.472920889 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762134159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765416595 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761431244 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761164759 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760368079 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763486093 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.764621595 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.765956246 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.76699104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.767046023 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764755854 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766429317 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.764744692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764494377 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.765549647 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765041046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767210647 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765825611 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769194918 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766314536 seconds)
  done (took 37.001171144 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766858536 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767777124 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768864562 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768523974 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768505669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.767857264 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768498443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.767855258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769472458 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768677067 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768705276 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.76914293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768723814 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768340668 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770007852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768853155 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769037143 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769245567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768835264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769014039 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770805958 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769045572 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769017029 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.76912718 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768954007 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771307864 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769450633 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770824183 seconds)
  done (took 51.238561963 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770487814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768779301 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.767794944 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.767569712 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.765916382 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.766615957 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.766608184 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.766073146 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769335041 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765367261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.769968372 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.768609601 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768615466 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.769951594 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769522822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.769287714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769801234 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.766611806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766876556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768354537 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.769980422 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76988405 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.770394289 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767556512 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767060063 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.77107891 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768825428 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771106248 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772072576 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766741344 seconds)
  done (took 54.767519203 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.788321583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785971327 seconds)
  done (took 5.283682446 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.764390647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767152685 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.768627127 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.764767332 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766246222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767766671 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767892445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765741185 seconds)
  done (took 15.841917884 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.770373098 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.770414809 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.769207614 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.769738666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.771607274 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.770633317 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778857662 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770832542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.773224223 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.771504738 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.776543205 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.777843319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.775731577 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770853512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.771716263 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772928665 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.772419664 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.772403463 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77112739 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771000642 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771939578 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775342499 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772834258 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.768050314 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.773493661 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783091377 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.777060761 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.77176895 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772611806 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.777558364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.77381171 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.769989954 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.771498489 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.772790244 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.77142147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.771995848 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782872173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77300924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780813838 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773128317 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771669124 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.768769017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.774240935 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.775344337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774158266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.773169262 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.772516938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.769071008 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.773029374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.776709285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.775276055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772281616 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.770990632 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779506503 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.774840822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782598564 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.774122874 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.775414975 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780473364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784235043 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.787127711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.781991569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77576525 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.774042394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781947515 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.791981088 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782895062 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.770837197 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.770246651 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.773413889 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.782496736 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788295551 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.782304003 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.773178995 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773913015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.773845826 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774199373 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774475407 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78397105 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.777898836 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.774917707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773299661 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783081033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792308475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.774211907 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.773543883 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.774727874 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.77434862 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.775197286 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78576249 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.775489171 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.773960446 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.775361628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.774895826 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.778888173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.776457115 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77422233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777055904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.772703437 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.775632596 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775859314 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777889711 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782691306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77661891 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77592074 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.7839478 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.775801925 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774646203 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786158024 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.776179223 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775130438 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.776589454 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.783898234 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.77288127 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778793367 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.78275963 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.777944347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.779323464 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.776132629 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.776302101 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785436035 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.798940865 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.776184639 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.778210748 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.781250549 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.785935932 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777482034 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.780810772 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.777871276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.77415175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.773460411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.777972421 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.776622326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.778117528 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778231069 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778850431 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.774035102 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776817083 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.77728939 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.779143054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.7800007 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.778385281 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.778823495 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.780502881 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.777974892 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.78092381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785571026 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.778170374 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780127581 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.779565593 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.776513023 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779186411 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.779980095 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.778611919 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.778950619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777907149 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.778962497 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.777617327 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777690791 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.778297783 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777078012 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.778296217 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782777056 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.778872951 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.784228978 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.778697609 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.776248725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.778259928 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.780575976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.778956316 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.778811686 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.778340274 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.780810754 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.784772684 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.779732324 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.78019386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.785662764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779502802 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779273477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781854821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.781757368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785946079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.780123703 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.788288218 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.780941634 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77945939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78115926 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.781021017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.779905215 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778688194 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.782332004 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.785283831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793786213 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.787349253 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.781139514 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.783090447 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.781771279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.783397617 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.786716213 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.780637322 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.780293258 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78227098 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779750689 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781867506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.783452783 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.781032436 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.780999351 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.781065922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.780958408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.780778084 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780833676 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.783640475 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784658553 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.77773031 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781437353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781790457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.781740961 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.77899627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.781931707 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.782382698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.780886205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.781753731 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792464703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.778687607 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784465197 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783122093 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.783944503 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.781945835 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.781646525 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785314837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.78301878 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79062034 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.78432478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.783445697 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791030473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.783243129 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.782218918 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.786076787 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.781513323 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.780006136 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.784375306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.788512857 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782556762 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.783698915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.783638733 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782141728 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782226475 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.791339512 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.780676915 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.782344995 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.783030115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786932514 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.780472156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.784431651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.784243335 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.783714452 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785687342 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782728647 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.783000906 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786134455 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.783003905 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.78316523 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.784056815 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785717283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.790051767 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791135809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.78549681 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.787581995 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783770055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785744652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.785330419 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.784382136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.783181154 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799004786 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.790913092 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792301223 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.787476637 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.784097239 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790946809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.786050681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.78868014 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785530693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785452448 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.786071451 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.784897045 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.781628685 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786749014 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.785114409 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786904853 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.786274433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.788538285 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.785224674 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.78505373 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.78585435 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.785783053 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.785075776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.785322908 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.78467411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.791056742 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787584842 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.785733969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.785630516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793487201 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786556474 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.78817562 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.786169656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.787129739 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.785778449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.787596035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.785451521 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.788345961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.791834149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.788533331 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.794670102 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.786787363 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797574749 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.786182616 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.788659989 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.793117573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.783225909 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.785189345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.787544914 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.787853134 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795825713 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.786311975 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.786080357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.790242726 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786611642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.787510999 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.787088827 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.787789515 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787210649 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.787180315 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796730305 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.787504822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.790503163 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789460588 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.784380018 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.788118433 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.786550775 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.786535397 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795114499 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.788243812 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.789770674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787320864 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.789726082 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.787152286 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.787513069 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.787245636 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.784500168 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.787983433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797205597 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.788601435 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790773863 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.787543557 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.799991585 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78880842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796347779 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.788408618 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.789120411 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.789333112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.787838714 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.792291572 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.788720099 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.790924171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79110003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.79110186 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.791459615 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.789039705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.792535299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.791663386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.789274496 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.788784512 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797251547 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807054465 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.790184511 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792370604 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.787272346 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.790795725 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.793035437 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.789820133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.788990059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.791122061 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797461151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795054187 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.791691211 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.79008548 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791469393 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7903035 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.790064764 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.790317837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.790278713 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.790985746 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794064605 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.791118289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79753863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.789773446 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.792303192 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794400406 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.792197534 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.801318097 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.791561315 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.792682461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791228885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.791672343 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.792766193 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.791922449 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.791362163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793333634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791805583 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.793454412 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79585088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.796925685 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.795676669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.791496703 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.792518446 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.792998096 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.794157568 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791416254 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.792189995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791849829 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.793865733 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.791641999 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.794547806 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.791459164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.791780774 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.793728385 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792494717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794270077 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.797720633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793382347 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.789175266 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.79255331 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791851253 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.792948058 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.794256467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.804006939 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79519321 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.800488607 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.798515663 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.795417799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.794424225 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795948204 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.799122528 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.791843994 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.794787809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.793471172 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.797076061 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.793836266 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.796897494 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793973758 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.803012186 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.79483188 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.795574953 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803610158 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.795399013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793530173 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.794982647 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.798184255 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.79557221 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.790793883 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.793300287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.793495853 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803849932 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.797691726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794760955 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796924981 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.793478632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.795169622 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797940504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794149346 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.796206084 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.792793628 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.796102071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79445414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793740824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.79210506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.794899148 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.795228754 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.797058392 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79988919 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.791476471 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798083833 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.795296396 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.796657855 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795098616 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793719151 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.792098809 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.792723164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.796727262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795885603 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.797454686 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.798572135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.795639883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.796587407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.795540399 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7966154 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798539827 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.803444374 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.801742403 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.793566967 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.795489764 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.796360594 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.800480227 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796907257 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.795981457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797585902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.799521522 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.79531375 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796819858 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.795294048 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.798970109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812338194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.7969234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798643625 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79827455 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80284204 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.797334924 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79405757 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.795326019 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.801789345 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.799938186 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803204521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.797827005 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804798756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797797773 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.798540371 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80028901 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.800161015 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804072097 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.800917293 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797538384 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.797059483 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.801487572 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.813034628 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797180516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806948768 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823556161 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798776547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.800254107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.79769714 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797395333 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.798783952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.802209298 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.798265117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.798014396 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797930295 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.799337719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.799050721 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804277009 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.800884604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.797600427 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.799263688 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.800063301 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.802621253 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.797499769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.799555274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.798526346 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.799123817 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.799099989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.799204349 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.800733926 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813084697 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.809947292 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.799780972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.799618049 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.797241941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.804822021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.802150466 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808560922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.805862894 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80033579 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.799989966 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.802363144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800232579 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.797695975 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.802168612 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.801508308 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799986613 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.798116557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.814525831 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806797959 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.807453387 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.801810338 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804352265 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.800625988 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803388856 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800704528 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800569993 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.803982752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.800608649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80343067 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.799714769 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.800557257 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.803599697 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.80705593 seconds)
  done (took 1067.145159239 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798292139 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798835013 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798835845 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798734021 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799145976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798245645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798967423 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7989675 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798111957 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799311167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.798409365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79863444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801909776 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801237264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798824529 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798508697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801076042 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801104344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799032673 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800885125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.799150535 seconds)
  done (took 39.52564427 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.801984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.799148175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800590646 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801981379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800039956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802642885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800532141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802473039 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.802706758 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798791402 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802789918 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801486308 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.799626811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.800079832 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800011321 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802813037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802169236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800131777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.802613505 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800476525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802936646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800659829 seconds)
  done (took 41.368154577 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.80286459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.804861245 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.80250619 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.800685258 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.802706059 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.800781374 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.803577454 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.802636082 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.802877003 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.807155241 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.802549485 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.804298488 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.809999447 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.805852621 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.807143703 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.803210855 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949538811 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.804882559 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.805151343 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.804634763 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.801557993 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.811853709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.802547343 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.80225261 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.805089066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.804735517 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.80498954 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.804862776 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.804705312 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.806617523 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.808846919 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.804974603 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.806063664 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.807390025 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.805991945 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.806627112 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.809085468 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.805938657 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.803216651 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.805823162 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.81483297 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.82166789 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.80746123 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.813809128 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.806978034 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.806746352 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.808566227 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.812679415 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.803598639 seconds)
  done (took 90.380233866 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.805476455 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805939498 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.803367207 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.803225958 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.803307769 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8031478 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.802587808 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803673182 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.801243587 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.801387974 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803312676 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.802461243 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801427127 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.805522159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.804981331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.80288879 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801509485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.80277244 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.802225696 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.802607728 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.802454452 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.804994103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.804884189 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.802948941 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805437554 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.802093727 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80227065 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.806100779 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.802927353 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.802609859 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.805808434 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.804944788 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.805510447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.804000809 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802861722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.806039718 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.806447712 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.803474266 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.806222692 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.804085575 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.805793343 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.806254082 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.806577808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.806117519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80347411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.802528458 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.803755562 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.803359952 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.802746465 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.805926266 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.806005273 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.802765219 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806671939 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.803124527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804624555 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.805876561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.803292413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.804039097 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.806214989 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.803295872 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.80373968 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805893867 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.803931326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.805794126 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.806427777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.803744143 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.805978743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.808963169 seconds)
  done (took 124.433145213 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810052994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.80849163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809795754 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808647382 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80840318 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.80894059 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808925926 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.808771898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809875262 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809407744 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809807914 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.808692908 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.809912642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809641753 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.80902204 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809593759 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.809946994 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809452077 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810361533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810090608 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.810946341 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810392061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.811189231 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.811035059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.811644874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.810156206 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81109396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.811093265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81165609 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.811124776 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810731935 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.810593116 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.811371462 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810880592 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.811727021 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.811587601 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812158029 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811788287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.812027917 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.812030477 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811554497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81246946 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81242016 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.811855758 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811647804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.812194515 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.812432539 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.811928794 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811641984 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81123089 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.812289749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811615202 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81274707 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812600856 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812050832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.812554209 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812321043 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812533444 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813064304 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.812615865 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.812819905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.812663602 seconds)
  done (took 114.032437951 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812820253 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.812615535 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.809999867 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81077803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813129505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811126863 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811870795 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.812674241 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.812936002 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.812633357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811974834 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810315559 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810522861 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812471895 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.810541017 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810220853 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810648502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810869101 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813007599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81080993 seconds)
  done (took 37.983281961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.810857933 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812886384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.810944675 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810707099 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.813468482 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810824015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.812689172 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812769837 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811475644 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813233553 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81368338 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813932709 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812129608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811540612 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81296304 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811017745 seconds)
  done (took 30.746632627 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.810503345 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.812430472 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.813697473 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.814178759 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.81112849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.811326582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.813123693 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.810182122 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.811358749 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.814172479 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.813820126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.813214267 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.813133943 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.814082195 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.81174693 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.814734322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.810911958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.811209588 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.813815159 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.813183416 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.812770959 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.811766814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.814574772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.813315917 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.812694872 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.812424108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.810967267 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.812247147 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.812148193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.814298769 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.812003865 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.812970781 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.811632559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81270148 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.816021422 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.813241471 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.814756513 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.816435465 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.815139023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.815031224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.814592402 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.813529986 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.815613056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.815622352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.813372161 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.816407288 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.813187826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817003313 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.814840217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.814836421 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.816175104 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.816743976 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.81556881 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.81599095 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.815759314 seconds)
  done (took 101.501751835 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815558659 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81585969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.813128267 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.816416461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.816149633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.813438297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.816313332 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813062664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813405394 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.817042704 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815290711 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816502794 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813922529 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816618596 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815548794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817459625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814030547 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.814565256 seconds)
  done (took 34.427769196 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815253393 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814561737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.816943726 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.815134163 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.814459911 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817003524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815425719 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.817305723 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817720512 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.81530166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81421409 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.817622211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817272938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.816994313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815766348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814920912 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.818362942 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818096819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815050181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81529799 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81899332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817564397 seconds)
  done (took 41.714459438 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.817832963 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.817411079 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.834713153 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.85877025 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.844601442 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.817974819 seconds)
  done (took 12.747100216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818859847 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819022694 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817332792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821296235 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818183691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816199385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816607258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816988431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81925836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817569062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816756271 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818799849 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819737931 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816754585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819421336 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821651808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817178794 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817425076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818040323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821047468 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816655064 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820068227 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817641732 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818349981 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817478117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817987104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82015886 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819347988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818090825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820856316 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820902475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81801616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820657118 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818197002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821687725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82104657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818615161 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821090055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82017893 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817943264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820667851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821267363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82089132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819079579 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822031237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819126221 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819069511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820208863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819319437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82347572 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821815673 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819962606 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821292374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821559525 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821728639 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822515241 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819501744 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819664933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822728236 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819866246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820464608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822760013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819144844 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819476765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822556165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81954294 seconds)
  done (took 121.852050152 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824072108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819521704 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819985688 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820219641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820204282 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82326743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819901828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820017573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82010305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819889181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822390615 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822972593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81960867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820431785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821482733 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820172922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821556066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820337423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81987538 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823271018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820433699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821363517 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822224983 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819838938 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821196537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823644058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820974502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826117208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82051895 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820838709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820926905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820149407 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822170153 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821884548 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820953021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821170488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821528326 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821473756 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823105969 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823668921 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821715947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824392903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821343268 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822584833 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824656041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822325702 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820904907 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820879144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82137336 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821944998 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821918907 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822518588 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821084972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822075229 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821429719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821409968 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82106632 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82225658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822056223 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824771832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822292685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821784265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82415134 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821503664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822301536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82171897 seconds)
  done (took 121.992829315 seconds)
done (took 2486.488533112 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.892634042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.829385433 seconds)
  done (took 15.483410896 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.985033863 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93736847 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.82119116 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.828082822 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.821744278 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.818750463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.843608408 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822275524 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.823640294 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.822710884 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.821976238 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.00907477 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.827921347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.822527132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821880522 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.917179859 seconds)
  done (took 51.509160452 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.825768028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.826335058 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836652714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.82788797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.825081502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.837165542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.856718395 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.829360297 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.860110572 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847759206 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.893893889 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834119456 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.827389373 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874461833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836787246 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840214904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92472886 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.898478055 seconds)
  done (took 35.063911872 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901745127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.829454955 seconds)
  done (took 10.4992084 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.851597652 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.837219581 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.839076917 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.821542436 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.830411035 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.86968527 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846463352 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.869054143 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.854533731 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.849465052 seconds)
  done (took 70.234485863 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.83215125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.82825189 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.829651151 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.824812317 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.819434689 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.824846515 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.826640066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.827010365 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501486228 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.860596154 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.8341751 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.833306512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.82720364 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.828989176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82455309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851888867 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.994272717 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.824372533 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.824580904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.832656172 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.827485944 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.886003589 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.840410719 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.827715223 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857248562 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.504783545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.835974638 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.835034704 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.947748162 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825494313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.827076308 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.829281639 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.830269407 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.206335038 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.147772696 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.826673894 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.837658505 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.834879986 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.825493416 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.940649645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.828559409 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.834293515 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.760176351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.132553864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922930982 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.868971244 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.173872469 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.830640711 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.829059458 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857738 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.82938169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.830804041 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.841694956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.34477315 seconds)
  done (took 130.396838692 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833211389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.308238011 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976680159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825947374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114834896 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059650624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826351049 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873730333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846847005 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075809183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002656937 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942065255 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824993041 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.822424423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821607354 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.822286538 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971014679 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893357949 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825690832 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.825960438 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858119055 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08868866 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951298765 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.963750848 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.850050126 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04816361 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.951136459 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943506337 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.825049599 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.823772602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892472317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831878616 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.828701576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826518507 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990334488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928451812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920041717 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.826549055 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873422375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82471493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.858413433 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044264983 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93608328 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.962648211 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072956036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052296347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.826751848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.824720399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.83433197 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.017450666 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039594024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.07814233 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.954174282 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830313042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.164667228 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.825025592 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829948243 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075082938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0583475 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938057613 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843867797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.827833457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825692275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140012703 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.830611732 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93336306 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.216322619 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.827568594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.934036731 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94007162 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.059412533 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067779719 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.856249754 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.851418227 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.864376133 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11019359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897723005 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080786953 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832292578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829403791 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920421357 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.832274921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.999121186 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145908822 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092651569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868680953 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.828184339 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.828358219 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073693404 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.076739984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099417342 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069765674 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.99314053 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.876882604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828360967 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.826167099 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.868882517 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960389619 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833324452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189795465 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074360559 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.602379771 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859575109 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143067275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965563892 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834312292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.829096016 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828553369 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034582513 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870677481 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829914545 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830709492 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074914488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.771702892 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.935200327 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.532899735 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89432521 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.831882096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093659621 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83389876 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077911994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857347919 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140750544 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327075606 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872442065 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023756379 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072915511 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.835626161 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092137984 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.142158621 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952880309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079220179 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.564426325 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828251447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12134599 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837403962 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851747449 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000146177 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836361432 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983184291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838020207 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13817234 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855267331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000147041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.082706741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10482159 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874437497 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881622547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.878146802 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963791817 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831741404 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.975571295 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.014555536 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.945583265 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.83243034 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405212483 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.82977378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979221104 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.128667901 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855578503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901934541 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.832228394 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833740752 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92393698 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857870471 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.427659071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.831830667 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.001355503 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.822912686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281627527 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.831049459 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138773139 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041905472 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832913451 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.834837469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.632323309 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.832789951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.974913582 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991717995 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28408151 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830940459 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048528745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834444546 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963866139 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837973505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.833601475 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182992216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845530583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.835015034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.844142835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.833521385 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833062912 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059730195 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860448537 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.554200951 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971405251 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081419325 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.144380837 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.094620577 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882330272 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.836022829 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.095291303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862135268 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901330155 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834534486 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857846985 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075921068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83555798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058689546 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119034157 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.84904992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882595906 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.835073297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905556951 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.833318926 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974363293 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933291185 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.836410169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.833212475 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950736278 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960872958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030437828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.834903064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.839086458 seconds)
  done (took 945.564164967 seconds)
done (took 1260.510374088 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.833681756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.837188848 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.823212728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838079379 seconds)
  done (took 29.109591381 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.84158345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.838929964 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.841102059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840552022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.841633913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.840040224 seconds)
  done (took 12.819723531 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.885992206 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.83656713 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835987432 seconds)
  done (took 21.335444126 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.908072308 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.242770728 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947517803 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.278622292 seconds)
  done (took 10.152700949 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.841851533 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.842307348 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.841852403 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.843259187 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843140438 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.844643898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842361372 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.843186672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.844469858 seconds)
  done (took 18.365209235 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.105468611 seconds)
done (took 97.662693189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.715632987 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.849970225 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.033140616 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.862884831 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.890677877 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.854638328 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.898251474 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.96472302 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.82481911 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.875739517 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.785075342 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.879420625 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.836625116 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.857324118 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.862844049 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.050280736 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 4.83249615 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.865648379 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.857499393 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.340314608 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.211562235 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.937583174 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.132308243 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.213804202 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.862795424 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.42239545 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886410555 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.918742533 seconds)
    (29/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.961919559 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.938542044 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130752377 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.132753183 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.13201892 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.823222817 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.804143289 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9684309 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847503499 seconds)
    (38/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.977606038 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.825048712 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.90427191 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.839396435 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.960653608 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.117665538 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.040263666 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222894689 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.867549921 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.960653136 seconds)
    (48/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.902524483 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.924253026 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.905520629 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.919631808 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.392838048 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.281133773 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.840407559 seconds)
    (55/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169765645 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009723324 seconds)
    (57/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967017441 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.002953425 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244665818 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.94255806 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.864753052 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 5.595162994 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.97526848 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.395934781 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.93058794 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.840580636 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.973659536 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.880171413 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.868011207 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.154565776 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.819601485 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.558542029 seconds)
    (73/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412415652 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.926392096 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.5464097 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.795534917 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.744949226 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.935637862 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.279722059 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.495153671 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.114844635 seconds)
    (82/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964284276 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.352381382 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.187147806 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.103118164 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.437288122 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.346496456 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.841232115 seconds)
    (89/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.983329118 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.382217737 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.009813812 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.024870184 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.276661219 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.261744089 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.842908197 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.203386127 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.852309981 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866532247 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.211658437 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.747201321 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.052086552 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.841983189 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.841364225 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085856389 seconds)
    (105/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.751818766 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829300768 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.866101972 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.826426422 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.262732345 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.918767975 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.028797456 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.207484523 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.852368227 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.175875927 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.000909831 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.538620604 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.129296446 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.947181951 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 2.291339521 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866606167 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.099301121 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057200556 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.059774965 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100982614 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.927393229 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971631 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.444589993 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.144470406 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.245242987 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846124146 seconds)
    (131/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.067891136 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.954457615 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.869730105 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108416119 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.498109504 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.828448849 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.826100774 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.242146833 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079931825 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.132722043 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.872976758 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.690305884 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.834901701 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.212893707 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.832829302 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.267619411 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.106665912 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.693967065 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.87420438 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.012910549 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083658275 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.769977156 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.983904469 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.219805229 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.956404855 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.358219444 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833742685 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.905907561 seconds)
    (159/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.240024349 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.636328606 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.23543263 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.514554507 seconds)
    (163/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024023762 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.102074587 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.902335332 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.61979899 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.476206519 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.879765785 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.322754788 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.955691117 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.978411473 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.533923054 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.12091141 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.938923221 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.006506285 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885586363 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.476757533 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.250491787 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.967719853 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208703026 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.901032832 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.081053605 seconds)
    (183/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.998475355 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109627751 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.912845056 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03886339 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.996598505 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.94741205 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934709772 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.282091036 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.860689072 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.167151449 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.40674039 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.235276359 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132160457 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.859738152 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.359323182 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.066054424 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.86071191 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.575197993 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.055090597 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.853691278 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.923879509 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.738500008 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.841605796 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.334809307 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983921043 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.940698637 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.856548519 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.936770137 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.878600171 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.452703478 seconds)
    (213/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.987923907 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.857188183 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.411899439 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.001456517 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903565915 seconds)
    (218/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.196816695 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153663646 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.920845323 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.841342347 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.272367493 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.870538963 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.732962396 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.843981639 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.908831272 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.168637966 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.852910828 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.944756768 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.026139358 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.872133179 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.226625824 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861882077 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238510797 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.848873204 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.455028898 seconds)
    (237/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.356514044 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.044373657 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.087096746 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.908644356 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.297998587 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.88826442 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.157768215 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.461514641 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.1530059 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165662501 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.749211155 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.93397279 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.777086041 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.895218958 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.858286494 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.946217859 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.031411627 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892521099 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858045833 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.296695081 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.967103185 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.819522265 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.889323752 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.271396983 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.09728701 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.933093753 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.383306135 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.196573981 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.946869532 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.977347563 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965418383 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05668495 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.197104455 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.913154725 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.923053759 seconds)
    (272/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.470098987 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960077609 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.862875828 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.456178175 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.098886279 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.171305739 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055431009 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.947161008 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.942951315 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.847420945 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.99967526 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156747303 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849269813 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.053912771 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543447985 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.94311576 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.864344768 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 4.812681035 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.905033501 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 6.860433997 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.996079326 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.849719426 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.682746979 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.967604925 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015844574 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.382738128 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.866274533 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 5.404665196 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.893235454 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.245295909 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.864757306 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.508531614 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.931604058 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.87569235 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.933839 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.056436919 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.96538277 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.875228598 seconds)
  done (took 1020.236058803 seconds)
done (took 1022.027404017 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893550885 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888547698 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.871432136 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.893038605 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984403277 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.901023428 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.883069716 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873643726 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919890339 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.922752341 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.871383379 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.899741403 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873902824 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874005067 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871795722 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887364787 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183780019 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.902327592 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.890532373 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882122494 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890277452 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.872594144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.92285148 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.90139129 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87682039 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874975674 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.876417262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893191292 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986111557 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.876308175 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.876065256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884735252 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.185109965 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.901575851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868318887 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894738793 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885315151 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884356033 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.877953486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.905548721 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.329950261 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.881663679 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876354795 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.875031418 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874476498 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.879482238 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.877231413 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.880207847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888433539 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889404369 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.323558429 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.898996685 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879820826 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.875036055 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.885762831 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.875495496 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877115053 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890688146 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.89510957 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891625589 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.177007837 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.90778098 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.875972969 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891731938 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884181316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.362141746 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878163113 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.879527989 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.327858293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.887461993 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.364033118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.891993174 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876650768 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.890588563 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.908645588 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.186148079 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.901174252 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.874723495 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882762013 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.876237135 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.885614003 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888637086 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.881318864 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876725251 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890310112 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.905737111 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.887258733 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.878841114 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.885258307 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.896970327 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88456592 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.889268009 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88061047 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87222823 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.88606742 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880801145 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.88112844 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.880335337 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.881929096 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887940374 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.32704946 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901543907 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873484024 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.87418834 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876910376 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.89241777 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327848978 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884961189 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.899154354 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924796416 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.878783649 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.180448615 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.910623847 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894226777 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.885976175 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.880831747 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.873373431 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.1800573 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35527531 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.900744637 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.880142826 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.878139716 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895658465 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87957321 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874341617 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.188533701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908985753 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893074838 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.000182837 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888906949 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91055181 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.877967606 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.882309316 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.908455666 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895432317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910891467 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.881645823 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895399976 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.896745575 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.876391544 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8913187 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.890278192 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.881124607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885073244 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.874160211 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909158652 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894902855 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892302466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.900088219 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000377269 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.876420839 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.181786824 seconds)
done (took 295.105040529 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948972913 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866831779 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.982305177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.876126363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961731982 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.962693421 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.873044577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.873696959 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873041977 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.278465267 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874382502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.873646607 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.8677393 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.873990962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960702137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.875685745 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.873519815 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.218801472 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87740164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.947584679 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.871468781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.874124615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.876527688 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.257734709 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.877056494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.875448706 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.948488373 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.876724523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.223537121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.874630664 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.876596678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.223862712 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.968010187 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.895985597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887294816 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.885191839 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.962466169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.881620859 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.95971193 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.961467386 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.976980886 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.918402774 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.877285677 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.873909836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.88023591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879029635 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.874705194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.906031881 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.869596964 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.885673284 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.22022784 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.887471539 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.87748133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.875121029 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.875390342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909085559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.87600844 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.880008572 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.968619121 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879369927 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.941977173 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.258836799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.257419281 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.878520562 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878265006 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877384087 seconds)
  done (took 184.893772568 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.94836281 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.953599945 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948338855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.883940803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.928647542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.950539004 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884290035 seconds)
  done (took 15.311055928 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.88652822 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.878828268 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.929672461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928954683 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.879556386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.056338991 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879435262 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89127264 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.877267187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.93328371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880099325 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880036662 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886300044 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.873701694 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.928563423 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.892036713 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.995777993 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.881603191 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880982871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.037140299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878092969 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.887135772 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.935742411 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89274163 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.881030386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.886586201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.568693272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881664799 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877985198 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.88133745 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877995384 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920419854 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881077074 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.874601807 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877657225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.045331205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882044751 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878264934 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880701081 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88154709 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.88143498 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.88167153 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.881852042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879072605 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.881315938 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.906586954 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.881826514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881915217 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881056098 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.882955463 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.93451506 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881904422 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.879669601 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.880042253 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.939043913 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888853342 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882872958 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879182134 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.883012368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879240684 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.03960832 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.931568021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.881393847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931281082 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882737572 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882809044 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.882670261 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882027993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952097992 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.883186657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932198785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881006872 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.045284047 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906679436 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883993515 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.885516234 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886132831 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.884034283 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.877774679 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890210086 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.880729609 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.885749697 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.890233011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881175507 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88229018 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.032248404 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.021603563 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.881240577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.897612835 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891687216 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.881257956 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939169935 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.884557235 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.881876064 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936694558 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.0002504 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.941876634 seconds)
  done (took 207.266153724 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.888264244 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.891390197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.885606319 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.900008401 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.884789239 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883566923 seconds)
  done (took 13.152426076 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.886576132 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.885459904 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.883577702 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.884636927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.884771968 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.884773626 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885845796 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885693016 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.887990073 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.88434853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.885322963 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886406055 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885136486 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886003109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.886469252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.88454519 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.887265269 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883142943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884510917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886124001 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.028924709 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.885698846 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.30952273 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887899092 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.889004727 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.884838565 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894005847 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886123444 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.886026621 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.895203735 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.890837897 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886238212 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.887109442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.892174364 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891157993 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.888347753 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889306284 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.887954142 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883047242 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.886403394 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.887867681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88749579 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.886408138 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.888684725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.888033547 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.890853392 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.891203306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896960922 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888582808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888746828 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888366606 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.88691777 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887936333 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.888125979 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891674465 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.89250506 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891907223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.887833919 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.88883291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.888877371 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.88830475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.88730292 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888937848 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892218899 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.894641262 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889406451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.889381791 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891769955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888661618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.887633966 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.888618372 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.88599017 seconds)
  done (took 139.32005827 seconds)
done (took 561.768411737 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.145527251 seconds)
  done (took 8.966973744 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.974959494 seconds)
  done (took 8.891778712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.41308389 seconds)
  done (took 10.234288996 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.889477345 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.896713607 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.894315187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.889988577 seconds)
  done (took 29.404252809 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.240748218 seconds)
  done (took 9.062293322 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894919738 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.880951409 seconds)
  done (took 15.664209138 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944836968 seconds)
  done (took 8.767576284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.997680947 seconds)
  done (took 8.824074377 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894917884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.8867762 seconds)
  done (took 15.617305203 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.869184118 seconds)
  done (took 8.691123223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.607763944 seconds)
  done (took 11.430416693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.878693985 seconds)
  done (took 8.705959184 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.936046213 seconds)
  done (took 8.748805843 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.10863453 seconds)
  done (took 9.920537914 seconds)
done (took 164.749169808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.875848144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.873391767 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.874117537 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.873062087 seconds)
  done (took 29.309244613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918257411 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.916386258 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.916452157 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924082026 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.918521511 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.930524261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.905692544 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.905526693 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.924689645 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916373076 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915454545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.915137513 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.912639662 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905940453 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.915808085 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915210151 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.924497569 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.914951408 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.906530253 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916522443 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.880831201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.925890645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.917418765 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.881232743 seconds)
  done (took 47.738711482 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.078244874 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.952785893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.033844353 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.933804787 seconds)
  done (took 9.812031526 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.931677162 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.934356002 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.94614276 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.983888927 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.011816886 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.943173471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.903949928 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.904052808 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.888959029 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.934360368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.010014926 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.950189105 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.02077908 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.880752321 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.07755194 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.882010535 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.881795045 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.932995579 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.985137502 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.009310017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.881878143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.933100661 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.938198345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.951744584 seconds)
  done (took 48.533318962 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.879988354 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.888910168 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.887193334 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.881015263 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.88054376 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.881691851 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.887011309 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.883081047 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.903545438 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.882370549 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.880071034 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.882167237 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.881406912 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.881864102 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.882157849 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.894535342 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.89507795 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.88276037 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.886456958 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.888021721 seconds)
  done (took 39.525558397 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.875457328 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.73144443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.228201866 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.132298253 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.876490008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.879737309 seconds)
  done (took 31.540667281 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.896589892 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.949727613 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891883669 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.941223008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.026612068 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.896475473 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.883750178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.952725566 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.997864982 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95769559 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.903964435 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.911126487 seconds)
  done (took 25.02675456 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878357538 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.880833813 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.880814652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.897193328 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.895352662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.891394273 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.890910698 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.878327138 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.89933126 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.902828263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891885036 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.896394945 seconds)
  done (took 44.505139436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966657931 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.922634912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.887217174 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559627096 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256356528 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089853529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.52931027 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210154933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.882929261 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152732682 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922613162 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98282117 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13461299 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451772105 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920327666 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.338911328 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172170152 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079666261 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907437108 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552978212 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941522818 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.131223617 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.624727526 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.936163047 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091948115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.013773578 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.141064654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880494693 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01070838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921978272 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891186903 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879179265 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154985474 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257611017 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98525402 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890425524 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499776373 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.598058263 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.866081596 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.681771777 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590459092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.003843339 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890698195 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881140431 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814789548 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.106457634 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265476068 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.885709812 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.590243365 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881211283 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889956257 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973027921 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.88250582 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.694151998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791856605 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880005658 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.876234908 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883215933 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445648808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956728602 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145827865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.864532353 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.973360904 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.549627386 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258225096 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.030079718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.885991679 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884487305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816282012 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.631153029 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939129703 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2112832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.903805754 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531499615 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178968052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.93204391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824971952 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142081409 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501893944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.864628387 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109967301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881835138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817129073 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.825123482 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816112222 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134683178 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916563993 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.638607587 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919391554 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.208312727 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892959383 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90019072 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905177124 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105014782 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.025683486 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882176808 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.637054442 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037298893 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907082046 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211950115 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818659642 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.887490863 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141553776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.096309757 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041008102 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.381296306 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037911296 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.525965359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.945270949 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.102550764 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94178042 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.144622268 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939612899 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979516519 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942442013 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886079947 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172429039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.542112395 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.031190179 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.905568739 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012074445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.194516311 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909766154 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967017578 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887820617 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884572045 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653783878 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43603532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.884985636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.887777075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038891173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941830498 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.886332165 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834393965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509823082 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900932058 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.900766789 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109448743 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.532165573 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207585795 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819409211 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235379374 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97499727 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.107725885 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523419694 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965909885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147290848 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033277976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.078285607 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940242169 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902389691 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981977372 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905941309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.112617871 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182945493 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.884554164 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885473446 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653119306 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922228776 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894133558 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.888297616 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636671567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146590775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903077492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889259973 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.766658023 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891824541 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941443313 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883159923 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886872559 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.41781437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590362631 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.885032116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.462827745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10254251 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8880557 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.61529598 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004967064 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.969075194 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151183544 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941068287 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.817646859 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.596457753 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.573190148 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881230751 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811145138 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876117989 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883208372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884552164 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.071386268 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142178899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914701475 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.555055103 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932859477 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898615361 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.892967901 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888863361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400472123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005677168 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.163387481 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945565781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03565418 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902198588 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821561212 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891917531 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892480395 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887144948 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.885991014 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918948872 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.574558517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269079191 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150204583 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498484654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903863385 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.602807542 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.949510367 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.891868502 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.75266949 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136835415 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.929833243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902914879 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.900906487 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.654772929 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.599274298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459480236 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200506039 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184326174 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316522083 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.184352908 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92874965 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224780086 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82340059 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453418577 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946620177 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229246597 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832854594 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972217516 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.525848167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24423302 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90709006 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119321217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270863961 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.776087089 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91574233 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104859477 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927625165 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131676751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862672279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.176798884 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032550079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.594735972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101447344 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223073208 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.569966545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.061051484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89246541 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561051464 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974926262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.60714086 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.06684319 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.153427794 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.838319551 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395146381 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90048266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117833959 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233682858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.128081868 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.024114937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829316265 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903266461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903933674 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.894669692 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.891491337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.780560799 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.148448051 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904741076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827820711 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077415769 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18629484 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.799112043 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.899963727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893621676 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179651984 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515461806 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073045626 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.086163773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.421007223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901369544 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826677559 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826597291 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.588740316 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898812558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86703275 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092256968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.994405689 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811080317 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045435642 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980498923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146905596 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.903091936 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1536791 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16552321 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.592606159 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914857771 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.989092622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551786575 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.011675049 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896125443 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131973757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648749658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123959335 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.92071854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.846190127 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895408412 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109939648 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896318659 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801555586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133703884 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621626404 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.987827238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204200343 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968124782 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.800327567 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946920646 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.988471529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906941016 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975353158 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907412559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.907049531 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90757721 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942641395 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.811966726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025397411 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.910905245 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990265164 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026604994 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425812445 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903313585 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16503617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247823459 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219026221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95867613 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898077507 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897719019 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83109611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045206181 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123046722 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170203708 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029520705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.012428387 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921440457 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.581003991 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194590452 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144664014 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172845374 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.793635728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479148909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944511603 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.897833427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907970049 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.108219011 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101851119 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192295634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047562667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061476345 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259194837 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173668095 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896698893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896271796 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487747797 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.990004266 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569770757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.943426094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.819702797 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182223345 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909797673 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279869563 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922722923 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.054851848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.669592178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647501584 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195360104 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.88751487 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960271155 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166686242 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276861298 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211701977 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966817238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908069765 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.003895648 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046336875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.794912602 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898162096 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900248639 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.11245255 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607243688 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904576556 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167750787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210195362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.891572848 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794812732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916901062 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.90339264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11743612 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153317342 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146611527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903264106 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899676538 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.708207206 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163362491 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9510722 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827481103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.89821096 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992717665 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14416556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916513114 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.34599313 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.604630429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159833777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.896437443 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915713352 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129116263 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259933475 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21439384 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.428833983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098785078 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.481627894 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.54601038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201532791 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.89954838 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.128515906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202973235 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.899003297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060023386 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938410571 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.158482339 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210155249 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.983577268 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617047053 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.876549798 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243236653 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454766492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841214731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911855659 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.963880315 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90262998 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033950509 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915075476 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.798911861 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14656527 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.668473888 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175922192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.909789235 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.891039532 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.673060768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.278612286 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94439144 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046826377 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90444972 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.579643102 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.25456644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160603521 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.060899992 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.916531742 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.908425785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904971866 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890810057 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101161434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.101070553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175340209 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.092486808 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.944520683 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905905815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.118306015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113229889 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.819866441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052574958 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066305509 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950970406 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.80948832 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409797583 seconds)
  done (took 1687.267792382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903513128 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.917003362 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.98350113 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947852358 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926300663 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977746985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.904906863 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956008767 seconds)
  done (took 57.358019443 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.899858741 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.118743689 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909989215 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.901539751 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.909715015 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.90078658 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.075212867 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.91258407 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.9099668 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.910690502 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.901613185 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.899191213 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.218413473 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.925841947 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.900788892 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.889802819 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.909142931 seconds)
  done (took 74.936919847 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.901648477 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.912933782 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.933148061 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.917243879 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.980859741 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.903776572 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.711147876 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.912776482 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.903536391 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.92636697 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.541052751 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.924727223 seconds)
  done (took 87.310654015 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.910122933 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.907951192 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.908085824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.909095132 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.910801143 seconds)
  done (took 11.388893892 seconds)
done (took 2196.092463964 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.156742409 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117314328 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.137455094 seconds)
  done (took 6.095766262 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.051935235 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.09820834 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.218420235 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.23867388 seconds)
  done (took 10.451832806 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.191369771 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.275752073 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.11457844 seconds)
  done (took 8.422925984 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.304914889 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.909700289 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.017751335 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.902162087 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.90434587 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.904329556 seconds)
  done (took 22.553070485 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.906530699 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.908308729 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.906341527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.909018713 seconds)
  done (took 9.471021433 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.888236537 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.621831849 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.890264488 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.904135062 seconds)
  done (took 21.146395704 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.655110756 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.666193321 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.650133603 seconds)
  done (took 9.812804782 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.565851367 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.842735461 seconds)
  done (took 9.25027912 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.167135877 seconds)
  done (took 4.015051331 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043323972 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.174748314 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.373126416 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.410646919 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.46289149 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.815710379 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.223936111 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169387233 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.319414358 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.354057755 seconds)
  done (took 25.195419111 seconds)
done (took 141.643033078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.289550216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.150166027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112379736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.246446868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.132797345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.113129327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.331556425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.228025039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.75697616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753884704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.246581483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.132958804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.070727262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.143602566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.070988112 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149267841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.13185858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.302721647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.980350238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138989419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.337879834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.88314686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.086460152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.896098751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.134094161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.06470678 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.460236177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.151523512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.13246283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.472684881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.065045143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.314535446 seconds)
  done (took 174.331753592 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.683068104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.912846617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.911941774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.912305773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.390364981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913839515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914388452 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912849369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.186999382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.178906966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912231785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.36628707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915105027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.913986294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.914353697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91313462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.287385982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.705376147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.914061775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.91356079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915932537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.275790791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.921457788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.293687377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.303638917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931123937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.911363017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939913122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.920925385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914054583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93062601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.913660632 seconds)
  done (took 209.698008985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913256884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915104481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914190758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.914720842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.91563339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945489776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.916229279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.91547318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.497689038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.48831629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.92836429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.920920458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922628867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914419897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927298607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914960374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.919963673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.922657544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.920023953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.926859952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930081863 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.73562395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.930245871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.737762707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.923365013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923993231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.916265082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.92260811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925984393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924736969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924228651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.916477155 seconds)
  done (took 222.138713974 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118211411 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.921913898 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.922590425 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.867984486 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.922338875 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.922060929 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.917132138 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.118529402 seconds)
  done (took 19.57876928 seconds)
done (took 627.605439083 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.384040613 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22850757 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.097826135 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947026139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.185195467 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.979349201 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.943124324 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.006439695 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.130931232 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.017196081 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.595379651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.962188706 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.683459498 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.96546349 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.069491405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.000708313 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.49255573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584011576 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.12432675 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.017350413 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.112156331 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880702082 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.018103843 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.187886579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.702332985 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.929682358 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.134275436 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.499529643 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.956258897 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.109003865 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.65605893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.341092931 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.954298452 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.941797133 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.994229102 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.977581484 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303059078 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.95367169 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.069779741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.679817272 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.010753405 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.017859919 seconds)
  done (took 106.700960065 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914932811 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.913458529 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.911102177 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.913719625 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.913690722 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.912776549 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912150264 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.91166941 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.913324614 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.914294369 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.91178433 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.914879702 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.91256663 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.914770511 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.912674966 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.914031277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917542575 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.919229862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913346335 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.913244336 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.914037424 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.912662704 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.914123358 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913259803 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.914650933 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.914153508 seconds)
  done (took 51.630379662 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.925242974 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.069032695 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.149598111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.945497632 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.925668749 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930002785 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.944706013 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.930455854 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.927956138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.928096084 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.018536446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.931892339 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945012156 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.148727304 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.942106476 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.926964214 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.926876038 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.927331924 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.076759147 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943112351 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.946998964 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.932635128 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.94553383 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940615618 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.928734325 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927736296 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.931131032 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.365711874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.936312092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.019441086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.970609384 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948696955 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326938451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.161724021 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.981732792 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.938356512 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.928317337 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024600315 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.932948494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.927528882 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945875648 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.933019379 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.153215139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.429440819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.941707556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.927967406 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.378948761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.033405898 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.969896781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941419221 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.155728102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.946329111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.929146237 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929190892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.965166318 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.940748389 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.928085523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.241143316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.940687806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946966973 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.934380735 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930082106 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084999564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.937944561 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.073551982 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.938002338 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.936680021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.929322841 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.15359349 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945423376 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.431400458 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.944389864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.932197067 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023410941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.082626809 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.40752512 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.944934631 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091650976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.34139316 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.95429769 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936579538 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.357871693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.958047232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937256265 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.931693635 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.931161297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930568175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.973057287 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946015453 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369018964 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.437514072 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.255401265 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.958030315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.946144257 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.93070992 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.243436625 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.939147521 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.930339864 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146479457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.446242014 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.944555688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.938213026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.415666885 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.946081242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949994338 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.940177832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15859781 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.9464155 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.974746843 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.931033684 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.937929156 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.934712143 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.950285619 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.939382082 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.931398173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.406274441 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.041549631 seconds)
  done (took 238.731075574 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.928076778 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.936325232 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.92618077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.926459147 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.926262762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.931749198 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92678805 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.92617614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932172976 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.92572109 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.927406304 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.933238729 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927675067 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.940282362 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.953616352 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.933332891 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.53754648 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.929503294 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.927126233 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.92681869 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.576455511 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.933361713 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.926817932 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.928025221 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.927550249 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.925846601 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.933379568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.945162938 seconds)
  done (took 169.186639701 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.933180028 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049461943 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.950315114 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.96109667 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.941418378 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.930714524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.957768818 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.949728101 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938829609 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931700179 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.93152131 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.994200056 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.9458597 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.032860569 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.964433723 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.964523876 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.040894251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.940829779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.932330803 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.932481479 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96335612 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.929573514 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.994634529 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061387805 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.948981489 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.05032881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.93734097 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.935578722 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.934571283 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052786816 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.947416022 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.994323543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.964082079 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.953014474 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057889837 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.053011143 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040296411 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.965031604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.93977663 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.93370973 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.933728472 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.923743114 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.050654139 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950432242 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.935155836 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042572284 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.950071811 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936530096 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.944613271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.933395433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.949388677 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953373149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.002662763 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070925648 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.96478545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.960446605 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.961150474 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.227605214 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.943261294 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.038364514 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.929089254 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.052390901 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.952885358 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.924037531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.935201841 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.940892324 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963883568 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966659002 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.04253593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.945437016 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.041689604 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.971019326 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.946188673 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.936629448 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937426156 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.052517939 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052726637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969535452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975053664 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.969226393 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.935033477 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936628853 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.926032333 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.954387521 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.940633028 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054969421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055001373 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.944153281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.944377749 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.94045624 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.940358153 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963046029 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.063419235 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.968831766 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0358001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004871442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.011011615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.950615763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.950335752 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.941515602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000142227 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949281084 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.948967277 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.277507405 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.006352407 seconds)
  done (took 209.573297881 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.028987537 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.42278871 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988261685 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.99296119 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.21391892 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.353281297 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.699522345 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.982600182 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.988204434 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.011871621 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.145596511 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.040354904 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.999496233 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.974722872 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.39069109 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.976050621 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.986011902 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.007960349 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.990202554 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.516539203 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.294551327 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119531416 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.986839912 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.095115215 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.964641634 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.269702927 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.478738555 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.373520352 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.0208894 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.334963947 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.331265478 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665077402 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.191847786 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.228300668 seconds)
  done (took 76.941408149 seconds)
done (took 854.614674709 seconds)
SAVING RESULT...
DONE!
