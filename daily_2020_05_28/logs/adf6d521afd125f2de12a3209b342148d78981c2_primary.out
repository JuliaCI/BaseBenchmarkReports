cset: moving following pidspec: 8646
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326174759 seconds)
loading group "string"... done (took 0.578799366 seconds)
loading group "linalg"... done (took 8.041957762 seconds)
loading group "parallel"... done (took 0.169771077 seconds)
loading group "find"... done (took 1.211361169 seconds)
loading group "tuple"... done (took 1.870259925 seconds)
loading group "dates"... done (took 1.284361407 seconds)
loading group "micro"... done (took 0.19817213 seconds)
loading group "io"... done (took 0.995548303 seconds)
loading group "scalar"... done (took 39.452245322 seconds)
loading group "sparse"... done (took 12.226227754 seconds)
loading group "broadcast"... done (took 0.95418466 seconds)
loading group "union"... done (took 13.837160764 seconds)
loading group "simd"... done (took 4.803602904 seconds)
loading group "random"... done (took 9.282790395 seconds)
loading group "problem"... done (took 1.60333624 seconds)
loading group "array"... done (took 21.526495972 seconds)
loading group "misc"... done (took 1.624203541 seconds)
loading group "sort"... done (took 3.358528897 seconds)
loading group "collection"... done (took 18.165461578 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536012889 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126276153 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137969443 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121605313 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150170015 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117557596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125623686 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086162105 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.831856678 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154574104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115673016 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417963941 seconds)
done (took 5.28597661 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175411707 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088102211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079830872 seconds)
  done (took 1.205615406 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066233245 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127169878 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067636824 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067668684 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06780376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067395039 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067026825 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067019248 seconds)
  done (took 1.569184432 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073491605 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069342446 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067115446 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068622395 seconds)
  done (took 1.317229656 seconds)
done (took 5.380239437 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799908492 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211040885 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189555475 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412859924 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137671604 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181272224 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663537244 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322185655 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205397979 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095227718 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114132582 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.364360101 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124701786 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643527544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079817325 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096865489 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141055315 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449433681 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072030525 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085250936 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093370089 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131674091 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089708916 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077128834 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149468256 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070955088 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145106603 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083634206 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069700923 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221208158 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175683617 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662302975 seconds)
  done (took 10.435112802 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102228457 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099870505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069745935 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125984632 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098311002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070553832 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076460069 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068751269 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092853665 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129434747 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091867697 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109229336 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067006026 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07062779 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083832002 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197976549 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080871833 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082075505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068927287 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079164039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108180709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078853974 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08424832 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08041157 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129777804 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170047167 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096964829 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097599782 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067075181 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082026793 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11625295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127545808 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066720623 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067142959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126346385 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095316797 seconds)
  done (took 4.537597931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008879745 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09187221 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151387741 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090346146 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13565568 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065672502 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113317875 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066439501 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083573173 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239017929 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.393965092 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.625381859 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123346042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117391399 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105378368 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071441111 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069990904 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068568766 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.289201343 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09934811 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108663766 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083814246 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071286542 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069765894 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065330281 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072184156 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064703781 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06947427 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08751572 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076250427 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33003563 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124938258 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068736393 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951833997 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166993123 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068250991 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106123994 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167269392 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094356551 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140114976 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067945008 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064004344 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.294810376 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066147456 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094211794 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07226203 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067794272 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08545931 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110203533 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120301269 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065874426 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066496075 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168880105 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068298561 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082174237 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.227624389 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153443848 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066558274 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298429257 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093731643 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072603529 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06625559 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190173505 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123144874 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065457289 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069201669 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06788919 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06965319 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069408199 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367025191 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066604532 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.922668329 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070983636 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077009646 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071119477 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071936958 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065073855 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079622039 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079940403 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091315733 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070361032 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074402398 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067340286 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0670326 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067372287 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093840219 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.387698691 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067887255 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072694166 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065996482 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092208065 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098310586 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066662288 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065329229 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102541035 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070600075 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066237617 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067575259 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116780442 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070091691 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.214393035 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068496792 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08065661 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098342544 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070475499 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101947746 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080005049 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071634216 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.467445873 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066240042 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07361967 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066721308 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069090149 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067432888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08183238 seconds)
  done (took 21.855288007 seconds)
done (took 38.874308909 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242937664 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083566224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083951686 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084249034 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084326382 seconds)
  done (took 1.706281842 seconds)
done (took 2.813258717 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126395549 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099340484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065085833 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098608778 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06500471 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101147033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100354728 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086574023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099970188 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06501417 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097976163 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065272491 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064948201 seconds)
  done (took 2.263247194 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082810216 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08340762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070314287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082260216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063203692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082030882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081344335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088722193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081292393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072519913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063683676 seconds)
  done (took 1.953673672 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08247986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08361523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069641433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081726587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063339045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084743079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081412376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085322765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081900376 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074101099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063386433 seconds)
  done (took 1.952470392 seconds)
done (took 7.267353672 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07651435 seconds)
  done (took 1.168622455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53418336 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.601390537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079313472 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101069103 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193316003 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109611903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.234660828 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082111963 seconds)
  done (took 8.199514815 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106523248 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069608267 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0700361 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069425402 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069874544 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069829064 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069528209 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07043099 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071385874 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070558088 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069424089 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06966593 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069492876 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07019202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071439022 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0712094 seconds)
  done (took 2.335822388 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098293978 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09591933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074024941 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07534109 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073247998 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072513772 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075520501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074512642 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07160072 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07302932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075928548 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074274036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073518941 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064862476 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074421677 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07689076 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071564425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074931275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075350149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075731338 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076069159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064589825 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073750985 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07491583 seconds)
  done (took 3.012112799 seconds)
done (took 15.817310793 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116382085 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078125328 seconds)
  done (took 1.292850602 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078734736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079791473 seconds)
  done (took 1.262840519 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077606749 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062975629 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085758248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074311743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063694198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063270973 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083632779 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064337017 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064667742 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064206062 seconds)
  done (took 1.810857199 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065418235 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073522506 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069999467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080174849 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070760565 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064795654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069326076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06558232 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073823076 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063466031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069222597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083585123 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068312182 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085019093 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068814158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068650431 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070621651 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068112506 seconds)
  done (took 2.390757247 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063013893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064851884 seconds)
  done (took 1.241616459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067338754 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063852419 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066601194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066288196 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06416196 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062801456 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063767261 seconds)
  done (took 1.564759604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404183459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122338008 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330286594 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070820186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080453383 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257923296 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064772381 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069627356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069680122 seconds)
  done (took 2.622532165 seconds)
done (took 13.300368427 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080741375 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.0867171 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098017599 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413082333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092868535 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068288742 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113966963 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180248088 seconds)
done (took 2.256356133 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211359956 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.073303241 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481275995 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207904462 seconds)
  done (took 2.882035223 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.456282647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081762193 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077324004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067749485 seconds)
  done (took 1.810535912 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067081351 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07060214 seconds)
  done (took 1.259566524 seconds)
done (took 7.287895842 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064829081 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090247728 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064899468 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064446074 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06527697 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064535856 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064862578 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065381758 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06462852 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064610676 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064583922 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065018941 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065153019 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065193666 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065171522 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064921276 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06476019 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064902184 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065006324 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065263766 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065072914 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06509265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064939531 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065400567 seconds)
  done (took 2.7405789 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082465449 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067722036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069454534 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068905961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069223681 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06835238 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068457664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067053726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068708439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066876928 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069145066 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069143417 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066985884 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069606946 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067097736 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069563754 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068614296 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067354382 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067390066 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069558274 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069251331 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066920612 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069526282 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068895815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069362461 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06937435 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066627859 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067161814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068600132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068991061 seconds)
  done (took 3.198780955 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065613844 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061322939 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061850287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070372796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061641639 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062170536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060965431 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061451585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062655373 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061372241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062409297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061297542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061483938 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061841068 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062580159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065716591 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079021894 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061934409 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06121457 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062047694 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065818957 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061191421 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061629379 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061285791 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064067106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061593344 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062286625 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061494343 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062355957 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06142841 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065549111 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065952007 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062015787 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069953462 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065729955 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061462588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06511058 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061263213 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062182752 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061275589 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061263656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061485499 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061063516 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070394359 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061623855 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063095466 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061403994 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062361217 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061915615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063449091 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061265034 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062068095 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063392141 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062573796 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066868124 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060930185 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062362521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061139797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062063714 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061480372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061077151 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061479663 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064382363 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062458013 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078569053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070050896 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060840684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062682995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061951572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064328599 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063139059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076980497 seconds)
  done (took 5.708771386 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085252826 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088018381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066545403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066183811 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061937682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062049792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070479393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062208867 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066527577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081923284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062275661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067022532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066843573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066190248 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062870785 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067139219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070893156 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062864984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062153781 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066888226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062400084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070736434 seconds)
  done (took 2.645076828 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146072823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068186547 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105585547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073108386 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071053857 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072600046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067817337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068392783 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068928118 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06859505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068828444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06827954 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070412256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068356212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06925536 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068519432 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068169955 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068574498 seconds)
  done (took 2.498787252 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077978703 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067329499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087003732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067507395 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067337047 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067264956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071107343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072822218 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067523527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067471177 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072465685 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067690279 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067340673 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068085596 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067132071 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067604941 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067356317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067700383 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072136031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07166669 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071320161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072514484 seconds)
  done (took 2.684813365 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087028047 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067128552 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081953183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068400269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062194811 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062348012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067999195 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067215387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068474305 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066401996 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066817799 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062295437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069130265 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066890755 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069251484 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066740362 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066484377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066754446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066356728 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062393319 seconds)
  done (took 2.502787052 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084306185 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06491175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06507698 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071771108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065255279 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06562398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072038967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065650718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065325156 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086121353 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065395201 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065974793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071509199 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069049829 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065614125 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071537355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07388118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071384519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064912557 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065540712 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085649826 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065138247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071580145 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065227986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065034238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064938192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065513853 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069117425 seconds)
  done (took 3.084410011 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065336667 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065315935 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064905015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065790718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064934595 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064917645 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065274805 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06514823 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064988291 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064983074 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06514852 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064530556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064755021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064926031 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064956703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064997593 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064899314 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065223802 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06518161 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065993135 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064690282 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064762669 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0650355 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065123441 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065290358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06527179 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065744765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065643361 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064482286 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064826604 seconds)
  done (took 3.098259029 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07527001 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073411705 seconds)
  done (took 1.294547224 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063956095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078541869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061449954 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072767698 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070520884 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064936179 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071467429 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070643321 seconds)
  done (took 1.695992389 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085874681 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075552559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064594535 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07635543 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075055667 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085700354 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126425513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063974575 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074371777 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065143622 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082588817 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066062898 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074662862 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069242578 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074325044 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078130681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061830777 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069315323 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065993611 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062601132 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064660989 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077344982 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073616024 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062102796 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069212542 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091884625 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080121025 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06343639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071118275 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076450836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074210479 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060980797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063910914 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063756613 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06197702 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075037983 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082961938 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070764481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07643251 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064868342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071807568 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061809711 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072881797 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074345768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07931118 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063859714 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063972973 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061598961 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064938031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069572099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061982047 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068407572 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061349974 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076046283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07154972 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079518051 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063098199 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069919703 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071210361 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070875375 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075619691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070703718 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073842017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063629333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079423588 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073474691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075651188 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062191409 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061232449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062023697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077876284 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092016284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073829551 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06438523 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064186073 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061728236 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070917275 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064357874 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072862903 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075079309 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063567472 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068417317 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075835739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068384999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070296241 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070039881 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06218571 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067017381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064933387 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08326009 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062609036 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062096275 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065256645 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079300911 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073104565 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063407357 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064810503 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07560013 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060853973 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063986507 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064111708 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069154413 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07582381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066314698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066567141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075559285 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071557655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067603706 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069370854 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060084592 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063318196 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064432463 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073881658 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059614488 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069173168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066537793 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06248241 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073598977 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06073044 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061999056 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074572612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07360944 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060731762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059677433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06894124 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.061859474 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064288627 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075573693 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060894953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060415433 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060393853 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070001911 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061698912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069787333 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066506366 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069166561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.184286516 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063374478 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069271158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077660427 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068225616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070637522 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074360196 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070541412 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063971649 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076758417 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071157366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066392535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073403759 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068008966 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062114279 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066903157 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071142319 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062816273 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071040253 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066583201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0710633 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06433198 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062365011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070270976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064942783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065842994 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06939529 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063261668 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079190457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070399457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061746475 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062009011 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071248402 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065149856 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063800996 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066543928 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070918412 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064613791 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062469718 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06372086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070111637 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071525262 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067537061 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064555222 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073711285 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08085515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063382147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070664585 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064251856 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065033131 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064264066 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078292395 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074578756 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067995007 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070627962 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061641599 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073544643 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076003503 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066261247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062315322 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066403999 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067381482 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075380248 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067447026 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064126707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062616233 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069467102 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066196353 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07073625 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063456831 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066382654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069056243 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06236184 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069406138 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064586276 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078637923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07118881 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061856581 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066391332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062532676 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074785242 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061955365 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065062105 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066499374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064745023 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062956161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070767876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061017005 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075939962 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076966088 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069063034 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066081571 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063494478 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076166077 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06991724 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072307909 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071489022 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073411295 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079544264 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065960299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070453428 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078722482 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063653284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060836578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072732687 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065066018 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062542604 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062705952 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061968409 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070163383 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069564602 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072290593 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059878295 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068902456 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06157732 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064993008 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060935693 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071077202 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068916942 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066384161 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074362602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062620948 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062401304 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069490937 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062072421 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062878518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063023698 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069613128 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062959684 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068886299 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065052829 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068289285 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064984751 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061157477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068585731 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062559836 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06789967 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07129956 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061916521 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068217887 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069110804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062727183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.197816593 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06943837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068189779 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072386329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071451017 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069968626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071131114 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063029708 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076426327 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064009888 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076726094 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068918023 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060963743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069678672 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07050217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069054774 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064262619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064761047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069537894 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063562772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070868245 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077104472 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065902275 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079828798 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075614567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070052029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070603256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068779653 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069338609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066308366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068349378 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064760946 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070326805 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063730175 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07260585 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071050446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068554918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070212791 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064872804 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069368249 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064961521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061769035 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066394498 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066605653 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064788466 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077211535 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06420453 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066990044 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063039773 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064862485 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063251284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062005048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070844501 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071418025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064858666 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074739105 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066718213 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070608408 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079405361 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061564568 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062751064 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062214022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06554118 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07652593 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064552136 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077643872 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069049412 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06705182 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061595112 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064485822 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062716255 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061469028 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062065591 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072304671 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065800575 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063194007 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06371926 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070645033 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064656504 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07660255 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063640863 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068792319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064111095 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061341941 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066896698 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066605812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07102935 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064702851 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065357298 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062155171 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063544784 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068238641 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069625378 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063500327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06950248 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076440349 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063353738 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070951946 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066410424 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061875963 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070676333 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063394336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063639334 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066479469 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071790233 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070995756 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06467182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077696331 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063317312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072051901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063888522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062020575 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062986854 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062924621 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06295016 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066371073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.063992473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075509011 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061617486 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068954609 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067920053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066602194 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072199348 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063086553 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068314645 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067255132 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064353838 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068788831 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075214837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065583368 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069897968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062779716 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068007065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071932318 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065126544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074583717 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068080686 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063209363 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068410757 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06392338 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062585479 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062927227 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061906871 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072322728 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.194475267 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067530768 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068153653 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063535199 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069779264 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067251818 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078085143 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07191742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071614326 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062425966 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062383887 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064651835 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065599798 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070054801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070948593 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074201154 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071461728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067899073 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06362451 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078766424 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073729556 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071883084 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066166646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072212362 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064971148 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071429669 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069146571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068878847 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064961469 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071821308 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070102299 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066786031 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074488124 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072611777 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065294496 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06941209 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069798912 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069441544 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06179983 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064421842 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070581531 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072941407 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071432662 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063860586 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079784357 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065390741 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069415401 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067465165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063490378 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073122813 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062334401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070704118 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06520566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064956027 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06240602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067146073 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065187713 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071774268 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066607821 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062453549 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07964182 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078342105 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070519046 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063431885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062992268 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062289218 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06240161 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066669013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06531494 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07006888 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07891223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066928278 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066988201 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062806604 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063953336 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071501959 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072007742 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061774078 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062369586 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066480771 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070128292 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075764933 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063203097 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063792519 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071322821 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070644682 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061944386 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066714197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061740824 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071585383 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081201409 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064263307 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070137239 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073680708 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077157891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064177885 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062673187 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064185479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069959663 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069488579 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064526166 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064505319 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082692194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070735715 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066040297 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062616388 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070917661 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066341298 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077887254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064920305 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064499637 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072417545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072837523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070532608 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073547291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074269219 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069567322 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069888615 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062697181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068976555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063363976 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066021664 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063851545 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063232414 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066622167 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06859846 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06527306 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077569419 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07831352 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064949713 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060523109 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06515673 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065132497 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060914769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063118452 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061177056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06151495 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061436628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061877362 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068499799 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071539629 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067110846 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06286436 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062587469 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060432128 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072159842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068851895 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068506338 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060033817 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.062297475 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063272613 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070241153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065154839 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063916684 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068585847 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068574975 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068285278 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060795884 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073975439 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061442615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06913164 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06483384 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062520634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062799391 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069932754 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06606509 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063787946 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069107429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069268856 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064095512 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060671854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060590102 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071843483 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061443625 seconds)
  done (took 42.146790953 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105993732 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06665951 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065087213 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064593232 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074154191 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065895807 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064173924 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065945716 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065717139 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067285016 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064145831 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0642177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071499425 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079158721 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073854588 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068167605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063366163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064933273 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063923736 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064442621 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071255214 seconds)
  done (took 2.772311817 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071035701 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078696583 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076105505 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080314367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071967906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068100726 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076070897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068431021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07643511 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073761823 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077118833 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068789771 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073278416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073538348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073518584 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0683049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076404085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072399143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068402146 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076178925 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068808739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075717904 seconds)
  done (took 2.850172159 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065407325 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063885506 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070706497 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06247861 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063999746 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062519219 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066638698 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06232231 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066413519 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066593101 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066600856 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067244518 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07120229 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063337419 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06810794 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062781331 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.124118415 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066355863 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06423361 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065009058 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062711424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071646307 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062767872 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063485331 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066321257 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066929035 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064526872 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062683617 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063782301 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066640908 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06408038 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06242288 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071065064 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070235056 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067170233 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066541959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063704133 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064249968 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063111746 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06296923 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070205475 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063179492 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067468886 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071583574 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062360938 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062331101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07059385 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064337581 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06250417 seconds)
  done (took 4.510663367 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075523351 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111683883 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068924938 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091570687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07736722 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070301235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068880023 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093795827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064327315 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065637916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078230228 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078861431 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066126683 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068046293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070854847 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06606882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067136779 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065721331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069658401 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065778199 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069465419 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070638992 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077363049 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07819242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067513157 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065434016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065923231 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067671343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077690877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070621504 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068486183 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068958861 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077484814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070914686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065579191 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065946923 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07883033 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066176409 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065937855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063920545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065735193 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067327702 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070601618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078549754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0662224 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070898284 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065811545 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063513294 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077263376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065708981 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07052666 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079116586 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066937894 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06617366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067394583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077777771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066150899 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064663155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066221528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077085306 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064516955 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066765288 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078015584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065651806 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069513545 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078452196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070601982 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067149244 seconds)
  done (took 6.235908835 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07336648 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095027038 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080717144 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080239107 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073966295 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07438998 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074030813 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074634662 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073798698 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078395576 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074373105 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115931791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070141931 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07597492 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074339447 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073921265 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074169073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073880436 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074029032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074108757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074234182 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079988818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073903605 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080183685 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076978993 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070025808 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073834841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074221548 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080162967 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073687219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077122448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073828764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07359184 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080504365 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07733779 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073543893 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063387343 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073557228 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074679269 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073528053 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069441487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080307496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073701945 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069449504 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074150966 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07381119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079677907 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076603375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07563477 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077701152 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073626557 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080116591 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073598392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074307632 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080587543 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083246778 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080560458 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080381023 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07427104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080212156 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08016302 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082983908 seconds)
  done (took 6.033044428 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078497295 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070530273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082806236 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062719013 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062889031 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072699624 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062877892 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062601838 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071241079 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073901162 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072919376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073089605 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075158187 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073122724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072708419 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075586057 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07317928 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072684123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070671824 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072401877 seconds)
  done (took 2.713798263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077212023 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081773336 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06840719 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072719818 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068139892 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072460519 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067864458 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067887588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068914818 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06813695 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074416886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074098771 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068394622 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072514035 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074640455 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072484026 seconds)
  done (took 2.418816945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0839478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070802992 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077663852 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063757527 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067543988 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062854398 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063808153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062665807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063111781 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077226368 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063663166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075232528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064023353 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062854729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063600432 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069645579 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062900556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063950178 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063872307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077616581 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071234643 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065210406 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067998629 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064088819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069281278 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071044324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065842068 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067895262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06373228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064338854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069702362 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071294188 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06339573 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064659981 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063096847 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064270199 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063974929 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064004707 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069912236 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082038895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062186367 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068959548 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063694048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064832067 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06301733 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064164004 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063328908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069439072 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06410656 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06934819 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064111966 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066037979 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064629529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071186274 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066527893 seconds)
  done (took 4.963235228 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079261851 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068143975 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062461325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062479458 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067387439 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068712832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06822331 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067987081 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069223169 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062192316 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068803653 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067929087 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068420645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067855138 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068596978 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068118655 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062246227 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068489624 seconds)
  done (took 2.498863492 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073268612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067044905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07209717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067465385 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067069991 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06685473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062360438 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062916025 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063125986 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067744033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067248823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067010981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062218079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066871743 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067195714 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067499935 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067233654 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062560947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06755281 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062405292 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066866533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062861047 seconds)
  done (took 2.731826525 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095875902 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083920346 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142109233 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079856806 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088109633 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072452322 seconds)
  done (took 1.838056996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092785546 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098791381 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067159489 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067833036 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073300497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070755237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070497877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071256388 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075209292 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075630396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070787903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075694378 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075356951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077673993 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073646165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073492813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07364088 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070993441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067452359 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080417844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070900391 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075741776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071250816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071444946 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071126759 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07749157 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075316809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075861887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071023074 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075790569 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073445389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071042697 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076144387 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076431644 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068033684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076077183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071130375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080847194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07362706 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077717626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068218399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073989567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076198908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075071594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076488842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071315151 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07512782 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071938381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071614327 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082520924 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073788356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077845495 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07382785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07618002 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075739752 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082333685 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076241499 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077801712 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074659841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076413031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077670831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073470262 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077826727 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076334179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073659263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077353273 seconds)
  done (took 6.227796637 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104948852 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06892374 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071220818 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076143915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077520464 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071686953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071378198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071458382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071369416 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068256312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10604933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071746549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078278454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077938093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071977678 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071515153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071407571 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077729571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068458422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082638232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071552661 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077761148 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077670602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07759301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075955937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073443012 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071593011 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071095661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071215908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070916715 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074908717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071391764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068241828 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077386629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071192097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071050396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07565477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071134138 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07341856 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077589826 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080840056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070840877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070926474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075743678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071081435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07111885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068084976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071012385 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068433781 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075755054 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075791871 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075675756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077233746 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070908971 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070861462 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070848686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070726144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071042698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073420509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079053976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070980796 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082125401 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071476062 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070934012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077352697 seconds)
  done (took 6.211925765 seconds)
done (took 126.429718892 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209682486 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185194579 seconds)
  done (took 1.663475074 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074149269 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105082199 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083198298 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1330935 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071667266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105981581 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104971394 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084968493 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071512232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071654782 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071536592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074225208 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136486755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072140037 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071759326 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0746184 seconds)
  done (took 2.694093217 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105547035 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16676429 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108686952 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070215651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105106974 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077871156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069597738 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082383577 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076336121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071595917 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077425334 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075401054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071173865 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077997774 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076048339 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077302051 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071400074 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077440453 seconds)
  done (took 2.829350548 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103821947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09494354 seconds)
  done (took 1.49147366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178039994 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135458878 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205279283 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351806441 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156157459 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.43189112 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141430742 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141767521 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116763314 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13723592 seconds)
  done (took 3.284402909 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1042771 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194204149 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295444778 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121189773 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07635132 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113248761 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122264496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082254368 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083859033 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083678776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083582978 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078554647 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103348427 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077030802 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076355396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078709569 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106914355 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075219615 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076544237 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078844164 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106614856 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070213098 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076744486 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075213508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081029038 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081480284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071228228 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069981191 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079048375 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076209051 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079861168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110284294 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081365408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106578882 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074735528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107660012 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079181198 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076689298 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076106728 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076865125 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080276249 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080313581 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078627181 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078494942 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070989857 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078617592 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071453603 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070924207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080535182 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071493718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080856041 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079232025 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10638498 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070999419 seconds)
  done (took 6.181171962 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108636127 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107630122 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07158394 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1131039 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104651475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070695153 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106587058 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099904708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108455557 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070970845 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06976106 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071100689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079653199 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081737903 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.1163565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10870472 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073330469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070492236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108765296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107879423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070044973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10245511 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098653464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108183103 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069264438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070810147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069813852 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071143196 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076700119 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078280926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070424937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079593377 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084534752 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077906697 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068603693 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069855161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069621603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078771701 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079129913 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078645791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076799855 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068931191 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069481203 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070553023 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070054798 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068376058 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077608801 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079045716 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077669501 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069588843 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070467841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069830617 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070622873 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078806154 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076648441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079435815 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079413043 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069792169 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070031564 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072031331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079563214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078890327 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07853929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07034006 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079223062 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069860941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080079452 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083637043 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072259527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070719673 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069611055 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069317037 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070339469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076530116 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076817424 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070730474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069251615 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069801012 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078449712 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077104289 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069072197 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076536837 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068544489 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069202398 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070919083 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07028079 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076411221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078697137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070862064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069072222 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06950515 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06933363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068053905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076201096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078221008 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078311841 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076684748 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070081774 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077392885 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076951494 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070564885 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07746383 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06956192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070522002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070026333 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076709135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075620354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07778941 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068583158 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06858283 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076102962 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077819061 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068487713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075195737 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077258125 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07535421 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067272448 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078455862 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068541254 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07658903 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068867399 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212590945 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071026966 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079398042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070635152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070268603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070175816 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079852086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071415344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070193403 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070920691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069830286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078403832 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081787725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071930276 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078175528 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078023905 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071379675 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077988553 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07002709 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078679215 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070360123 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070802173 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068920155 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081017027 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069752696 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069898809 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069543937 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079248243 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069701882 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07997569 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077629142 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068854064 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080583375 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079565555 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076698167 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08018645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071177493 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069888058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069830378 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069964742 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076932018 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079025164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071461673 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069683119 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077220413 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079212797 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069006241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077587781 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077771594 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077950033 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069892212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070058622 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080668908 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080496968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077620033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078167329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078098201 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070312403 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077426608 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077862927 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06987958 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083591701 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070021059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082099856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078109888 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076693219 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078313437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079696246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079552783 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07966429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082365944 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069349274 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069597651 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078609169 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06920635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070034273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077192716 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071244056 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071181862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082451458 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070285291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079376749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068764667 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078455594 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068387501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070382793 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082374037 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069307155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070809864 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078293293 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06938285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077500472 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079982424 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077515308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072542732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07112655 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078420075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078320088 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069499387 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069352271 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070338855 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076790772 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076183986 seconds)
  done (took 18.527785561 seconds)
done (took 37.974493208 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2057316 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153634121 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184479361 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115181359 seconds)
  done (took 2.052174635 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108991444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098076058 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088353108 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065970742 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094368748 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066275106 seconds)
  done (took 1.847134439 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286938904 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195809491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178679132 seconds)
  done (took 1.980082682 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210339345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190410793 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459898992 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282774908 seconds)
  done (took 2.558499328 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141561568 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082457276 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06483172 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083074812 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124147054 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150323451 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093122566 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117996424 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076505056 seconds)
  done (took 2.308882342 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146877269 seconds)
done (took 12.236099189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.274324608 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.122425669 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148337168 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105957439 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100473895 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101459949 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073357323 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077365786 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.240901899 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06931835 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199121077 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066350803 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.421377931 seconds)
    (14/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074837521 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077059933 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179122376 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207294747 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174352141 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100111023 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.183575786 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.168388892 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.165579462 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076144678 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068687461 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21889705 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085155028 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080320312 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099925192 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075072415 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088240521 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11581668 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164237389 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120783632 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070727204 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073433223 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.200714282 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077024527 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106830421 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224246346 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074068911 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072372371 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.167300288 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074697023 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.126259348 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075191602 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.206885103 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210795795 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.172010316 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064978653 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120677254 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173200373 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.157118063 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.13734648 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194804807 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092355368 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17092706 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138261515 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088570988 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.067018321 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073991416 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074979874 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065615997 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074539167 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075116877 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10415471 seconds)
    (66/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.1391019 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068949168 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079099066 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064503858 seconds)
    (70/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.086930879 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093807809 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084335439 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073905713 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072199342 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06586308 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179860173 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098341793 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091147947 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.1131446 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076298024 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169131491 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065975676 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072134292 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070498445 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127323828 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07190088 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169058012 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078149391 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067988394 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191015498 seconds)
    (91/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.209559397 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071195357 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089576676 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068112964 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.206068811 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139344757 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096426795 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078335121 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.203288253 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066532557 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066316635 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06614427 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183881474 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076722569 seconds)
    (105/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079265613 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079618119 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091110078 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072944687 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131879245 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079071431 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.132070866 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067214478 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077341348 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077041723 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070138308 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090748586 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068876509 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19513726 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.0674421 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18017966 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074766033 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091795917 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074683115 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065882137 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074835366 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181128507 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067301224 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066611791 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127861149 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067352185 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076454571 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091100042 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169860276 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073645088 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074401809 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078434802 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181807816 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073956393 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066833874 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191712663 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088887894 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078721746 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128481342 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074303123 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072972401 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065559926 seconds)
    (147/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137700659 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072558575 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165410222 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087615719 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074215776 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066820643 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064767629 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132367153 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066734817 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169707122 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074692778 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171633489 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218329808 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07624929 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075580345 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066370709 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091046676 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074633763 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07498381 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066518324 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066624175 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073224412 seconds)
    (169/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077954051 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175584991 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142090504 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078988244 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066744343 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067036438 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073949602 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066636458 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067003994 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139943949 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091361487 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071101078 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 0.132777514 seconds)
    (182/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.127166081 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066875242 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125864064 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067416604 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065302743 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065704859 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06590176 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065335875 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069963487 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067925263 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076204398 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065255448 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085901159 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077452023 seconds)
    (196/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077945662 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091560276 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065975372 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134464325 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169521781 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08927451 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112493993 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072916548 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178016783 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066009249 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099839241 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111481924 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173324114 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08641261 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071309836 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064658888 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.389003296 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07908152 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076633222 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069156692 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135002556 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139483176 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071559106 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090079785 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06862333 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.21705936 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074581659 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074667601 seconds)
    (224/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079695523 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094582785 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066634436 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083802302 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196825956 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119027097 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 0.133492748 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081873577 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088512764 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066880047 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06674702 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067955789 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067254798 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067276212 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131429091 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067546425 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067686326 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18125603 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066665798 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092236386 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066496461 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067042942 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074684543 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06554503 seconds)
    (248/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176305775 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066117724 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144670531 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066889572 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068076917 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073527269 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067070782 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068249467 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069919569 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074943927 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065949923 seconds)
    (259/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06721745 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067109862 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074655603 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067293733 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066898305 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06683036 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068955376 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068531205 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06889756 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065952997 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075434528 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067579381 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07338646 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066815673 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068668716 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087471538 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066991239 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066892267 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070438471 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066287373 seconds)
    (279/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088717947 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067474103 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067120411 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071170124 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144092429 seconds)
    (284/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078656571 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06681736 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071118935 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067540078 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07866093 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067508104 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074980614 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07580581 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067106787 seconds)
    (293/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120748109 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066577805 seconds)
    (295/309) benchmarking ("sort", Int8, false)...
    done (took 0.146001188 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066544921 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073148805 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13129307 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0683612 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067526347 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067626716 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072285775 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120873485 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066211162 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066069647 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066085899 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085948817 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066010908 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123543683 seconds)
  done (took 32.97405817 seconds)
done (took 34.306184316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087654692 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099274172 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074405967 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093925131 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08188377 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096773713 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074707483 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079520068 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081920767 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081000309 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079458444 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072827975 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075457622 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07573582 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073716798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09699772 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080191915 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074503823 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074524259 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066428212 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075239689 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066730926 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066457492 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072823394 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0781507 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073770134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075716973 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075351116 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066725526 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066533799 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071517385 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07519276 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066372377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079437863 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076724786 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075048746 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076680482 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078909546 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066489953 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067176149 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076663531 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066597771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074597102 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073397115 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071693939 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073284619 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074386808 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078865984 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097624398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070753603 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076842318 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077609786 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078070346 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072127217 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072149032 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074424329 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07254649 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097609278 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075145456 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071415642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075990072 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075995937 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072928156 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074341038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074595372 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077065692 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078729748 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073062219 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076921498 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073605175 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06633909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074349508 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071545196 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066475813 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077235727 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079088904 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066316236 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070642986 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074633168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075011784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069081401 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071230438 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066333565 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071402033 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070896429 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072325119 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071419037 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074294482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065619492 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075161718 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074088907 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074064436 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065817063 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079023527 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06660474 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072569056 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066651705 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066682215 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066021533 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07162386 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065833899 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070380727 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074637655 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06513969 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070790392 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079138579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066055864 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073524871 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065444163 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065987371 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077280928 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076869725 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06626366 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070766786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065308676 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071564764 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065482272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066293536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065611359 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065805421 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070434545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066085677 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070395155 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071284638 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078537809 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065811012 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070997918 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070257747 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065750145 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07264784 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06628011 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065882942 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065349743 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079345458 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07020143 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066224637 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071360851 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070589892 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073514562 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064908926 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074087134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071187142 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070469548 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071246533 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064300381 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076334074 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069701007 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069389826 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064511848 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064733016 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063928194 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064493635 seconds)
done (took 12.542400422 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070489555 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118232088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093693659 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093305083 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083037816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068086827 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074328769 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092568242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068555822 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096318337 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088733245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088298901 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109464324 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065957003 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066706531 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068134084 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068314718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078498646 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093799894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088762122 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105972399 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066806424 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086175987 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086847959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08351069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09030114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068139389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067919524 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069824612 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087270086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091599182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069855623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068090607 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090256063 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085126435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080320925 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067869289 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075688253 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067774455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066956843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068535253 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087793591 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075018895 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077954323 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068485626 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074879897 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068114952 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082437712 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085919181 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075483985 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08258838 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091067998 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07068894 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082975051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066233424 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083145228 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076220281 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067913752 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067989937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072717296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067364883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070041841 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078214762 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076019429 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071746989 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082076156 seconds)
  done (took 6.608737791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08462043 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094399894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083358094 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083613492 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06656925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06699726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067303959 seconds)
  done (took 1.971769528 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070193954 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088190202 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090775889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090948913 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083467157 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091641091 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075463832 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067444841 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095913971 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067225212 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087312741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09790934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070943568 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078828344 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09267348 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067573403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091797665 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067297947 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068061837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091536194 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07205627 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09436764 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079224443 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067780953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079852236 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0678118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099691297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075760007 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068975829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068697586 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068517294 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094589955 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079421555 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081362716 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068668288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082882316 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08074579 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070566555 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078312066 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076802282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080773916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068874978 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066900118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068805378 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070656649 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078847762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066562812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069113907 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06883784 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086770077 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066528018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080287001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071132578 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073217946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073103728 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072618114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075958487 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069189172 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086820062 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068966527 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084444588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083780046 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080662949 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083888796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067861384 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079774753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080720062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068559043 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069546066 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069132124 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083963881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070711742 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069093031 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078856708 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067842332 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091504817 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091627175 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067407742 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0806908 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067898323 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069013739 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079153146 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090967993 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07289346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068285524 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071819128 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069518691 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070384444 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066313557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071320803 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068550306 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07284983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06863786 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070694833 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070052233 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083530686 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066713883 seconds)
  done (took 8.835212374 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070244607 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068590734 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069664068 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068197141 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068438513 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068656526 seconds)
  done (took 1.865591826 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091780289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068320491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081166927 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068470413 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104004989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083596257 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083648848 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077845538 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08158974 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079901605 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083762282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08643298 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087777256 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070768579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08313332 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069500055 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083612434 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072562161 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079468355 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071227133 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081182992 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070358824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070698456 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087889197 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07210591 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069398362 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077517001 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079565224 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079522505 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077880164 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070526013 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071636765 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076183787 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077684422 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084131825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076545917 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068488193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074684019 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07087024 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071613687 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086090788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070876047 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070748119 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07463315 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080111486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076053086 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074256474 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076626584 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083587257 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074630274 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074541573 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069397418 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071631986 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074246282 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07609637 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077305716 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074627479 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083761046 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070299283 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076397606 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068101767 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071663945 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077278406 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071464002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075547103 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07438878 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076024687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070510678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071086469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068564898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074611898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068728553 seconds)
  done (took 6.923359654 seconds)
done (took 27.651614178 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519855938 seconds)
  done (took 1.929502614 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622540439 seconds)
  done (took 2.059999246 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.994376647 seconds)
  done (took 8.425823109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384563167 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.455218762 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749229404 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135096532 seconds)
  done (took 3.192491959 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708442655 seconds)
  done (took 2.154585629 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236861056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225553583 seconds)
  done (took 1.918267565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348812121 seconds)
  done (took 1.786051367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.04691194 seconds)
  done (took 2.487225481 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235595299 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160506174 seconds)
  done (took 1.838004164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443879472 seconds)
  done (took 1.880733747 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.231435761 seconds)
  done (took 5.671058155 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219245072 seconds)
  done (took 1.693306424 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234834568 seconds)
  done (took 1.674983618 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.743480526 seconds)
  done (took 3.183477311 seconds)
done (took 41.342233333 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083602791 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085357133 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085543628 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080935283 seconds)
  done (took 1.758312311 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075082249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070530681 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074427038 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070482166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075217271 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070979 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072087078 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073455196 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070512837 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07116613 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071161609 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070534536 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073916607 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072451392 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069489786 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073709346 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074510897 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070605425 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073691623 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070846433 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068825347 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073275652 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073614709 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069905955 seconds)
  done (took 3.172537868 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078707908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073184152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075547993 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072153322 seconds)
  done (took 1.748286246 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07685067 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088151368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086153811 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077164757 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088562603 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084129614 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067774571 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067526228 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.06853961 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076579692 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066347398 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092775726 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086508715 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076705719 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079751401 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063691194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065636009 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085064708 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077503141 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077246121 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068901053 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076959024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066148449 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08667543 seconds)
  done (took 3.29676675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086618165 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066145769 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085906577 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091508034 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093502202 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066630713 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084479417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093446624 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141283557 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06631526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071943317 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066494794 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104450995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066125307 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085580242 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10898288 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112878469 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069722592 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099190486 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069120043 seconds)
  done (took 3.185490958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083858807 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069647682 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070443761 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066249141 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07601677 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073479686 seconds)
  done (took 1.896653687 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068202507 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068432653 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068214755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067193841 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072522826 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067286255 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066505635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068314649 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06792016 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067706004 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06735212 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06647966 seconds)
  done (took 2.269089229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192996351 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070084221 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07085795 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066144612 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072682066 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066745781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082209402 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069472189 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093381089 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067124042 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067481892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069254228 seconds)
  done (took 2.442319769 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190887769 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073844038 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221897162 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143898305 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101875023 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109318698 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111404237 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107671173 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133409127 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097524685 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152626073 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159582927 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103382678 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12869052 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08703791 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120286811 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143961884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155735721 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099434775 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153477037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134527823 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122114206 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141561186 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096953533 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101329472 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11323798 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072118148 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077445325 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15879351 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1237396 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135588177 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10436891 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089676806 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164975777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156800524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136440314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141509326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081729204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117943119 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128532763 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191055237 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086265656 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148314008 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101741273 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07700292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122357629 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108644841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113904658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099342278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08594286 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272593251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173428399 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128136036 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084881442 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116156578 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10494528 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108923235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11357517 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169571467 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149755791 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12127996 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.06973546 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106687497 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14245676 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126005702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104241498 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117659657 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090434891 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125215952 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15191848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118204616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133054032 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11209804 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08527235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115250824 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129986042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120783794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162030029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11869338 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071186622 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115208227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095717802 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078386248 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141091596 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073344487 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163993274 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096071381 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120370712 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124927915 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104388669 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104282965 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149602427 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133950123 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101034378 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084512776 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098855306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113813513 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135330596 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083306047 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103127388 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108368476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076507357 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125180314 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072527868 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114147824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092215852 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112161543 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117804995 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075681498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114168061 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096295671 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096175965 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117249423 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143212991 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082577815 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076199769 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151228704 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112480599 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.097034081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129933632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144097454 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.112353962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088344781 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126439002 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150974721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083935314 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141742183 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092991521 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078118239 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.097109855 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10983347 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099584656 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.111886414 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075739215 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107657077 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140286366 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.070646534 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088041692 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118978083 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075448312 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075300734 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094695023 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093777773 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.088948932 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.092621441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.094682148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119899211 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10951879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097211886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109124268 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091264891 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143390205 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081019259 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.095390807 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095576072 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068138758 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.118454763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136441538 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073828634 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139586123 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.110105263 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105542369 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107534476 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078277117 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122909677 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074462346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068914954 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123412844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103230554 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098864027 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.395350886 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113225329 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121970789 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119293404 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128523888 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125493904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126477007 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105499054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088974262 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112588122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125981886 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073352793 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09107684 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082515152 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101900188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092777688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083081119 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133127077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117231314 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108039135 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112208572 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094501105 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142709287 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078327271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118595542 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11756749 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092423958 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146258033 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143105415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126019931 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09797791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129810943 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072229505 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072897036 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08682096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118947495 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082017388 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081646313 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109372945 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142675159 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120344524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129946471 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118941901 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112267274 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149634702 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071266861 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117103193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136523369 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116001055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101681135 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088521533 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095190578 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135795824 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100481486 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169690131 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108529093 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117799658 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147176254 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098199386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076851351 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099752022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275435973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098395938 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136288599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095772298 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084272085 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103874428 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076434559 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096124815 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122836649 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112276064 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128940869 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107005764 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123321232 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075926963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107994339 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117189911 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115658844 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081906076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111430147 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156155266 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093756817 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111954539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142070193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076869468 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134832684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162338596 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135513571 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082072052 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100876819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116693841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12063824 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112680433 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131221069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100387712 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130522142 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107900106 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082949455 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084337289 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092684972 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099957667 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109613776 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11059002 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092943683 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123004355 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098934154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106400606 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112893975 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09668989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09256989 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093537422 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164278758 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112797734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157083988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096013352 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133327935 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149323889 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072973326 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076126062 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077856289 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128710482 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081662426 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271478692 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108245896 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110837018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118030315 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130579156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093863752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069789823 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105889903 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125563869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117585928 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093275341 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100081241 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148742121 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114163339 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076303328 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108317802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112607385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100465378 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162728483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079262366 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106090311 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075049109 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078117011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12035549 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142858306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080856202 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101095504 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115653559 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10660388 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12018699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094631353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107166416 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125224217 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138599025 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120907942 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087186883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106676456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122356165 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144986073 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099880052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097118334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163820353 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142376567 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152587547 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085200233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109634142 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109499664 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105040008 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1278997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081698405 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151173357 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079190695 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125272225 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097393687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086079272 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121176637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107586993 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084614625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134675966 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2581798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081174495 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078503786 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106931864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113809209 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099446469 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073259961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130668168 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072157389 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128188384 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160707692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07809971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101917103 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092173844 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079985139 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099488147 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097690834 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08300677 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.0968357 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158815523 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084914211 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13847474 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12656286 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106446028 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129853754 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100482475 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639973213 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078219396 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142741049 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111275402 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166856215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095327499 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113599186 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10637754 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115466433 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134309912 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098393316 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175659523 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123237677 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113513921 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076432247 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098334472 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099745301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086042589 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102962865 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109244884 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108159259 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091475855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112855043 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11574885 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079998332 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092737531 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145813079 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110576921 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132489028 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129129946 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081228895 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111381672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126028108 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076951875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.261668985 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142376714 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101679594 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096901411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081530602 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097610475 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16291586 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071603228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14774078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114505292 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10590905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110968804 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105553546 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123631462 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09902646 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115877787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090032203 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104929714 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14450751 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081383747 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077220117 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101763246 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106359513 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095137074 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094703026 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096326845 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142661159 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07082999 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094556988 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110267617 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136032373 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160567995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102204913 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081634607 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113736473 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113564095 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109769091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115952718 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079191298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078581298 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079824766 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098226892 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120735067 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108944626 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113667898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105073574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150943002 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081529079 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221038511 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092874272 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101816449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087075969 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078417606 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092681238 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09311074 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100051375 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107261084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163282896 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092706191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086377046 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088653545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072682708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080960551 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118562959 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104676392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259049192 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101467379 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080536226 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100655288 seconds)
  done (took 56.28118577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120271269 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098432455 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098164529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144831784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121779897 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200652979 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151839045 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189679846 seconds)
  done (took 2.733212608 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06896151 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094860822 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104362724 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083600703 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067715789 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068845932 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226576612 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081980837 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067778293 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091969232 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078425091 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069690338 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446984579 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067322332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068429839 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077303193 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068669393 seconds)
  done (took 3.409781605 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386039215 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613990522 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35817611 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076837 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.010879171 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09057259 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.217553639 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139453389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083290771 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537858478 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370258905 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133824653 seconds)
  done (took 18.609435381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082972286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077267082 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091377262 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091207848 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079184536 seconds)
  done (took 2.010932461 seconds)
done (took 104.276912324 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082470371 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447502783 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070486323 seconds)
  done (took 2.131119106 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091886196 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089636672 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090489275 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088388128 seconds)
  done (took 1.958704034 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075585577 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07784491 seconds)
  done (took 1.744047232 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229578588 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177162196 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09867459 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083816007 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081567849 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082458561 seconds)
  done (took 1.844816121 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073993548 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074182675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07432564 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074360154 seconds)
  done (took 1.887586573 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068616947 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067257963 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069552514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072479252 seconds)
  done (took 1.870698715 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085387685 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086020979 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080485192 seconds)
  done (took 1.844907474 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102403737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09112792 seconds)
  done (took 1.78628079 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082124501 seconds)
  done (took 1.675727263 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091372786 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100882843 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133558966 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115577102 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139939138 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115385152 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085168922 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085785028 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08020733 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086861761 seconds)
  done (took 2.626626412 seconds)
done (took 21.546410016 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079644489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369168016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360852786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091563507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691449122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358121973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988917526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094779344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144791732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070377608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086808068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.659279848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981803554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325989422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970354011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324605851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652588478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069609911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069035009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069916833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974239105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068803119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069592466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069930747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650009748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374460363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071334118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323943128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069989801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074010603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359599024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071307772 seconds)
  done (took 16.211530344 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071252423 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123331811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07440596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086027309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071751723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071163181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072340206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070339834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124014036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070254257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087880148 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069089406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073982303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070725764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089894618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069768829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073358118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071344482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070477487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071396832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089651124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070536893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071327412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07377114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071396435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083922832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07238232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070639622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070656793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074652324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076046461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072217186 seconds)
  done (took 4.086961742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118230664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126700068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075379351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108529229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113524315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071793701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148594628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09429356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130850272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070506067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087701236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069611302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105556502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071066489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091059153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070548789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073731801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070775006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070435244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072230423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090190406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070671538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071374816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071268272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07122008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085413557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072215314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070502644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070856886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074630465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076473812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072114713 seconds)
  done (took 4.348037721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071493063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073922375 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081752438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083266114 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069268574 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072009309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072345196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069079108 seconds)
  done (took 2.203398147 seconds)
done (took 28.449376811 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079626122 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069596332 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072089255 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088420896 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074898386 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080212802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066819979 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075787359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07327584 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07363095 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074976666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068255255 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071338916 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066500762 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073953879 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067267655 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082531108 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07211615 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081426945 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082614841 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070994227 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074014722 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076278423 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081709447 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081825598 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0812228 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077449023 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074186208 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06906799 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071439455 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071302194 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080515728 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082620905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082421385 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068333492 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068631156 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072916238 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070226394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083492651 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0776884 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070007624 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077379159 seconds)
  done (took 4.744544364 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085791179 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090071916 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08312945 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080490799 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091663249 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083444826 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087518903 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078506606 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078668405 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087126285 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07478768 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082451223 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079906637 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073946222 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078195437 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075287552 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080291048 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074831637 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078248598 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078964769 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088154063 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073680208 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089354443 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080507129 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075922122 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082406597 seconds)
  done (took 3.732110341 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074410471 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086235176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093961052 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144892685 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112358493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08123411 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082379618 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093697045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09786828 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069457855 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073834899 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093648577 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093683878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075484136 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069529374 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085191793 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085172641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071479129 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076644955 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098227087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089944917 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086724638 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095239686 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086120892 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068806821 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071899526 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074413836 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087979482 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071683483 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080654664 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071872851 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073148687 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07036182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079749147 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07180526 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068568216 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093830713 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080341146 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081521441 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070411786 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078920375 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069982236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094465102 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129432295 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068183157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073527645 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073016312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080258077 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068447655 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096518239 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08105935 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068584326 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069818475 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067901298 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06876028 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071375249 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070474238 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071501515 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07943772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075701252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090906211 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074659079 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086390462 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068963935 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079303238 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068560129 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070834166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067907497 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097392551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070488506 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112975292 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069553426 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067641453 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080127176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079450794 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07481809 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068580063 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086441131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080307298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073140288 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077095386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071947691 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072549493 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099195812 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069465268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068628555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067722035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072750773 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072425666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06970816 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08100432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068288296 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073048079 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086834127 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068848201 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069686506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072924271 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071628246 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068648741 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07957354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073032051 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070952696 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079269533 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069482651 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072346741 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081952797 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075649591 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067619233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070801124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072305864 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070204519 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070097692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072576984 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071389492 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076127133 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075579102 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075202843 seconds)
  done (took 10.808783008 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16617063 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157093075 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071654642 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149534068 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077581336 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080942757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152899665 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096096875 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069135392 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07079425 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069968368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11105975 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106467264 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117080635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082102458 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070083949 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092370731 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115741257 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155383951 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148653056 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09229143 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077551493 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072109319 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071493832 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070997404 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078869733 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086237688 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077922209 seconds)
  done (took 4.441243772 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078960091 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104287392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073372159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092365065 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089482389 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070122481 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071568705 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071272095 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08585735 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078799195 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070465521 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074864684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073447301 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072600021 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070384939 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076242586 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076734498 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068901252 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073433308 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074959496 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080068155 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094610467 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0730885 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069521747 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072127797 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069368034 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078040734 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081824883 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072194869 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105588717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067304029 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074205845 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083816611 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070774791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069592331 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069845346 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069704698 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070046965 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071102774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068068599 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068173302 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07337288 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068698234 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077599033 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08258137 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071690498 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071560045 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072447587 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072980904 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067485389 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072679918 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072509325 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07228916 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076708568 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073762747 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072752926 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070482219 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096809888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075870364 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069048521 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068631641 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068320574 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071773196 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0791807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08533713 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071893035 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068179116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069704044 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082426369 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082194654 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068867451 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074165651 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067307415 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071250573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07222771 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072172008 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070608122 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068335615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07293846 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069632987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070436817 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069030968 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068939373 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072396334 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068223991 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068592591 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069744447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071433235 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078393172 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069239946 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073338896 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070752918 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068241351 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072582639 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074738081 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0727153 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080127955 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080791153 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06999588 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067981048 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083472556 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072705678 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068954234 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075597652 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074368601 seconds)
  done (took 9.453919895 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092538775 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069618027 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085746193 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092652979 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079281756 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075205565 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079524359 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069004288 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085427156 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074633059 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077285038 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068257692 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080132097 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079038559 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070157637 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080446996 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073137294 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08703813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0843261 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068116052 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078323019 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081943099 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081454185 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084149835 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082934893 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084668828 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081905087 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079733417 seconds)
  done (took 3.89011386 seconds)
done (took 38.676058416 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.700036852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.856972485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.682505401 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.885364193 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.836850887 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.700987555 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.764096395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.675042587 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.823479092 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.725198448 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.998023457 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.930584024 seconds)
done (took 64.335918702 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.707684112 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.832615191 seconds)
    (2/2) benchmarking "String"...
    done (took 1.938948189 seconds)
  done (took 5.462000878 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.876518182 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.549680683 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.919174456 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.677156132 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.68277099 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.970574306 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.455573726 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.124036087 seconds)
  done (took 29.99912475 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.842580025 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.906282759 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.391583391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433127722 seconds)
  done (took 15.240467388 seconds)
done (took 61.9945747 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.693975514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.693222656 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.721975915 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.678700277 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769766534 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.687640181 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.799788042 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.907937152 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.678738868 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.686942148 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.681331468 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.102551596 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.68217862 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.864037069 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.679376077 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.682035837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.723678668 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.130339237 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.833884786 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.694595031 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.69056017 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.705939483 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.683200276 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.680586383 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.702639304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.681032023 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.070261612 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.694951174 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.5148894 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.68164416 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.728381032 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.011198667 seconds)
  done (took 201.856756371 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.679382155 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.774315667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.776795442 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.701919843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.924554956 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.875874871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.774542406 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.119639109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.685636327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.711997255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.849412195 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.68012874 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.890713023 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.652507468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.71708124 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.768331712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.899776738 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.905593316 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.720917262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.826333787 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.708497858 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.813467411 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.778015025 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.831871687 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.715599645 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.769573052 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.693198037 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.69265282 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.864449942 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.863880547 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.684887637 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722121696 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.88424556 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.54967169 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.698753402 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.685156313 seconds)
  done (took 166.514376732 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.862585182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.683047422 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.680806146 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.682372331 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.679211393 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.687073454 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.681018086 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802017264 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805039083 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.336768213 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.1551893 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738943798 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.683185382 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433323461 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.682301199 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745655282 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.693547168 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.683056576 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.697120845 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.709355908 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687616889 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687253365 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806884455 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.699599951 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.685545897 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694169908 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.686030215 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.691238519 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.071120306 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.686473531 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.774943705 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690712775 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.691746159 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.925527736 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.687357723 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687534384 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51207097 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.755886417 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766906126 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.688029431 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.692072753 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.686763032 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.903794022 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.685844194 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.68645054 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687437286 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.689175643 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.689107003 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.798352763 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.689473318 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.807005521 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.690474763 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15909156 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.686397308 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689975163 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.870624285 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.255483832 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.688474148 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.689626963 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.687779866 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.689621966 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.696375874 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.9662558 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.759111001 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.687888562 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.687483609 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.690720961 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.691709039 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.687462567 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.821317517 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687407991 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.344988495 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.704757872 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.815650686 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809284841 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694076843 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.690727909 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753430603 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780791771 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.689857552 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.68736677 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.687726434 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.687817937 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.76877204 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691146625 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.768291702 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699733246 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.68888754 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743521938 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.757361619 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.689253847 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502721966 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.694284123 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.68872415 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926651658 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753668996 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.690515458 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.692472189 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.768859316 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812638893 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401954898 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.693566324 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.988855269 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.763793984 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.690755199 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.799459932 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.693562932 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768938816 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695919393 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.690221544 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724730342 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.690488211 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.700733515 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.689094019 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.060760211 seconds)
  done (took 390.711415961 seconds)
done (took 762.624178297 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.302169505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.274835213 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.365425638 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.290505136 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.268519904 seconds)
  done (took 13.131420966 seconds)
done (took 14.760937593 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.769839058 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.772016823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.709371563 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.770591632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706137196 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.773964517 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.754902259 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.711362781 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.739318936 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.7128972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741338367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711999511 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699511144 seconds)
  done (took 24.204093983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.908901941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.91338824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.757225476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909106401 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731876727 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910514542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.842844402 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.831058218 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845717946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703756691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699298257 seconds)
  done (took 21.68467095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919097614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922478204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.762571324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.920928191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737481317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9102003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849445509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.836120307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833605492 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703480007 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.702677372 seconds)
  done (took 21.730338685 seconds)
done (took 69.250138185 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.695188008 seconds)
  done (took 3.328329018 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.713956592 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.868103186 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.695388658 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.696747094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.695097924 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.695117016 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.695690968 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.695017221 seconds)
  done (took 15.387875243 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.693576858 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.696300316 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.695282617 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.693961424 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.696656866 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.697331675 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.695999307 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.695338936 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.695529057 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.695603103 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.69429909 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.6945862 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.696267471 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.696193653 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.697322366 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.695502877 seconds)
  done (took 28.763335575 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.697474724 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.697536687 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.694935929 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.694333716 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.695250509 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.69439523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.698223736 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.698271564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.696361006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.696398983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.694288344 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.699126197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.694526455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.696344252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.695268195 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.69570622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.696885582 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.698259935 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.703250019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.695044652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.697303692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.698376761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.696561586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.697210591 seconds)
  done (took 42.357256052 seconds)
done (took 91.468623294 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.44205703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.297279253 seconds)
  done (took 9.374173292 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.70152394 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.696694923 seconds)
  done (took 5.098309867 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.695323421 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.694433955 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.697212416 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.697063009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.694344214 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.69500674 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.697706404 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.698499619 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.698614111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.696220678 seconds)
  done (took 18.59931187 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.696969323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.696293602 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697205051 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.697617677 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.696541735 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.69865648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.698718369 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.698793388 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.695207051 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.696828281 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.696430511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.697600462 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.697079374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.698122133 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.698071599 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.697424494 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.696551498 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.697099982 seconds)
  done (took 32.185628231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.700067275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.699983426 seconds)
  done (took 5.036059121 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.700733562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.702127813 seconds)
    (3/7) benchmarking "month"...
    done (took 1.699368638 seconds)
    (4/7) benchmarking "year"...
    done (took 1.697354112 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.699002326 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.696835414 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.699132054 seconds)
  done (took 13.532861326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.698511735 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.852930508 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.918608735 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.327146007 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.700748489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.703099399 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.63805918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.701804929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.704279259 seconds)
  done (took 18.881075829 seconds)
done (took 104.342486141 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.513608683 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.698725801 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.970667203 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.754146918 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.726192959 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.992630537 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.70986558 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.972698231 seconds)
done (took 41.973762044 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.735708802 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.404068933 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.418473268 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.736668576 seconds)
  done (took 15.195645171 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.695335452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.122407059 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.726291747 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.548580107 seconds)
  done (took 21.928598227 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.066929221 seconds)
    (2/2) benchmarking "read"...
    done (took 2.047324982 seconds)
  done (took 5.755172046 seconds)
done (took 51.25384024 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699962085 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.700089628 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.698009714 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.701051268 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.699990089 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.700810882 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.702416594 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.700054617 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.702147681 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.702584039 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.699685183 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.699547012 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701859784 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699848492 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701621206 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.701196559 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69958384 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.702098669 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701671068 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.699769802 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704055061 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700554269 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.698521025 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.701393773 seconds)
  done (took 42.457907669 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.70234204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.700844588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.70023449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.700954871 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.700940078 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.701279561 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.700176893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.701151779 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.700469158 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.700638612 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702859251 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.701441238 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.702917861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.702786192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700687394 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.700013667 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.700080461 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700767249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701077114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.704331497 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.701924982 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702741641 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.701725886 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699889706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.703375391 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.703173982 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.700755119 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.702597385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701890638 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.704385561 seconds)
  done (took 52.689251498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.700634329 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.705293861 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.704371394 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.702155074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.699984983 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.704033881 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.70196292 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.701109853 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.699844509 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.701776956 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.702983316 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.702921401 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.702343935 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.703245711 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.701520635 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.703980811 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.703779728 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.704587577 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.703813477 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.702697645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.706101757 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.70302914 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.70268781 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.703288089 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.702897496 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.703417083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.70322654 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.70381436 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.703282156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.703155368 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.704712604 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.704117401 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.70479923 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.704329963 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.704712698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.703403297 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.704738784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.70463283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.703359303 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.70416749 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.703807077 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.704117268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.704990634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.704732854 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.703599946 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.705398069 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.705343675 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.702905467 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.703017723 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.704578412 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.704777002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.704341066 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.702558012 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.705724211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.703704045 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.704091241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.708781244 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.705291239 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.707797437 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.704071384 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.707627668 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.70516417 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.704130475 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.7063179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.70568122 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.704268073 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.70518229 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.706328729 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70298304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.704659093 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.707879319 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.707074204 seconds)
  done (took 124.335799893 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.706369853 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.708278092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706558284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.70709946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707596875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.706528798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.705717037 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70740727 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707748159 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.706015871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705672851 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.704993783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704990815 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.706317039 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709176071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.70610764 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.707736526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709556797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.711199441 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.707500908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.706759221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.709062147 seconds)
  done (took 39.203709594 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70802564 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.70691774 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.71072748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.708317148 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.706238552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.70662012 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.706087118 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.708338385 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708571681 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707145021 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707238073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707149346 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.707979435 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70675648 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708884044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.707147966 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707412218 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707006182 seconds)
  done (took 32.382130879 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.707144611 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.70781854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.707701094 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.706551852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.70789686 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.707215822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707042898 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.707935951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.706671257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.709742938 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.708416967 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706979589 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.709050578 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708151078 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709050439 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.70847356 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.708010069 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70641732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707572503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707583627 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.708498775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707276673 seconds)
  done (took 39.216157149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707718514 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.70784892 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.708648407 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707328428 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.708394178 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.708414482 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.708761104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.708877155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.707485749 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.708683285 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709610467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.707848981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708393447 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.710257115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.708708376 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709079543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.709386493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.709380256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709121106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.70894193 seconds)
  done (took 35.820523503 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.71051383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710652072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.709921064 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.707950947 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.709901249 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.710113473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710084721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.709819237 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.709403693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.710898734 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.711845243 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.710030427 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710466233 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709513034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710208884 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710125081 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710335967 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709286351 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.709745593 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710722647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71044281 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711617007 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710435914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.710473221 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.711106002 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709909083 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709877441 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.710718741 seconds)
  done (took 49.535720399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709267224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.709861542 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.71084915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.71063079 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.711368061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.709697106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.7101758 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.711562422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711259931 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.710203935 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.711379737 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.710375606 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.710427462 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.709836695 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711832523 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.710819624 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711078579 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.711874426 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712961753 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71079588 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.712677701 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712250245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.712451734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.711599996 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711404279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.714718101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712667403 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714398581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712564135 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714102673 seconds)
  done (took 52.99388732 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.734970138 seconds)
    (2/2) benchmarking "in"...
    done (took 1.73634884 seconds)
  done (took 5.123354037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.714246258 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713804019 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.713181692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.713860149 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.716521964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.710920331 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.712077003 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713093583 seconds)
  done (took 15.358111086 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.713897488 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.713640134 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.717784819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.714607087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.714642761 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.715046957 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722412593 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.714179212 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.717102173 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.716060356 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.723908369 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.723993873 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.720520921 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716647709 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.715256809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.716638049 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.715260502 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.713806939 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.714697612 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.713360126 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714637394 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.718250062 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.717745193 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.714392072 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.716243589 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.728095612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.719986283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.714431829 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.719952674 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.72156011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71633848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715807313 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.71541729 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.715400667 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.716327041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.714714251 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723480128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716845472 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.722720504 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71723006 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716117233 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.717525052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.720306482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.718521784 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719510854 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.717330623 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.714415245 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.715418781 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.717413642 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.720948156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.726942256 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716860196 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.717933897 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72213393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.720658328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727350407 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.718782613 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.72390757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731016953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.730813447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.729960729 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.729146686 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717840026 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.715540367 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72744311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.748424049 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726320156 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.7182331 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.716896525 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.716966658 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.725421063 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731945105 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.728054995 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.71773058 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718730012 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.716337916 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720595163 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719779545 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72679417 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.722955125 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.717542326 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.717805823 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727836398 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743746611 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.720119834 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.718411053 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.720307613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.718127117 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.720349997 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730489664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.719484609 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.718814494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.72005958 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.722275162 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.719946064 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.721604696 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.719413576 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724347377 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.718609377 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.718809075 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.718075866 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725776386 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.729801965 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7181821 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.71928259 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.725413905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.719784754 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.719956294 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.728206553 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.717154802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.719075033 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.718675489 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.725478347 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.718673524 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723297049 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.728070576 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.717233229 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.724282099 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.719517431 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.718298087 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731597936 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.745697061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.719061846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.719864377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.724954958 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.732277386 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721301859 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.725360791 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.721973055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.720535368 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.718703295 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.72451373 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.72212334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.724061434 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720758988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.723341966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.720482941 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.722046962 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.720255394 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.723638705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.722218464 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.722405543 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.723382279 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.726494891 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.720150777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.724235037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.728999629 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.723029386 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.723067254 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.723546935 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.720678925 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721938166 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.72447901 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.721813178 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.72194881 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721284185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.725692463 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.722099206 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724122261 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.721666931 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723758305 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.723542127 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729453867 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.720959758 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.727684691 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.722676428 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.724508205 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.720974172 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.722664335 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.723459152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.719252535 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.722478852 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.728923356 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.733415236 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.722516474 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.723745747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.727139382 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.721849159 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722527309 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721999947 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.728974965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.733213595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.72302094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.729202425 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.721934318 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.723096681 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.721800361 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.726026534 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.721476309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721885231 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.727350255 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.732655717 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737820553 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732363665 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.724806734 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.725910745 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.724217808 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.728347922 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.729323524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.723148324 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.721292837 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724631867 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723631072 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72402884 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.726349898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.723344536 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.723508012 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.724222693 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.723424318 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.722934036 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725112689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.726903451 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727406445 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.726477332 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722952836 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724371197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.724264767 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.724014198 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.724824697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.723929602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.724408074 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.72524638 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.730710109 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.722050208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726820847 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725629682 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.724822448 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.723837147 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.723670331 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727194087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.725038506 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.730732029 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.725053692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.725672278 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73161089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.725305126 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.724004666 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.729320782 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.72431642 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.72461052 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.728770188 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.732295832 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.72532017 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.723847964 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.724874468 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725733711 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.724089874 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.733052603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.724419033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.726347551 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.724220727 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.728000181 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.724950341 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.728394864 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.727624631 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.725242506 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729560285 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725356653 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.725220001 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.728777851 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.725383255 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.725078971 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.725224131 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.729244217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.733089651 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.730990174 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.727867254 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.728701614 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.726686797 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.72757367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.728656266 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.727140155 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.726955446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.739524659 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.732985835 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734007134 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.729363718 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.725656813 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.733083841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.72789162 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.730008976 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728319894 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728966585 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.727692093 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.728292568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.725772777 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729909472 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.728344953 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730284121 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.729263378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.731544718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.726877001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.727601851 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.727081791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.727155657 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.726565667 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.727270355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.727669111 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.730140636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73025401 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.727197272 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.728590295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735546726 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729900977 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.730290156 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.729524536 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.728372017 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.726688919 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.729835696 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.72643819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.73226167 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.734468354 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.731409956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.738129295 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.729981922 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738760116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.72832228 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.731209937 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.735591011 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.727647444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.727087196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.728830142 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.72971519 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737023293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.728421832 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.729918127 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.732865271 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729089368 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.729713119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.729259799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.729895331 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728263535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.729187731 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736937819 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.730967866 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.735097295 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731190893 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.72955729 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.728338728 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.729568263 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.729330823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73379478 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.728992589 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.731265982 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.73192295 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.728799582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.72930368 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.729854878 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.729409512 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.730778946 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.728569118 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737375564 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.729916077 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734510924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.730222533 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.739619792 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.73058931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738596422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.730145513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.730288799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.730071591 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.73122358 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.732148294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.732885561 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.732924582 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.730121953 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.731476473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.735604094 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.730975452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.733856066 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.733171845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.731291558 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.732370654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740792063 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756033228 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.73244834 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.734907226 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.730794832 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.73377536 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.735451485 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.731156287 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.730934868 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.73440275 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742343868 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741610524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.733903116 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.73250386 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73350947 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.731353316 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.731281417 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.732893322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.732128383 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.731926941 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.731738284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.733264945 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736874323 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.731730691 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.734012822 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735338813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.734188581 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.743562814 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.7329178 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.733508183 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.733132534 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.733542082 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.733646205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.733264636 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.73284655 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733990338 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732771326 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.733447085 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.740017933 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.739352918 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.73665366 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.733332988 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.733815438 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.735112692 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.734875216 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73399716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.733777346 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734509201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.735920368 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.733285666 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.734307929 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.732659542 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.73330967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.734667099 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733488868 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736801092 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743588401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736460219 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.733549459 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.733364019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733353509 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.733066927 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.734492326 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.742110435 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737134571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.746100595 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.7438191 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.73783887 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.735185943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737554199 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.743982947 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.733526539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.73777221 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.735167706 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.737051575 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.734764495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.741560735 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735779016 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.742515941 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.735875926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.735768569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743930522 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.738319167 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73569668 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.738889448 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.741224294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.736784864 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.734553343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.736153992 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.737218186 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743663937 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.738234581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.735376276 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739407411 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.734155501 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.738023794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739300914 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.734474879 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.737449944 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.734931252 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.737500733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.736433853 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.734564977 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.735537639 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.735165203 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.735826283 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.739646543 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.742519633 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.736273113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739601177 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.737720705 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.738884959 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.735849059 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736050659 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737089961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.736172329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.735773241 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737004411 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.739023637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.740119747 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.737491688 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.737430456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.740749078 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736189223 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740769967 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.749744603 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.74487149 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.736492362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.740223022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.737515036 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.740135457 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737605026 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.737772946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739243899 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.741263292 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.736758945 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.737957417 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.737438561 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.740459269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756133198 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.739502267 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.738447745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.741589431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.742206687 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.736225889 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.737552315 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.738301139 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.739607993 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.74134328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.746515738 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.738265654 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744707343 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.739911165 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.739482948 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.742091247 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.742137862 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.74668994 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.743304377 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737436287 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.738165222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.744720937 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.756445946 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738460034 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747956454 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768913294 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.74042424 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.73941366 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.738766302 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740906122 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.738347322 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.741366853 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.740608668 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.738017223 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739446394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.739647522 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.739048553 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746947844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.74255272 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.7387829 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.740386507 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.740620786 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.741619298 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.738684285 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.739447409 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.739483414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.740135479 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.740498185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.738893075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.741670175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753002768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.750585922 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.741085357 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.738394547 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.74028374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.74624558 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.744967571 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75392723 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.749775255 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.739835344 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.742817332 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.743533141 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739689072 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.742404354 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.742973058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.742762762 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741667821 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.740187314 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.756079428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.749681712 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.747709356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.742259919 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741027114 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.740811469 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743156942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741749243 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741898456 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.745044665 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.74278617 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.746527996 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74093184 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.742105618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.745939974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.750347458 seconds)
  done (took 1032.982807793 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741237123 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742211455 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741602899 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741034976 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741462415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742395608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741882855 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.742002553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740473258 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740566315 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743919613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742054252 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740858769 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740625748 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741597331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74300041 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743336586 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743193075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741687116 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742689544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742228453 seconds)
  done (took 38.259174758 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.743680007 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.743373561 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.743722677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74399001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741920277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742878765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.743220335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74319941 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744800487 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743560572 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.742870251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743497582 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.744851093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.742310655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743104629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741697881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74258644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744005272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.743167119 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743902426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744978515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.74467067 seconds)
  done (took 40.035899347 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.743057173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.74321121 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.744201143 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.744216432 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.743840454 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.744265763 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.744144456 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.742673218 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.744426095 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.745767815 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.744190066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.742342862 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.753345358 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.752292968 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.747071142 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.744123313 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.891041561 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.745118293 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.745458779 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.742911897 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.743452915 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.749953852 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.744699341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.743877925 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.744658768 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.74465988 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.744884941 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.745601124 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.746120899 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.746699995 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.748557308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.745815746 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.747387028 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.748485591 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.745509837 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.747271621 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.749540943 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.745702215 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.745296502 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.744279226 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.757660015 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.770530997 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.745789333 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.75309077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.746689537 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.745853207 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.749810683 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.755215734 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.746069697 seconds)
  done (took 87.423995511 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.746290588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.746463741 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.745455367 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.744253738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.74780725 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.744844809 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.744564678 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.745670193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.744579461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.744700302 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.745694885 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.745012524 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745038288 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.743042509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.744468496 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.746099642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744296666 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743292086 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.745482245 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.746255916 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.745141463 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.744375824 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.744559278 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.746384366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.746216185 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.746072383 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745003705 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.74357663 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.745679015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.744733071 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.742625505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.740513371 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740370889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.740026053 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740685013 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.741446576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.740156642 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.740299269 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.740651357 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.740334705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.740933163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.741832064 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.742064388 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.741473777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.741792045 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.741937008 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.741154917 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.742901461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.739865729 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738949142 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.740185744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.740025782 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.740478643 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.740096329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.73926748 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739267189 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.739557474 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.738737876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.739704969 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.736697115 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.736965435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.735899131 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.737094175 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.736134768 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.737097341 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.735770301 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.7350885 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.735343552 seconds)
  done (took 120.144141971 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.73555232 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.73553104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734915207 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734647236 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.735606572 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.734813663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734686745 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.735803603 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.734986978 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73557312 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.735524229 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.735219075 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.735166383 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.735766187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.735463312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735212172 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.735948357 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736030525 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.735874746 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736089207 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.735957522 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.736240028 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.735415521 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.736180243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736739304 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.735306144 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.736031904 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.736371862 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735523435 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.736896646 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.736936656 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.736375818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.736400967 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.737625696 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.737108452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.736749891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736731549 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736695049 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.73700089 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.736580684 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.737263138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737374738 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.736774035 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.736902157 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734984398 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.73684298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.736221601 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.737753146 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.736590074 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.735975118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.736237525 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73635271 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736671251 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.736776859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.737269099 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.736590023 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736531379 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737589071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737321973 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.738330178 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736772631 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.735831578 seconds)
  done (took 109.32117299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736122036 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.737643573 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.737629753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.73651814 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736430521 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73674363 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736722883 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.738914736 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737286733 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.736520513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736816766 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737049104 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737964687 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738144684 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736672388 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738057869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736549138 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736153321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736653593 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737184417 seconds)
  done (took 36.415746258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.73625456 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.737024072 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.736473711 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738296628 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.73679404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7355699 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.736610965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736183842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735587942 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736922013 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.733796237 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.734173035 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734001377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.734030255 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.736116762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.733945742 seconds)
  done (took 29.445453984 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.731727064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.729674018 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.73044505 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.730631093 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.731933856 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.729474642 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.729597536 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.731201726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.729614632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.730154742 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.729950592 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.729852422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.729838097 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.730108357 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.730547706 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.731545025 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.72931912 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.730508823 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.729480677 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.730199478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.72978152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.730469361 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.730256695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.729719592 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.730201747 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.731708533 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.730285914 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.731167191 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.730452166 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.729652983 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.730163894 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.730451359 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.730285187 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.73061381 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.731213886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.730049126 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.730051748 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.729726513 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.730862826 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.730456166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.730504218 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.730112893 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.730516869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.731179495 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.731483663 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.729857001 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.730316669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.731227133 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.731644986 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.730436382 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.732167876 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.731892164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.730422392 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.73268659 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.731328343 seconds)
  done (took 96.847700669 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730975783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.731238616 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.730903744 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.731579054 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.732186117 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.730690041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.731145917 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.729760339 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730952579 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.731017858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.731730671 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.732051116 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730293018 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72988771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.729922939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730398641 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.730105497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.731846084 seconds)
  done (took 32.824263937 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.729903101 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730293373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.729616524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.729170286 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.729386846 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.728214408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.727465716 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.727272184 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728826881 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.728425391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728092239 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.727995573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727467257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.732281042 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.727374484 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730687452 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.726903568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726534493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725865815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727206652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.727120307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728984626 seconds)
  done (took 39.691836388 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.727080845 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.727360332 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.741480615 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.749508915 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.748836298 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.762277045 seconds)
  done (took 12.119557505 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725804907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725538398 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725892675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726942479 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724824733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724003411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725369449 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724299654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724737735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725595303 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72380757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723734276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724572896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724250712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725579081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723177914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724251365 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724079894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724156233 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723834984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725689987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724042158 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723342644 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722711883 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723587182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724267079 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724118322 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723772054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723203449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723842406 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7236825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723979294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724564178 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723476244 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723493988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723357026 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722784564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723191084 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723533876 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723268621 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.723177509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723717732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723649704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723770146 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722303917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722066594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723301852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723929599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72304067 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723998007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723649648 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722627304 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722708243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723453961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723034865 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723936152 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724175566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723332896 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722176199 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723613577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723357219 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724328464 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722549779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723447156 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722497306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723025277 seconds)
  done (took 115.437158001 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723632875 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721732669 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722246603 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722091796 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722044015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72297215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724093329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722021744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722576749 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722708654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721361998 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722071249 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721629442 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721406418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721215903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721872417 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721377425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721792027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721286956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721145142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72125429 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721302207 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721343327 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721560781 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72135846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721122595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720758355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720091289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721304643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721690307 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721054661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7203382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720818504 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.720416236 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720195016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721724292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719947586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720063877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721066047 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721194527 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721054695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720091811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720280456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720517309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720224099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72072212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721120497 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720396466 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720460941 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720634811 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720600417 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721927519 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72147979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719572788 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719702826 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720263994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719763478 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719518543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720571357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720562679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720055264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719832218 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721356755 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719858429 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720785581 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720427935 seconds)
  done (took 115.252710759 seconds)
done (took 2396.958090064 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.779714692 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.741347423 seconds)
  done (took 15.176500145 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.883189778 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.835326871 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.721678999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.764149248 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.722224732 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.748931276 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.739058411 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.723362932 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.720863605 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.721352643 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.721616219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.905569719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.732218805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.722147659 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.721629537 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.812238646 seconds)
  done (took 49.854648666 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.723697454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.725820061 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.734695015 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.727487728 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.724808588 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.735567154 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.755266228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.726517714 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.758491969 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.737718937 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.793168074 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.736022023 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.722430596 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.772221307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.738448736 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.737936293 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.818439821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.797306689 seconds)
  done (took 33.123758013 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797920459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.727039655 seconds)
  done (took 10.186458914 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.722733683 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.768308454 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.799643902 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.715791977 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.720548025 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.719540812 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.759260802 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.755792459 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.74802037 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.727201781 seconds)
  done (took 69.093891154 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.725889794 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.724341582 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.721760578 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.722224745 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.719112693 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.721502959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.720647693 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.719092988 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.379534508 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.754986221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.72884484 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.726672223 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.720883101 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.721579181 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.719081579 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.743020063 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.827532623 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.719862113 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.717950433 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.726473188 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.721377563 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.776662642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.733911333 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.7218768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.746983479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.37701226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.726163913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.724499277 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.824225811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.715243265 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.718024666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.908773252 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.720235423 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.186004061 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.9851705 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.723212588 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.731910206 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.725160802 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.715274167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.832332188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.718409556 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.724590796 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.669748519 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.963459098 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.818834036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.762673994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.028323121 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.735641108 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.719092146 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.746749544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.722322942 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.719777078 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.731378962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.229290109 seconds)
  done (took 124.521334204 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717685293 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063570308 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.883016298 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.720031026 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998838834 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923510015 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717136348 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762569137 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.720768974 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943228603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971977881 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820792763 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718201661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.719537661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.719760002 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.717690637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.870630079 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.787016222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.718384619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.717160292 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744229355 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955804451 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.839497148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.721063598 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.743450256 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926576029 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.838398887 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818885656 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.437550525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.716648202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778337717 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.718493943 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.719082258 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716241679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.872800096 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809171319 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798608422 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.719859452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717303535 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.717577965 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.465062991 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920162248 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812259673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.846593698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.968555158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921280987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494713466 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.717973362 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456188126 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.879238053 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946200615 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94421794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.837608891 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.72169458 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.248386654 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.716944032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717181817 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966184366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937855615 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.813381971 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720286342 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.717259827 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718213277 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005886774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.722831801 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811574888 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720936796 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.720205987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.813123657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816397838 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.949352673 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931608825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.749925279 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.056161464 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.235139149 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964320877 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.784400975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968268971 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.723917298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719020281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795156697 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.569675271 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970776534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99892636 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962910453 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753887049 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.434157825 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.718651642 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.943010585 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937723077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976343003 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965887622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.957408316 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.040223723 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.719143068 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.718987225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.025255939 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841750316 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.721974439 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.065589428 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948572519 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.251099499 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747352588 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020329749 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.85024164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.722699793 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.349792292 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.719824825 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946104171 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.758414935 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.721089589 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721311677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.936629553 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.705902488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720726457 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.61343587 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.780694936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.722220009 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951563313 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.7243619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991368054 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.724914907 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950444965 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.757897606 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.751289289 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.94778486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.966013839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.723620597 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.957569237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961846669 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.83508914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98960076 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.621180269 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.723535418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004354911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723804419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.721017364 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.888966547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.723179485 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.861454197 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722404542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.011307061 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741380822 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.369501585 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.724702351 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.973362826 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.754614045 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.770751008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.725659048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.852376074 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.723068455 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.547517169 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.878171744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726484129 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.724841289 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.612505446 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.722330902 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.870254564 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94604777 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743361318 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791336124 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.385189522 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721775957 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800783443 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742964013 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.112396512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.723066703 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.974648705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.724644556 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.723188448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.721895248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.007038944 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956366312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724556077 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722534811 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.626057896 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.722854357 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.722990184 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902920515 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.161176702 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723227349 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923645998 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728670328 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.849006275 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.726144137 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.80492026 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.058119412 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.722445274 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.72451148 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.72459187 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.723161095 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.724957556 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985488982 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.748098477 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.213853071 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.859961031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992996519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.031271573 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.962152963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765586253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.72485364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979667785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.727182236 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.785974867 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.72565307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743503573 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949005806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728627602 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.932257625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000434748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.560386805 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769982353 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.725657526 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.724208888 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.723322501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.869310381 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80843595 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.727937705 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.72320057 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.837471483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.84311706 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930205722 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.725724699 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.869427484 seconds)
  done (took 871.457914656 seconds)
done (took 1175.071873584 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.726209727 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.72908841 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.72754319 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727684342 seconds)
  done (took 28.575769979 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.735800927 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727445933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.726908416 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.726959921 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.727738075 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.731059613 seconds)
  done (took 12.038862815 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.728620601 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.727274288 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.729321672 seconds)
  done (took 20.847541878 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.797263407 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.113478315 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.858044139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.197515367 seconds)
  done (took 9.629033969 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.729276125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.729288932 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.727972733 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.729741697 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.738387451 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.736521134 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.729213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.729367271 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.73651428 seconds)
  done (took 17.252095449 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.876704821 seconds)
done (took 93.88220382 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.73732973 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.859925376 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.833789282 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.437483361 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.046199224 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.753989778 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.79214193 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.745084178 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.727819993 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.902962591 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.223950059 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.968405762 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.819278991 seconds)
    (14/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.809495949 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.742253062 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.829318327 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.087931148 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.970971117 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109269169 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.234306167 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.830868191 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.022829423 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.892457236 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.730776634 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.826247156 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.890178758 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.733979765 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.097950709 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.755568583 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.077751761 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.615699384 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.731789466 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.813473134 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87531021 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.817179449 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.94992454 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.191408806 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.552116658 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.045124709 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.745026336 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.806161729 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.805989058 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.754974415 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.831301386 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.901879548 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.944045535 seconds)
    (47/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.95166244 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.734365825 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.834611351 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.730823511 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.238916095 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.951710452 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.930749825 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.109912945 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.733385671 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.681793563 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.867716749 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.740062585 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.407096513 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.964481267 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.740029893 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.88509793 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.749608299 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.877094465 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.33972461 seconds)
    (66/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.96679649 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.796898077 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.213697276 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.829423528 seconds)
    (70/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.733323085 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.754265917 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970810711 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.824347392 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.749116582 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.057633149 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.733766286 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.119221055 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.501409618 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.860954599 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.747850191 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.731437253 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.734343464 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.156227669 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.869052154 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.83113904 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.867032164 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.830083366 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.394611727 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.816014605 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.093809509 seconds)
    (91/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.018281479 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.889520412 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.120556836 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.467784058 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.901762583 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.734517583 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.630102177 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.867521473 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.493343573 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.106564708 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.974924089 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.974367701 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.890552087 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.735844424 seconds)
    (105/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.523890162 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.286433057 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.741544522 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.39795984 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.851517849 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.736954723 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.631975371 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.928574719 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.739633267 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.732227334 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.502761316 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.756175966 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.088905634 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.042279934 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.73748356 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.993850225 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.75619311 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.500570855 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.930705538 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.863862969 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.755531463 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.734199911 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.735558169 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.129917469 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.868534782 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.917727225 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.766281513 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.398366993 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.932025237 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.067459465 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.978719712 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.737136019 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.831553788 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.966377153 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.040810904 seconds)
    (140/309) benchmarking ("sort", BigInt, false)...
    done (took 6.73858954 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.741304289 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.919272544 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.866092374 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.757243982 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.820551104 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.889791693 seconds)
    (147/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.984403699 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.751300835 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.846638689 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.642092724 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.763303157 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.509939103 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75273017 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.736472243 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.817340211 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.977625053 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.740932301 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.598510314 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.189590735 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.742090992 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.827016914 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.572791348 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.370367699 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.766922663 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.758807979 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.048577179 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.856927658 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.946717798 seconds)
    (169/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.226595989 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.741801166 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.73841504 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.905438466 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.065004504 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.742301592 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.12823663 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.091372212 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.741804062 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.817028439 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.16168052 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.815428652 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 5.499778019 seconds)
    (182/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.815794158 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.109939703 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.846331963 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.740015182 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.794485112 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.870421312 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.835507829 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.929640631 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.758986129 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.738225811 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.196367487 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.897214112 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.855950169 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.875968992 seconds)
    (196/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.995867023 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.778893967 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.73887851 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.972585364 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.852938688 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.06396368 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.878207998 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.804229894 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.739329402 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.392981344 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735784806 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.877290824 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.923185781 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.082030857 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.971332404 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.92629873 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.185971945 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.389325116 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.942335951 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.84946444 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.767616613 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.739223 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.80490816 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.705981349 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.746859063 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.214542465 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.995657415 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.78058836 seconds)
    (224/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.916444947 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.717687592 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.091244395 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.743844281 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.150209265 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.748723249 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 6.947861712 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.557963554 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.061292254 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.080632109 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.03181347 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.74314923 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.681630093 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.664851074 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.781174996 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.135247103 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.059718844 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.961204995 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.05555746 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.858139551 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.056577202 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.743333919 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.197777229 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.898788331 seconds)
    (248/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.957924397 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.010501666 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.742588494 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.744264127 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.83785421 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841680623 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.479542658 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.94301389 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.90590017 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.769227196 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.743884514 seconds)
    (259/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.843070929 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.924041534 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.82354411 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.928567451 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.848745204 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.986872656 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.74548667 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.882627423 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.916834135 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.019899004 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.093356562 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.819331407 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.760138068 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.086026908 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.745451716 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.273585931 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.145321464 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.082430258 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.061161992 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.899140771 seconds)
    (279/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.111106422 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.868452191 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.744821289 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.328804248 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.766951628 seconds)
    (284/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.8855901 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976960812 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.833220269 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.06659654 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.413540919 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.746280103 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.67475868 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.745239478 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.662679455 seconds)
    (293/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.747670666 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.837248911 seconds)
    (295/309) benchmarking ("sort", Int8, false)...
    done (took 4.616683499 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.420793027 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.775295419 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.869339666 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.742408047 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.171759499 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.12887646 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.752410983 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868805013 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.413849976 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.192097038 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.956148218 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.69055678 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.9059933 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.875493092 seconds)
  done (took 965.890058447 seconds)
done (took 967.619961409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.771317376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764327201 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.747317939 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.769931725 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.860260163 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.793955183 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.761149216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751797501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.798546358 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.797487417 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.74614433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.79316718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.748796396 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.748373472 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.748027856 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.764302434 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.049265998 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.774052653 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.767393395 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.760511957 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.76559247 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.746747271 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.798401715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.792775707 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.752524451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.753918148 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.751264498 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.768635517 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.861738504 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.752171752 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.75462908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.760723764 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.049230324 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.77274072 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.74758327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.768571967 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762470979 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.761653481 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.754004279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.782509854 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.135263784 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.78168771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75082691 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.750989067 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.750258547 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.757726429 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.750249397 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.760050665 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76527317 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766396916 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.129547897 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.798210045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.75375099 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.750030609 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.762918877 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.751125033 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.755395777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765639782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.769934145 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766416432 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.036043197 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.783841041 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754519577 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.767672041 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.759712522 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.165031774 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.78137396 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.758143935 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.137652622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.790563837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.167100846 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.793463262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.753400301 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.766307671 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.783727846 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.051544747 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.774034045 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.750408026 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.760078903 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.748778621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.763185988 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765885254 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.75745901 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.753178757 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767289219 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.798595083 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.765618855 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.751250541 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.765953086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.771135937 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.760371507 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.764477662 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.75623315 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.751961618 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.764449395 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.756306227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.755001973 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.754443232 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.757442391 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.766639927 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.136957045 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.800702651 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.749558487 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.749165427 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.752956436 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766252461 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.137869771 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.784438487 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.775457609 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.802932377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.755073351 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.038091984 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.780071553 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770705414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.764916259 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.756454876 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.751727856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.037869766 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.157171504 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.80142407 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.753799397 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.750718044 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770078037 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.754449562 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.751654141 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.055106362 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.781112738 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769740239 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.87677288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.766937222 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.786249061 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.751700087 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758215129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.802591113 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770942757 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.785864837 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.756590793 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770717577 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.771088799 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.751516977 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.765223308 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.767497368 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.753815981 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.762655102 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.754022871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.804851389 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769596296 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.769688263 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.775664608 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.877724261 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.752002796 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.040600708 seconds)
done (took 275.7626679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.833655763 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.753574863 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.844264225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.753493659 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.843360232 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.826556107 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.753590573 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.751915119 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.75125122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.238632121 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.752266545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.757011328 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.751175822 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.752244751 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.823587863 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.753206406 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.751751473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.185469243 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.754252625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.832963332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.751758007 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.753267078 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.75371068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.242750203 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.752512662 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.751612565 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.834016812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.753276291 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.194183224 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.752258783 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.752848731 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.194205167 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.834224804 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.780212949 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.760867444 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.758021237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.845047218 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.763373669 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.822364334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.823364987 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.849699101 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.787646931 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.752166091 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.752779426 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.75649844 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.755239065 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.753195254 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.786351216 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.755323455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.758755078 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.185944928 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.761101133 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.75801277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.754024273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753853592 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.783198122 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.755092203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.754962092 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.837088848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.755366871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.823332041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245079434 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.239998772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.754846394 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.754315736 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.755974827 seconds)
  done (took 177.406394948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.822115185 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.832303948 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.820169398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759552241 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.804145847 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.821966247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.760912243 seconds)
  done (took 14.309868088 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.761641984 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.755988349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.80507373 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.803830924 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756454516 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.911809612 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756819059 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.767928318 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.761216174 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.782829116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.757525946 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.756281066 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.763907652 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.755659089 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805343152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767504302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872740346 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.759127701 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756816403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905128802 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761701856 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.76448248 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.782516532 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.768439131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756921672 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.763761573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.344993682 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758106735 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756556352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.757121126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.7565174 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.798524352 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757569615 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.755461244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75651264 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869983713 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.756326336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.757660249 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.759250419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.757655522 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.75734986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.759128607 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.757752403 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.759066995 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.758695687 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.781177572 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.757996872 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.75899019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759228933 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.758419228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.784380973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.758740038 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.759721184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.763678901 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.802058017 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.768464069 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.760929794 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.759447038 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.761169044 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758769587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906623361 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808015722 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.759973334 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.808647518 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75961015 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758239061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.759235043 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.760569731 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.847536938 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.759233075 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.807476085 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.760009505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.916783363 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.782546981 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.760006815 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.763155577 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.762101591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.759218213 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.75886037 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.767795466 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.759795733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.763305533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.766447301 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765026339 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760740242 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872298129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.899836547 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.76016047 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.760709447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.767798743 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.759564095 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.804482988 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.761673528 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.760519693 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818329077 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.876730645 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.788443811 seconds)
  done (took 194.893107111 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.768994382 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.769547669 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.763401299 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.777185771 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.762469591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.760348215 seconds)
  done (took 12.295794585 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.76233337 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763765209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.761143679 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761029112 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761787592 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.761233054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761114499 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761450618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765327754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.761494872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.762583626 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.762109748 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.763335778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.760801375 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761962744 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.759930266 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.761776342 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.761557541 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.763541668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761079364 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.009430855 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.76109333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761709359 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.766036267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766861093 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.763414986 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.775733309 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76303323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761451269 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.769226743 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765602359 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762865812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.765349353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.768881792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.765182244 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.764976657 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765708395 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.762612552 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.762293948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.762331405 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.765676256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762572903 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761527354 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.763877988 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.764005266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.768574674 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767414127 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.775688864 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.764605702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.763818744 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.764509267 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.764128302 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.764462304 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.764468784 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76898607 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769837078 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.767956439 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.764885583 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.764429055 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.76566383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.766843123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764412097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768203632 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.766676465 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.772782264 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.765155256 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765485295 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767462557 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768381749 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.765040835 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.765116728 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.765193274 seconds)
  done (took 129.999256032 seconds)
done (took 530.605966885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.026250573 seconds)
  done (took 8.722510793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.831118431 seconds)
  done (took 8.883689909 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.683410006 seconds)
  done (took 10.397650443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.799027404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.792936749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.789092961 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.785562413 seconds)
  done (took 28.910509744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.989338506 seconds)
  done (took 8.706347462 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.80587868 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779985137 seconds)
  done (took 15.367934009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.821995503 seconds)
  done (took 8.53623731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081628676 seconds)
  done (took 8.803749439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.802325462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.800016716 seconds)
  done (took 15.337130938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.783007286 seconds)
  done (took 8.498199573 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.906758347 seconds)
  done (took 9.715687707 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.80690059 seconds)
  done (took 8.591008607 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.858190222 seconds)
  done (took 8.572018629 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.890027637 seconds)
  done (took 8.604415498 seconds)
done (took 159.347458777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.783752663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.784766656 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.784243099 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.785134784 seconds)
  done (took 28.852774141 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.814535586 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.814565527 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.815341532 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.824137314 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.814437627 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.815926571 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.805112874 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.805840378 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.825355933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.817896677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.816947392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.816103398 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.813241499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.806843971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.81755424 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.815247904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.826640485 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.815277703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.806211883 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.817313909 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.783019243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.827135781 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.817100073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.782445496 seconds)
  done (took 45.229766321 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.972457628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.85181924 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.935819117 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.835761934 seconds)
  done (took 9.310130527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.835321739 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.83551272 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.847633563 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.886839786 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.923563484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.84622013 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.806860434 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.80485442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.791373366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.83927981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.910298497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.831078689 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.922661502 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.781481807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.963087625 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.783194277 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.783410069 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.835017103 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.88637644 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.908730675 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.784581329 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.835877064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.837626464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.831311983 seconds)
  done (took 46.026998393 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.78469538 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.793234538 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.791711347 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.786302599 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.788350484 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.78645876 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.791294555 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.787229687 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.805755807 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.785804501 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.783173505 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.783356965 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.791490693 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.783944371 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.785337936 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.799852243 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.799081364 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.784914706 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.788341157 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.792732216 seconds)
  done (took 37.509453078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.783485263 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.630083591 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.129705656 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.032667658 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.782835695 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.784483999 seconds)
  done (took 30.858878367 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.797806074 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.789557607 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.784124867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.843708043 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.92606804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.792361049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.784103443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.796543009 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836357452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855379878 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.806586136 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.816136184 seconds)
  done (took 23.546212935 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.785213603 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.788746044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.788102948 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.798758912 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.79457775 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.793980181 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.796430401 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.784925214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.798362295 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.804533487 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.794427689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.798541524 seconds)
  done (took 43.249840344 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864047995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65741784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230157486 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243342348 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309125824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987011465 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.784254768 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873878984 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.784747246 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057573056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.115207198 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986163644 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026464984 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.663196766 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789815168 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.248813636 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07118495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00116759 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814130681 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408805701 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889228771 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35459439 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.468725888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891601288 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989998449 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.906930384 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04304263 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.734247199 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835517509 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788534158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791845588 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786485489 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056964992 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907599861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854232745 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790750375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208647474 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.49333321 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.792411133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.470537382 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.332068569 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899362933 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793322759 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789793022 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714454073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359702625 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886418456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.788028499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.489035052 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788129393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791332414 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864938192 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.790291446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.594661065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474240423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057753219 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.788729 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793624135 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341968537 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78990082 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46024692 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.721185598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.871984382 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473930058 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240060592 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.940454769 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.788620098 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796927771 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710566753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.482806321 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907464677 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923590783 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.79937958 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430794222 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082299663 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.193732387 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843036639 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066412108 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.695545342 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.719563626 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00644162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.739310531 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718856153 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.638367235 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714771337 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002913685 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824442365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.380077528 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827303687 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871582924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.795427225 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800474792 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792965984 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006546934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.681917122 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785168439 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.074040196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042521229 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802932438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873032742 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719459155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.792467167 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036769396 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.992188532 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.082230398 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.261666134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883259573 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777383094 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.798564235 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.765150162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797956715 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059113042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852878305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805831973 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912512831 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.73606375 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044457807 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811438819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.887604649 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.146113096 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030181081 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.130646756 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042154509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852464372 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797915563 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.793124922 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495215598 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397032456 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.009090404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.802550638 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367432183 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797739605 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.795446878 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72968445 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.413074511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156235922 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.878867624 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006118607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.790415442 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067827309 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716096229 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928943932 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.799357918 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.009117666 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.444924954 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.880297803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045067839 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07640741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.066462718 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802340184 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80822673 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884041431 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810786504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.250586557 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035819425 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.797897363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794831862 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.490127051 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853086585 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796231741 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.796232301 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320041216 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070071539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.819448687 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.797814101 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667164521 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.803665691 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85744147 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796158873 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794510076 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.309970926 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294719865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.800658447 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.434478582 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009375179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797138452 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.482027682 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977071501 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805654807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069537974 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860884029 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.720131946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.492075206 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.494005991 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793035744 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720311405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794487119 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797176835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796528544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.985637736 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074561345 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850356648 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.443518708 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901935722 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799531842 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.796539978 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795010067 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.311423454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821329785 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435114109 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.804164364 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925936879 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.808341774 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722086224 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.796719798 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800085214 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.794868797 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.741880281 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845624397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.44737563 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004627385 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045590513 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.210185198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803804656 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.442955424 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913787059 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.815681655 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.09894978 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336327414 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.90429765 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861579959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.800859393 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.447989713 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529653355 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348256029 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101342589 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119368055 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148549329 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.195149156 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120693794 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883805507 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021469102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315376435 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852186624 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885592898 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73081926 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810064414 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.439732394 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154524216 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80190273 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009995479 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085366402 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.168273908 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9344563 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998915643 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826853707 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.616480805 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829977378 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.327981367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811960519 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.288022777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002418098 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8781554 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100756063 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873160183 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.789809589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138828501 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836521327 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.494064657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143773253 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.242889479 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.285934263 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025376939 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.79894366 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233751004 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151891539 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.009713956 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.916371177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717880135 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801303076 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797658665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.812987761 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.769441399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.646193749 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.040053377 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797960328 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019706356 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.931585683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163114592 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.700658688 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.793382003 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796994912 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040636679 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478996073 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95323766 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.11165335 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364888718 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804888924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71874962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722674953 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.494094401 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.802986346 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764930198 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00535524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.89837081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477036668 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.183727826 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10580817 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037807389 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.806228532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065369908 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073274953 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.292536673 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8183236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.892238554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.110138792 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.483314787 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.007059915 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027214492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325542093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011823463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250553738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.767033922 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.795497596 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999781847 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00744773 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.176960992 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973666061 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.505847079 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.809137633 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170308287 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861329316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.171428919 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982165887 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.879949635 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803001255 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871784199 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798149534 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.799075317 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.800542886 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805625288 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.177819907 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914889828 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.809309438 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874608065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834609437 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.368682351 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.805254561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068194928 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160887017 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136489082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861873682 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794775858 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800069825 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724079267 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92500325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.23878473 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065912698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914522364 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.933534041 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818882238 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.115029671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.06539831 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109342836 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070273948 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.67827537 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438416829 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919189029 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.013812092 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802631382 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.999874419 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013940745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110268747 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367386008 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.942439419 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991292104 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066903313 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155411476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800717174 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380787506 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.806530334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197473188 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.833515055 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.181440988 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059068388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798802742 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917942965 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802570081 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.001902021 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.251893458 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495436913 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14792595 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647578989 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802521012 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073066697 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134156475 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107679109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87547587 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803251952 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.495451403 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931585308 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.635419409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.01588329 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802211464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008711612 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.51051742 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.803388727 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076088065 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106416382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.800785135 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.665786373 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814219462 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.802472243 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015197255 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019276528 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048152948 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805008215 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80726729 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.61279555 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080280189 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868740868 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728207221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.807252192 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848295496 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.028062766 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821410373 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.318052431 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.499555398 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090904249 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.706353208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823608553 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.21921793 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184677905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140544948 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.330245657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026893803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356901138 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6550862 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183421049 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.802327922 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.210772186 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18805681 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.80161561 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31467061 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91320495 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075561867 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132709344 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.819638671 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56329183 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.842338062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019651564 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161466912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731650168 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807877977 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.852833091 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804880692 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.78558914 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813440452 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.704523668 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236638636 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.64930056 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361213609 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.81009429 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.852598789 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.168067594 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354181457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915162327 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823703095 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810287713 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.507515603 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.092053165 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050444083 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.314311842 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.90260019 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.804477265 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804030613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.721526036 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988150886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.991886446 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093869586 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.156185275 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.91833389 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806656541 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.013691397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01087917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.196283017 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942661012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939407175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91974031 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.746658868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512238703 seconds)
  done (took 1626.577434162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.831104355 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.821531989 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.808945917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.889939746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82800111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.824749215 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.852040298 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9041175 seconds)
  done (took 56.501660519 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.806513469 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.964973539 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.813009198 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.807891143 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.811287602 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.807563344 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.966677536 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.819296681 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.811423621 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.811890493 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.807580372 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.815276616 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.099942807 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.82818938 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.808366794 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.809227389 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.810927985 seconds)
  done (took 73.149330339 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.810227507 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.049377254 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.840447127 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.81132832 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.772499075 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.812035601 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.809114148 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.816511938 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.813027001 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.057792354 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.10326232 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.817356154 seconds)
  done (took 89.254335031 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.820052476 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.810572192 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.810020138 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.810555483 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.810392307 seconds)
  done (took 10.810210995 seconds)
done (took 2122.612295091 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.035499509 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005283262 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.061062537 seconds)
  done (took 5.806706658 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.950784778 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.002857111 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.115186887 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.122532951 seconds)
  done (took 9.937950178 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.11448338 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.175252833 seconds)
  done (took 6.032327888 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.130060033 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.84324781 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223741846 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.813799298 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.815918599 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.817024493 seconds)
  done (took 22.194977886 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.81264063 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.810936263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.812119027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.81198467 seconds)
  done (took 8.991891272 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.810663808 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.4963806 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.810320665 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.824324225 seconds)
  done (took 20.685926083 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.959206607 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.927608153 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.955277529 seconds)
  done (took 7.586365665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.027289752 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.609240577 seconds)
  done (took 6.381045699 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.970791526 seconds)
  done (took 3.715417645 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.840865215 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.080926083 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.315718249 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336634665 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.428999722 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.630848479 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.099160804 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.028852576 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.247261505 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.254485274 seconds)
  done (took 24.009024435 seconds)
done (took 130.316252016 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.142595068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831358504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.008712546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.158317714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.220156787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.010964517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024003239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.145151382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.835726126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825990364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.16444128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.196271372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.979784078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831226343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.980152875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.83565179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.039971119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.161134135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848956091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.064840999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.044521534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.806965777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.00162824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820122575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.043823788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964165794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.350407682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.841214025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.991990883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.364211816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.968094529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.206534818 seconds)
  done (took 166.454954641 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.813623786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.814827087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815118958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.814654953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.343111303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.816080879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.816478872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.814506887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.210938616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.201283458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81566905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.336471111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.816211995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814956768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.814541798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.815401895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.357837426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.815389552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815337623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.815881914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815637479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.176184396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.816154892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.188158447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.349992796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.816363942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.815428578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.815560763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.815693404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.814958675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.81797385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.8151702 seconds)
  done (took 207.4843652 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.814847508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815310878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815876448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.816685399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.81735665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.817066074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815749609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816679868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.432396467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.436811953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.819233332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.817136312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.82008019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.816564687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.819552012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816508836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.816097996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.816670854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.81764879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.817277507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820237927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.55089705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.817995706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.558010682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.816761362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.816775332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.817552123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.816371286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.817135374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.818742989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.817319087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.820021322 seconds)
  done (took 218.612441879 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055834847 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.817098144 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.818595333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.735882969 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.817627064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.817784389 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.810843487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.063266713 seconds)
  done (took 18.693171245 seconds)
done (took 612.999239728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.19309429 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.030219439 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.994551081 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.842943525 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.071829179 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.889303193 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.838379803 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.906268264 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.657564272 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.912946312 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.498152956 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.862141332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.589247477 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.865752983 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.967780173 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.901175011 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.427058626 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.528178047 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.016007021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.889544181 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.021102559 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.7389526 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.921410029 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.681869121 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.61682996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.800704013 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.870293052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431450392 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.852076674 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.999236154 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.516022599 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.104495773 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.85274447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.837842382 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.894346353 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.872048487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.049312723 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.849677382 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.962895473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.541902196 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.8954101 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.565821024 seconds)
  done (took 100.508988211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.829391584 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.825625402 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.825916329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.825434429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.834906079 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.826188927 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.825802366 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.825846965 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.826183552 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.826180301 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.826368882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.835985734 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.826225589 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.834571547 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.826944001 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.826123742 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.825764359 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.835992621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.826874518 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.826073118 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.826620495 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.826882877 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.821968777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.826525427 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.826964409 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.826916638 seconds)
  done (took 49.283408721 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.82184603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97480999 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.059987939 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.841725931 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.822357668 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.82525495 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.839651392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.826501311 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.825447247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.824029859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.924644656 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.828864463 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.840639344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.062690811 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.83907815 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.821995659 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.822831763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.822921214 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.98084121 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.838577425 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.841704834 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.827795568 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.840973584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.835795048 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.824991933 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.822863951 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.826610087 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.259946071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.831543243 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.923611099 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.866800613 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.845593871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.196389122 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.072596628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.876920704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.830836669 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.822258111 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929158948 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.829751754 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.823300379 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.841137784 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.829543761 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.061469516 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.349255686 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.839078637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.823080202 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.272406673 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.939047576 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.86811641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.834659876 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063836349 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.840557517 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.824733425 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.825395722 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.860284138 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.830125434 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.82489273 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.137331766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.837018489 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.842620269 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.829059651 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.824682743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.986717391 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.833689355 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.97834644 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.835260097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.831709218 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.827341051 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.06366427 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841713727 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.351807235 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83960517 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.824759877 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.927038993 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.981920288 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.296487917 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.836628442 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.988604231 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.215570177 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.849888859 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.83334619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.248585899 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.853779088 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.833172111 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.826189692 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.826940719 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.824920324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.867445804 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.842678913 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.273103068 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.356843721 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.155322775 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.853101208 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.841892625 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.826793606 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.138829031 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.834050742 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.825993201 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056681395 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.364086838 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.840965293 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.833205787 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.336682674 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.842028334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.846067524 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.836359688 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070752684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.842411681 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.867995994 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.82719138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.833734391 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.829915391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.844881226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.835074731 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.826442497 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.331388965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.94778067 seconds)
  done (took 226.717959548 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.828723743 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.830234427 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.82586749 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.830625383 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.825193508 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.827020549 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.824633222 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.82615373 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.827812166 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.825878987 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.826533956 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.825926743 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.828870276 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.829845376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.835556143 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.828582388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.429500453 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.825915339 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.82641587 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.827138952 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468004182 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.83120639 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.826783091 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.826921095 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.828235796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.829766911 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.827575014 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.834862868 seconds)
  done (took 166.190778783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.827999292 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939663437 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.848105846 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.856829247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.835246164 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.829054487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.927156249 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.847412115 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.835305902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.829509125 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.829098177 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.888460014 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.840484967 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.927052073 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.860550781 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935329545 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934385291 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.836863499 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.82986402 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.829938432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.85897315 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.836954735 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.888192867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.951370861 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.849312526 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.940802351 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.849451125 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.83072289 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8297296 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.940958329 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.850885351 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.889857523 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.857952654 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.846886186 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946650159 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.947515382 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.935246103 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.934603701 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.837278502 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.829931751 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.830781399 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.831483518 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941272568 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.84909566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.83150418 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944227664 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.851918764 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.830918228 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.830857333 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.83127631 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.844328428 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.848219328 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.89494094 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.959692391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.867416215 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.854301421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.92924663 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.966363182 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.832082416 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.928709812 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.839587752 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.943448688 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.85220453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.832026337 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.833487232 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.835026019 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.860612287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.936801235 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.937356962 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.840923338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929262784 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.868989369 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.839482764 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.832017642 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.831773417 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943065679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.948397406 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.868548284 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.867494156 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.861593666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.840034434 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.832450226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.833009065 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.849412862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.837726646 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944617723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95011031 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.840109192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.832874041 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.832614137 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.832516624 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.858129534 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.951553181 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.870912057 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.938084445 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.90172828 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.90762684 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.848973603 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.846231347 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.838793453 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.894688893 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.85047403 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.84511151 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.150627577 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.892736373 seconds)
  done (took 198.726681508 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.204706438 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.882906631 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.889271384 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.145480407 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.19280364 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.769189513 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.882059783 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.879495146 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.903855783 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.066146628 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.957141937 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.899106038 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.868308885 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.854701085 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.882421097 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.904839419 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.88948101 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.217057414 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106098895 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.035466375 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.873556483 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.177471675 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.201587478 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.471873369 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.930309271 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.258304684 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.448242723 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.013484162 seconds)
  done (took 60.576024559 seconds)
done (took 803.75423784 seconds)
SAVING RESULT...
DONE!
