cset: moving following pidspec: 19134
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.380167765 seconds)
loading group "string"... done (took 0.561087508 seconds)
loading group "linalg"... done (took 7.140560898 seconds)
loading group "parallel"... done (took 0.16123704 seconds)
loading group "find"... done (took 1.134138097 seconds)
loading group "tuple"... done (took 1.790286354 seconds)
loading group "dates"... done (took 1.271841921 seconds)
loading group "micro"... done (took 0.226149037 seconds)
loading group "io"... done (took 0.923912442 seconds)
loading group "scalar"... done (took 37.68745375 seconds)
loading group "sparse"... done (took 11.734410722 seconds)
loading group "broadcast"... done (took 0.976231212 seconds)
loading group "union"... done (took 12.622145129 seconds)
loading group "simd"... done (took 4.526317129 seconds)
loading group "random"... done (took 9.291928151 seconds)
loading group "problem"... done (took 1.793233674 seconds)
loading group "array"... done (took 21.929477465 seconds)
loading group "misc"... done (took 1.833325878 seconds)
loading group "sort"... done (took 3.502208206 seconds)
loading group "collection"... done (took 18.335177602 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488264098 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12571583 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116837292 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121246715 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137015426 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117036449 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125038643 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085795569 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.87313865 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150427509 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120638414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417796941 seconds)
done (took 5.243836819 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175648384 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083473661 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083844063 seconds)
  done (took 1.339356095 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066956973 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122794763 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067638233 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0679687 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067865629 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06731894 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067375653 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066710392 seconds)
  done (took 1.700547835 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073457527 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069764278 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069826015 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069495147 seconds)
  done (took 1.45536204 seconds)
done (took 5.921265564 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774894706 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204966126 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183158679 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412697751 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131151749 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157123588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64536957 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333294119 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183304725 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08396023 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107171481 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.325252617 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109572096 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643052398 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079032653 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092392219 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139255577 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441363153 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067043434 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083268279 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088617123 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128130399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087605358 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076641875 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14387417 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067105652 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133647535 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081977842 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06633398 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208883863 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173829896 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707876405 seconds)
  done (took 10.37206784 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096736881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100040715 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070072758 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138710709 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098270204 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071278245 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072653488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068224796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08887173 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130785252 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090697222 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10381939 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067204888 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070460566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085975657 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206846596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081794206 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082947431 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071461536 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07696083 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11953691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080216564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079651609 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079435023 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130964594 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182992096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099392006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099020351 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068940487 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082289027 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115956266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128777946 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067265677 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068075596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126468566 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096740534 seconds)
  done (took 4.711165275 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.935920695 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143451652 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092730667 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134070974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066193919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109641701 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112230286 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066290498 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082339631 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204654706 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.308809731 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572880882 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111987751 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103989976 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06918931 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07016386 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068284642 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.360999717 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12502056 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106988545 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083167608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072078318 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071481431 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34447494 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069723315 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065573879 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070055563 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059210925 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126288137 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069646809 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.924895856 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124394002 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067365644 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102413019 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16382671 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089360846 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276624486 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069673325 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065496767 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153247624 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072476589 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068470149 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085251116 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105883109 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115692618 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067224421 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068642045 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165515682 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067086049 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081544536 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.010756672 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153430589 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078163874 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066143346 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25165901 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088766282 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071566469 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065607435 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.191753254 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136430244 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070092701 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068217532 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069467344 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07109189 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363999695 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067747725 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.82384046 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069971289 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078442555 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071309894 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071260452 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074758404 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074379037 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087289162 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068385425 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077304452 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067266098 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066631811 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068049275 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087034122 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066260531 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360982299 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065822464 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067591813 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065249371 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087233853 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097965495 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065621143 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064762429 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100946023 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06777671 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169646681 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113161333 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068126247 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08708042 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068989002 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114311997 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068282965 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089950571 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066489206 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065965292 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099094851 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066220821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071424257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100301154 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082955386 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069904609 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404094627 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066518949 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066160041 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069790609 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069047632 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069502659 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067857827 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081963447 seconds)
  done (took 21.251915123 seconds)
done (took 38.442087153 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278969109 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07854986 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078849794 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078349944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078415767 seconds)
  done (took 1.856736295 seconds)
done (took 3.104706501 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12211723 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100870217 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066053673 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098011989 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065492556 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102449383 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101104275 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082682637 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102025691 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066158512 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098584476 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065769206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065651951 seconds)
  done (took 2.400393879 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083458857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084512839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071806829 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084481072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064940521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084059032 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082395377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090489005 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082018418 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07386095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065515658 seconds)
  done (took 2.105678298 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082622839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085042399 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070597596 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082857996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065131136 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082881241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08217634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087158002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082365408 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074670515 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064999679 seconds)
  done (took 2.094462683 seconds)
done (took 7.833327941 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077168088 seconds)
  done (took 1.304702324 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592107737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.062938602 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080854893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113502974 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189244976 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121724503 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278354319 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088623596 seconds)
  done (took 8.942090467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09017397 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069920035 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071247764 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071047095 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083894686 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073079651 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069916617 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070347726 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071832627 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070660895 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070102945 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072374315 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073079477 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073073229 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072137775 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072272633 seconds)
  done (took 2.473669934 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094487856 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093194222 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075295724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076355729 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073433715 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073412186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075911687 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074412083 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072090295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073417044 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076391301 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075359115 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072745762 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066426743 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075634071 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077158643 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072499305 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07543583 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076844411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076293333 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075741441 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066101455 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072577106 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075272565 seconds)
  done (took 3.155287905 seconds)
done (took 17.111182452 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111991564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073376242 seconds)
  done (took 1.419672803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081625233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084241876 seconds)
  done (took 1.40634538 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081924313 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067086838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091334593 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079277371 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068267124 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067244705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08889679 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068268512 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067179594 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067852511 seconds)
  done (took 1.988303321 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069819035 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080142945 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071367998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081857114 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074913729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065220296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074348484 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069533739 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079901092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063741255 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071936364 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083444354 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072213427 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084503437 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073998073 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069213461 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071487392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068056469 seconds)
  done (took 2.570759311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066181189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068723149 seconds)
  done (took 1.383690878 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067075308 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064678694 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067860134 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067585164 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064885439 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063921683 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06432401 seconds)
  done (took 1.703961902 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392297811 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11266603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301206814 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072600961 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083798421 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253139705 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06613539 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072617184 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071486829 seconds)
  done (took 2.717943729 seconds)
done (took 14.439795076 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078827048 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086802413 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096743217 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372657926 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092981804 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066798415 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114871272 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19134324 seconds)
done (took 2.362267162 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212130523 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602680618 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389876404 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.200822341 seconds)
  done (took 2.447783676 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323304503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088483443 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060534184 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068133394 seconds)
  done (took 1.801838623 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066044709 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069486389 seconds)
  done (took 1.395620105 seconds)
done (took 7.115182783 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066933845 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084075705 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067568381 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064907426 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066871783 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064550766 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0648236 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066782212 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067001154 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067004447 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068115647 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067306743 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067342681 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064771829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064737522 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066747747 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064962693 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064651691 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066933052 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064625857 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070470244 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064798396 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064613364 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066944192 seconds)
  done (took 2.906584415 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082755518 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067821638 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072598336 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071851147 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071363394 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072457699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072508233 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067538856 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072671413 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069009673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070997256 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071181067 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068897253 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071374096 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068818672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071147973 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072679021 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068021247 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069736648 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071716058 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072143416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067664713 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070656504 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071923105 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070940576 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070417048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06939663 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06744042 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072483307 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07103945 seconds)
  done (took 3.398086318 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069635108 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064940435 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066274928 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071438124 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064923175 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066473971 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06431261 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065236306 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065376177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064389934 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066223903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06393563 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064483249 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065761885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065449149 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068233122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0803893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065514984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064673976 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065361689 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067891324 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064982783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065074698 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064438576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064600255 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064389544 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064876127 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064276714 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065267152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064741939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067910017 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068376209 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064558517 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071651449 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068228458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064328852 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068772378 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064224546 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065340056 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064207905 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064183766 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064854764 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064805634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.185428411 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064594424 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06593544 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06433216 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065672485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064985533 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067015675 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064172624 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064070076 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066256818 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065602172 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068292123 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063681135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065369843 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063665184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065418575 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064233464 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064015079 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063683828 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06685144 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065019442 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078995079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071240729 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064542463 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067670255 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065334542 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066706442 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066066787 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077443248 seconds)
  done (took 6.162977731 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090005007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087537967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067468223 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06657359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063369268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065274459 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068800574 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065204479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066672302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070883343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065293823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066313291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066326439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077892169 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065682836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066678502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070787901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063370777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064775073 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06882174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065348335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068210177 seconds)
  done (took 2.801865685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153628935 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071758251 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107402916 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0744829 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068646299 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074182059 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071015359 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0712469 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071758471 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06923305 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069313638 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07147236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068902399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068844612 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069041839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069180398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070619696 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069142754 seconds)
  done (took 2.664047926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078258682 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067448615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087573038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067360264 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067087413 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069532157 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071628796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075643827 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069700635 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067084566 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075770545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069282638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069219313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066743328 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069290683 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066630611 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069453438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066680093 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074838331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071228666 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071412307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075348653 seconds)
  done (took 2.841660807 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079923413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069274363 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084489011 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069590785 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063264357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065396993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071458846 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06710996 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071411293 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068792246 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067413452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065915959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070863435 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066877145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070664535 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066810827 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068994492 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066845241 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068375307 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062835021 seconds)
  done (took 2.662914046 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086358804 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069525259 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068829034 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077213799 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068861774 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068317163 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076358649 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068472133 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068444533 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088319861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068200783 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068076235 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076241791 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073409933 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068729976 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076211618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0759015 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076107463 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068630874 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069095165 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089051771 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068722667 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076700344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068811578 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068866721 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069106099 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068412668 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073364644 seconds)
  done (took 3.322260921 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067151825 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066770406 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065409362 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064538875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064463481 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064848686 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064961432 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06479785 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067293615 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064828711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0669074 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067153435 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066907693 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066922793 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067277758 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06710784 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067114854 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064849011 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064954983 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064842461 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067303105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067081982 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067195204 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064626432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064629873 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067626212 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064634863 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064793007 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066626919 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064594902 seconds)
  done (took 3.260216365 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076352728 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074379931 seconds)
  done (took 1.433087635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063871037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081862422 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064894589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071165313 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071491811 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067527274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074925515 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071163899 seconds)
  done (took 1.84513247 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082710979 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078901177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06858763 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081524393 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078102323 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084098543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134755602 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068385521 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074630448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06583536 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081002297 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066567436 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07369426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067959726 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073130008 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073689344 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065195592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073446478 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070040075 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06613945 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068870408 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076340137 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069547358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062940838 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068427275 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089395562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078480487 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06669662 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070151403 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074738883 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072679493 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061218112 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067516755 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067927513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065340317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077442629 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083503888 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070479273 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076557166 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068297334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078887143 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062497576 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07226292 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074050365 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077292428 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067966656 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068017854 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062276552 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064940659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069552247 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062691424 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067389567 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062266352 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076766323 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070907713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077621538 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066371181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068813882 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070269751 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070551382 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074011325 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069102094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069750805 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067228079 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074527661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071689887 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076566589 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062381419 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064020361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065500029 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077667907 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090508544 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074154178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068347731 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0682795 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065147595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070750661 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068950596 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073262084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073824767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067643765 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074048673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074679685 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067847534 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070369855 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07600788 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06553136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070086448 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065287016 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083743946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066238249 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065298047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065408457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077965708 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070897124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067129547 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065209436 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074808937 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061392597 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068205946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06844947 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068528521 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07833196 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071939764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072717411 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076208415 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07480727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067436025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0699258 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063894352 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067774094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065618458 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07372023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060674764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069484286 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067144821 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067225298 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.203533091 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067229816 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068433946 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075756572 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074090935 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067791611 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065144759 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070853271 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067983805 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071149702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076159289 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066670882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062953784 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062811464 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071297617 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068130342 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071545195 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072817462 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071216592 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062405516 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06569195 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072981283 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077777939 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068752227 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068972461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074292884 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069178463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067608725 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07510527 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070272873 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067254061 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074008925 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068609849 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062693816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071047885 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070491059 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066932259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071848161 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071789083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070103157 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068882635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067284655 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074961788 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069293131 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066818482 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068440552 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066812675 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078662113 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069345968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062838204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065321319 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077797305 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065244338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067864841 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067309637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06969816 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069078384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065696959 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067194778 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070009289 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078309945 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071624864 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068930235 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073927385 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079362115 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066890132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069742303 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067029125 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068704744 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068061635 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076473313 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073498032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072763801 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06976846 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063590727 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072917366 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075139766 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066488073 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065364445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066606524 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07161718 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07321284 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071632472 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068461371 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065663219 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069040953 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070704651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070442294 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067433556 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066942225 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07423004 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065548048 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074868413 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06838812 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078073477 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071313172 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062839869 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070616369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065554423 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073725587 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062865589 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065295634 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066639953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068148231 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066446841 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070064993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061815779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074807734 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075155853 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067808047 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066597873 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066735686 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073805698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068636634 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070353529 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070030645 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072200577 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076566761 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065844151 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069763215 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076951473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066171179 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.191994947 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073918514 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066831634 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066796396 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066811026 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066111058 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071163945 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077966264 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074250654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061698185 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070689116 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066315816 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067506318 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063449139 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072047638 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07146816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069185277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075613446 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069519448 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068764942 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072493848 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067807517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069578625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07066872 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070999991 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068654453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070648333 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067787022 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07077496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067765813 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065476935 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070027658 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068146652 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068165089 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073322519 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067743288 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068245939 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070286962 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068972058 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068721625 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068294759 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066997427 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071495992 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068606853 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068242761 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070063866 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063014742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075862275 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067409189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074971231 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068570898 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064904129 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075011272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070590309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073752521 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068513126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068916867 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069550998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067365366 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070121068 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07465438 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065945982 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07872475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076133407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068463033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070326752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067990791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070604458 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067057098 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068495084 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069031604 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068502705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067252779 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072076406 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070454615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067743933 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069588061 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068631602 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06784436 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06955215 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062471504 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066667889 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067180687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067932845 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077873879 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068822277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067248305 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066483345 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068286005 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066750476 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064816147 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076625608 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077333247 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06840115 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075109638 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06716958 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069324415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078659667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062274381 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065905187 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065612131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065858383 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075248556 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069273576 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077148941 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068176253 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067170107 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064903406 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068564335 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066296926 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062314203 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065579001 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071526225 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066932164 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066484403 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067466754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06991599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068634894 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07612302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066261987 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067513773 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066835609 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064149283 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066229415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065538709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.205892607 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070436972 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06670996 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066844106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067905071 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069064195 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070145731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068121363 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070213815 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078055158 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067834371 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071730937 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071681042 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063583145 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071540475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068052361 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067740369 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067227442 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072154669 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07119073 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069798449 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077198012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068044293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069476239 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068771965 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066198852 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068060899 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068626071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06839567 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067257225 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070191237 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076781536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066528284 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072224427 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068407339 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069026364 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074596456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069242338 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070834177 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074497261 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067825812 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07012557 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076756325 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072639679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072467201 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069861679 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070055738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074504091 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068139565 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075250495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069190983 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068845895 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069958666 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065559317 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068212866 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067989604 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067379025 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074397182 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06882583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067061366 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067605333 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065898857 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068815751 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071797177 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076433025 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070438979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071288756 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062533931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06528347 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069234023 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066450997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069665132 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070413493 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073100932 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069997255 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067548993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066722133 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076528653 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073514818 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071680779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065681061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071592337 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068117596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069302179 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068478472 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067955981 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068582327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071551611 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069650035 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066932494 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074749597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070991715 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068361278 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069117872 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068719782 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068183038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063110669 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068196085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069549114 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072905211 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069781048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067789394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07870785 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065646445 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068304125 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071044409 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066996727 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072391597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063487515 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069452814 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068968778 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068830253 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062496314 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066886409 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065091901 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069407637 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066614964 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062154209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077781454 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075698871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069249243 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065109694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065652207 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061776159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061869186 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.200192522 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069621122 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070693542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078553871 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067448882 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066714447 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063047509 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068087926 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071348014 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072114531 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065681036 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064047836 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067675079 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071496364 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073761704 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066662226 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06810071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071950818 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070124782 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066217798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071855896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065382052 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072113202 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082205478 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069336703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069819143 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075171563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076390872 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068589819 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063569373 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069598844 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072085405 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068822714 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069647659 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069194024 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084222838 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071035053 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067522399 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067051199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071294184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06746614 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076786853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069406507 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068423432 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072420383 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070508755 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077925656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072052015 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07698414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072086021 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071510526 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067030016 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068644979 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066874526 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066654417 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068904078 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068879358 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073620203 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076676207 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06819712 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079037755 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077166212 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070318622 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065117955 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067892118 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067516218 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063004752 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0692028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066207271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066187666 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066130648 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066591917 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068977359 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072973486 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068984202 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068297983 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067988243 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06185326 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06986408 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070332145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068589764 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064637283 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06800964 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068228544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071969922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071092985 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065478397 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069662172 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069442681 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068549122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063034349 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074948194 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066893997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069889113 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067563622 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067912238 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068590775 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071006001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072651809 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06894436 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070332915 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071872072 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070299143 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065231446 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065586678 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073333841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065900993 seconds)
  done (took 43.489951088 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101788974 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065712655 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063499066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063714117 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075329313 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064299192 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063409319 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065270958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064995368 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066828499 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063819315 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063594845 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072718198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079473904 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075102764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067959965 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063461554 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064250927 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063658433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064388907 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072123576 seconds)
  done (took 2.820750222 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074169799 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072283211 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074563535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077983783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069173478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072154086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074268549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071872102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077388393 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068553165 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077526985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072325102 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068616128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068480705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068411774 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072527859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077782488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06896543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072343481 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083217333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072625672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073730612 seconds)
  done (took 2.959696533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067443621 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067396879 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069910848 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062852114 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067441755 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062997297 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071178055 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06543243 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071143077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067418725 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066569044 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066815933 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068976872 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063119118 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06768983 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065400605 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110854926 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071061801 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066971845 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068593307 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062941545 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069725836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063334623 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063542256 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066221439 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071046064 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068212173 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065651694 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066994468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066606656 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067279441 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065512782 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068982073 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068250678 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066886383 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066692466 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06708415 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067201041 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062798365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065603401 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067698643 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063465403 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06792614 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068720195 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065125362 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064903753 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068467879 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066990207 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062402697 seconds)
  done (took 4.670988919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080523224 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111029665 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068824989 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09010949 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081560172 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077310644 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070825656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091043346 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064883504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065680605 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083055128 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08150605 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067387439 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071695403 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07061474 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067191081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068027052 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066419999 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071107394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066777716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071539843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07317083 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081491449 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079936285 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071422502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065798261 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066227567 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071138211 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079273122 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071611022 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071301541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072394122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081490542 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07276105 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066290082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069065843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082631729 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067108691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069239261 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065005048 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069493217 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071211129 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0731709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082685001 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067187872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07200103 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066525397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063964061 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079386282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068937776 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074110242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081188086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070605171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067106801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071242401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081126747 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066561988 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064878498 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069570684 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078821514 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06449095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070421076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080298954 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06853851 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073565598 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080725573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072208955 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070709084 seconds)
  done (took 6.489500033 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075056137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073848415 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081590459 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081338206 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073715828 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073726567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073740628 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073434717 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073041177 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078563724 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073850941 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094961111 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068936795 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07653762 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07374384 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074021191 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073652497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073799766 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07379743 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073883177 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074213909 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081376928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074529166 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081827536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099820792 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0690737 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073797204 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073745296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08179655 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073604501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080984182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073489503 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074245494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081587269 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080962384 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073434223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066736929 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073238083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073320929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073450004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069154089 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081459392 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073072633 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068545278 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073337751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073621751 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081836987 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08106843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076319548 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078194489 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073848104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081358148 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073195961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073456498 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080940179 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105816381 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081439177 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081359561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073368328 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081051765 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081035059 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086939222 seconds)
  done (took 6.157814953 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084093789 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076235851 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077794658 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062958862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06560414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07159215 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065655875 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065802008 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076295893 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075811049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07832499 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071092016 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073947494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078447502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071367715 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074047319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071727134 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071092392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076294125 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071096624 seconds)
  done (took 2.837376759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075135056 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084487957 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068062791 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073185298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070815369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073006237 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070031356 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070684223 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068328963 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070649369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077754564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077464199 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069104541 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073085697 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077609235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072927511 seconds)
  done (took 2.543128626 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074790907 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074327474 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08156006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068119968 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065854185 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064021005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067095329 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062977526 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063957371 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079358914 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066985712 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069327959 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067263284 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066084296 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064531137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069723933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063880577 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064899938 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066998614 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079939416 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077981075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065776488 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067644942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066938055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067121693 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072250169 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06641332 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064597451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064428634 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067782051 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068076824 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070498646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06447199 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065073484 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065495274 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064230804 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066816717 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067131539 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069931971 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066894844 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064998115 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066829115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066916433 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067473984 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063218954 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067449526 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063123342 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069146197 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064967133 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067244849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066640977 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069419141 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067788886 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073442851 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070183851 seconds)
  done (took 5.111204291 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079244956 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071197015 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063615338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065461742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069874665 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068700573 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070916668 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068855848 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069364771 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06564113 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069074169 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069786614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069125417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070486008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069321383 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070744152 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063280908 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068923561 seconds)
  done (took 2.626888564 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071838389 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067544332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074160651 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066926259 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067392181 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070051046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063492838 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065422517 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065926654 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067239389 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066877339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069436559 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066061742 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069515982 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066994369 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067199002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069271891 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065907387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066835113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062963148 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069208886 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065554887 seconds)
  done (took 2.861325555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07322091 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094287073 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141557557 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085301584 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082535065 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080261047 seconds)
  done (took 1.934449042 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091558662 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080157783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067686975 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089899898 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074763474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068531996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068615517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068919378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077109185 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077196551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068912125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07733896 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077494764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076128493 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07408856 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074409301 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068332611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068714738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067300597 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085196682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068782361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076599253 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068322285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068276062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068593415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076319741 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076787391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077095792 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068456065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077092529 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07442548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068605578 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077248441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07733957 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07041038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076868324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068892433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085270094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074023841 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075976416 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070082052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074696359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077459546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073386096 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077181914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069101482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073563133 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068960279 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069052263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087618029 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074553246 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076427846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074975421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077977508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077419482 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087803595 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07787814 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076867021 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075249747 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080926076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077292757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074719455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076746309 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077450652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074936114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076580156 seconds)
  done (took 6.337564869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082405531 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087607687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069225343 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077854673 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076704486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069144653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069523755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0688622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068881298 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068944396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109652294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06948741 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076891636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076989814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069566616 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069014021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06918238 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077098794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069191805 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087467886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069117908 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076998266 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076690896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076650901 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078000588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075002317 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069237621 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069095979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069502428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068943241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073714445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069797321 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077006681 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068892294 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076468526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069195799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068941204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073690032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069067948 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074332685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07697108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085657831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068898796 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068843863 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077708723 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069406178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068887479 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068903219 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0692113 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068842226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077623259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077936659 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077907809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076555044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069155545 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069452797 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069090118 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06921878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06932501 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07443592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076888361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068977663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087661185 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069180493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068761602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076936885 seconds)
  done (took 6.2637805 seconds)
done (took 131.660629935 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188621729 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171783897 seconds)
  done (took 1.735146642 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069579925 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100430061 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079159983 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130513196 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066654325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102286385 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098934298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078380859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069001885 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068205308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068369078 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070237044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134445094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06594781 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068206667 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070865608 seconds)
  done (took 2.728396503 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099087602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163246263 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102153173 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066486392 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099189653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074957477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066215324 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077558121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073622585 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06686684 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075288138 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072610102 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066709134 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073023794 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073589853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075615489 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067058583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074956177 seconds)
  done (took 2.858533498 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103230039 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094579647 seconds)
  done (took 1.589558747 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157782392 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104652324 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149761488 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345230813 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.172003846 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.23518022 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130706478 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130106134 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120699366 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123612056 seconds)
  done (took 3.057056625 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100315182 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156272323 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.260095179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118837985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075000527 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097591085 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119707128 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080066388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083810946 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082581321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082330314 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078354883 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100921463 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075479025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07504875 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078751437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104925709 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074109327 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075858006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078845087 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101566662 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067134396 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075410968 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073932451 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079061583 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079155281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066972594 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066641267 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078364644 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075636326 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079460155 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095796739 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079214963 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109485339 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072013454 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110301823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078264601 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076003634 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075928173 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075831018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080799432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080949219 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074429724 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078368534 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066840855 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078331209 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066947208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067026762 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080336031 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068551882 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080230426 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079246716 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109682377 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068664762 seconds)
  done (took 6.114541068 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104148726 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106382535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073121678 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112061911 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099959011 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0734248 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103902925 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093833901 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105336078 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095299881 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09145147 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080431864 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08422291 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08625201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109370713 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101380135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094952196 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071501342 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104883315 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105470252 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070478142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097546679 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093217644 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105163988 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069731028 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072127627 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069889858 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072154114 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079299543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080717112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072004944 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.104899684 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08856433 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077795215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06756479 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069370161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06993598 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081392981 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.099436361 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081242705 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080103354 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069773402 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069318841 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073277481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092905267 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069567682 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080956675 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082436318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081226481 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071651967 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072417155 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06984385 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071217114 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081879041 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080439718 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083442907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082911663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070514623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069781204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073432515 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082464685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081764452 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08143573 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09376374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081184531 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069806131 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082660819 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086348257 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070005361 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071369093 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070427597 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071196597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071134304 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079509451 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079716201 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072184693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071128396 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069879542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081849464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079805379 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069885377 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078800432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069219906 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070735609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07206988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072166226 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080086087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081922881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072036241 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070255708 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071486982 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070365443 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068753026 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078689366 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081354617 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080301374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079849246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069420345 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079288136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079360947 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070462565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.20937992 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070935467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072527261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072884147 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08114223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080880325 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08208449 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072778116 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070261132 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080777238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083591827 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070497445 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080250957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08329711 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081585961 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070487604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083414504 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070912632 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083247807 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071598798 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081570021 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071448132 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081362079 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071676147 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069898144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07098392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081330633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072761409 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070964273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071782865 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072067427 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082022967 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08475833 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073522587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084457674 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08111297 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072781301 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081184216 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070731659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082153475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071696759 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072060394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069206085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085450909 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07050424 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070307507 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072242082 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083462672 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070655742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081146563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080462347 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070253603 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086756974 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08289797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079586689 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082894071 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07273698 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070749064 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07054439 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07166681 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080645029 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081801171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072593816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070562535 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080021939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082652778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069148619 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08022976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080322172 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080594187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070716321 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071561454 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082822297 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083570957 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081508698 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080430386 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081036995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070854254 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079431323 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080441017 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069769965 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086585564 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070460223 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084678519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081795841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078444915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080635461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082851418 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082861279 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082614877 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084663216 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0697887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06988017 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081906219 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069897309 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071825224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079818018 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071764307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071294772 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085582936 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067381856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077891957 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066779406 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07647379 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065851485 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068370207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217256857 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071378654 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072737947 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081080668 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072555374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080640393 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08485799 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07987355 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07129539 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072739461 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083200216 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081605625 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070583625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070065793 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072864103 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080954361 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080517774 seconds)
  done (took 19.280106439 seconds)
done (took 38.762726104 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214228715 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157078246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18601844 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122316016 seconds)
  done (took 2.171900596 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123750668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103848875 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097679198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067072197 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105216385 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067074463 seconds)
  done (took 1.996603122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311701231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211541752 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181922885 seconds)
  done (took 2.130577897 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203363192 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191201475 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.401108598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258871291 seconds)
  done (took 2.589018181 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145924835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092630051 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069065614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084996931 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13770089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165480054 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103660472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129441601 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079648513 seconds)
  done (took 2.486634475 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150403694 seconds)
done (took 12.956323962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.172507282 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.17095553 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.20360553 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089486736 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.219800273 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223399595 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083419233 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.104053529 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079134291 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099037444 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074991107 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083534205 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080554232 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.204431633 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196615942 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075718229 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186628919 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.169493956 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199932004 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187177401 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113688583 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075532355 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19322008 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135471116 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222165401 seconds)
    (26/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072897791 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073509551 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098146694 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.185449296 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083337212 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15301877 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066723198 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075150961 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171507354 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098101082 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110790903 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163568891 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067120523 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.116070669 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076695838 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078202751 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074100205 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073668332 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17462665 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191163824 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073650655 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198904555 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073541673 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073778271 seconds)
    (50/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079081416 seconds)
    (51/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.159554838 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137640713 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140678642 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080626652 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144289418 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110734432 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068427942 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07637456 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0835755 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093864431 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090377105 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099726012 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.10801579 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092000956 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071102857 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.153691321 seconds)
    (67/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073499428 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135177289 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.149695745 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069711943 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186338604 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.197362692 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109387405 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068163338 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052854609 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090741056 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109896531 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.177224408 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.213276976 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.066947255 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05122069 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.197587534 seconds)
    (83/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069246676 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05286435 seconds)
    (85/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07705303 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101408142 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090917466 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074830852 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121671659 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077993208 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079443672 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079093448 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074494821 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185386683 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073319854 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089126166 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066876018 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073838246 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100227911 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075218427 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079132083 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201404633 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142828269 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092579406 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082378375 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068140365 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091760615 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05364545 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055020557 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.29153173 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076144423 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066598693 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074704151 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.129808257 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075891694 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068390987 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071373879 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139029405 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096986465 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10256582 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099552072 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077474514 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068778181 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07406607 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055745236 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089405362 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188386323 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094040168 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077035258 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.136848285 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074957521 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122069217 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073346067 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065995482 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069685664 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128445672 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052500155 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052335963 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075535161 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07242926 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113001347 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053202066 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07292575 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.178257256 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069453494 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078767949 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054155777 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090204287 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067411073 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 0.127448806 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154819091 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073809647 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073925893 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067292795 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09908627 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073308895 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08004485 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069133461 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069462688 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071530306 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054442134 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074224129 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066576796 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073767542 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073514389 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169078251 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079822381 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074728149 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062531777 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053743358 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053099127 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.158009868 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053817959 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100387022 seconds)
    (175/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071142219 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153026787 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115335462 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093891966 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090550153 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052429908 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05272345 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153581364 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052211167 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053578102 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0662792 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053708827 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066465188 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096589722 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072982051 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120411742 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054069383 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066187967 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.267927321 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055704997 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067435527 seconds)
    (196/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110421347 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053795249 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10208932 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075766154 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.190620154 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115685211 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053493092 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136889303 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053375637 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053710901 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072528932 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054572312 seconds)
    (208/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055654577 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075443268 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05394721 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054425729 seconds)
    (212/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063780884 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065472133 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189783146 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069339279 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053508769 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068677681 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084100705 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103465013 seconds)
    (220/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062955587 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066329583 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154461429 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054427448 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072266321 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075292567 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074286087 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077028924 seconds)
    (228/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063439889 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173015328 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068375971 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065025498 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052102181 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051194366 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050837601 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053411897 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051235406 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08711125 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071459772 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087627207 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066835802 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054647434 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052708157 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073341417 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111614697 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06605198 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063649204 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073169964 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067963408 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067830829 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09068403 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134905053 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168296892 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069646487 seconds)
    (254/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053479621 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066842602 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083357463 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089326164 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132124523 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066593699 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068206143 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066734745 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173162797 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067429589 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141630348 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13485386 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066736846 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090254343 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067996575 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091399829 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06651715 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090634196 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053741307 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073005261 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088505897 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065599734 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053651582 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074425127 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17459081 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074909645 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111615662 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052994753 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053053221 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052908609 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053676197 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053547231 seconds)
    (286/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081883516 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053074782 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053705329 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074468907 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053256302 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065716491 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0735269 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065751836 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179608998 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094982376 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074701915 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069474686 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105952427 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053306059 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068533346 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05364277 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072423191 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053854862 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068085409 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064666693 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067671403 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072252433 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066578397 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068762583 seconds)
  done (took 31.186430862 seconds)
done (took 32.622977715 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082962586 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096181861 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076794037 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095432846 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083075087 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079564783 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074970306 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080666731 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081514671 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083884601 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080664243 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056817786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075715674 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076176663 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076560582 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093824775 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079964479 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074514063 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074562172 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066838535 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074929465 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067594 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069545754 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056785259 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07943329 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073140297 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074326263 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075702438 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067380562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067488145 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070505326 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074872253 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067161328 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07949989 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07374952 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074473281 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076420259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077827479 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068969339 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067731092 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075414175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067415564 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074146036 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075071069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073278822 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072876269 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074424778 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079875421 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093739113 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070630456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075777823 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077005723 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077865002 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073830722 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070997143 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074525322 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072277412 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09408856 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075715035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07020489 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075419088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075691014 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072499969 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074198619 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074343769 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076837748 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077100729 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072820802 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076156914 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072691342 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067509058 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07473014 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070370634 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067548092 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077510233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078159664 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065892658 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072640278 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074152565 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073351512 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066556538 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06908075 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06813134 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073293436 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069572972 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05665942 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0706067 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073226991 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066358507 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074879501 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073041751 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073825359 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068672597 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07678683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066247637 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072081107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066797912 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067035799 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068375854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070514132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066773246 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069731111 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075652723 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067842825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072299071 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080115677 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066734664 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073315465 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065917791 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066193576 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080834878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075874122 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066494503 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069767863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066131234 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073724999 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065879764 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066293887 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06622377 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066830867 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071772352 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066067406 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06893955 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073297826 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078888514 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066137589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06938604 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068962868 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066120218 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071310035 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06628643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066365019 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.204548592 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063647413 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070474803 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067936792 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074623878 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070463771 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075168576 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069293133 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075539176 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071276158 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073224454 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073111639 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066423549 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060720832 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071110767 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07037611 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069409576 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067364821 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068437191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067543483 seconds)
done (took 12.732778947 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06617515 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142427016 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098611707 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094000329 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087622015 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068282857 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078165013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10456703 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069467104 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10552086 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089924107 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087408417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115246263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06632134 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068170917 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071447086 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068952749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084087152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103996115 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088825992 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117975792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066908624 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096094202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092120848 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089139354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094595016 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068197171 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071496862 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071133599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102530751 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088786532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07165072 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068060525 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103090728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094390505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085767048 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068108801 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084717519 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068073438 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067293557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069288212 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100229143 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081926969 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082432926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071231393 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070521142 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06867057 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085639409 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091794857 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080000207 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08906724 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104875101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070739674 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066917325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066151392 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087612183 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066769717 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070399139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068089362 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069826158 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067884471 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07110038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083314629 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084065888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071467606 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081937271 seconds)
  done (took 6.946595371 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082989649 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08933653 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082115355 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083206813 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065095037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065786106 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066940906 seconds)
  done (took 2.065280302 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066400069 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088436286 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090705464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09174215 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086265773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089579507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077983008 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068157619 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082902888 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069166078 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089366725 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104145247 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069265982 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074331378 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093497011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068147721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092493716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068251998 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071565043 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092132404 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070209143 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.084213086 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071256829 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068550777 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082642729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067999968 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114874254 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072459902 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069298916 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070799948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065711947 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10808616 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08216456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077257874 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067618152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082389817 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082258493 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065974987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084415637 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073567705 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081717249 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068121336 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068695088 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065864693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07240576 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07822677 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068978009 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068360365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07026196 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087946266 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068693266 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081569607 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072627722 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070685797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069349208 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072132774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077664676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068573055 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087525205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069058046 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085000952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084416944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081591735 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084525822 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070422603 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081708698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081448022 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070477017 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069620117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071805934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085026612 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066376676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069736515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078784264 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069366566 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091820532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092359027 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069551666 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077611812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069035519 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068274433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0680015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091254457 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070602091 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067986608 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07265446 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070947989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066108021 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066928829 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071475594 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065928911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069501698 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070632701 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071134078 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070618739 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084893463 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070385402 seconds)
  done (took 8.95224142 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068307883 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067997314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070737488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067874727 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068694496 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069571817 seconds)
  done (took 1.967488032 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09253614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068720711 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079832638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071787451 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103382351 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085826274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088514085 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081316964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086493304 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081195927 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088790639 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090704583 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094945401 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074871429 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088580026 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074144211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089126359 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077827692 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081071172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07492021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088647438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075510568 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075612903 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084023931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077749885 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074403299 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069048118 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081286634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080667864 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081564949 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075278943 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078432072 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072514789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080959986 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088831586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07264169 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073663254 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078902809 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074889176 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077739392 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090638871 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074964198 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076541379 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078866797 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080514278 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072569366 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078929584 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078173103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0881501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079202968 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079109042 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073390356 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07690158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079144916 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072447912 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080829036 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078630192 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089150637 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07408131 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072055373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070650452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077305242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080016649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077143551 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08042241 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078883103 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072258915 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074142293 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074619517 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073589191 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07866114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070686647 seconds)
  done (took 7.251393826 seconds)
done (took 28.699794391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543865545 seconds)
  done (took 2.061709936 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59580589 seconds)
  done (took 2.137745107 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.799765873 seconds)
  done (took 8.34068387 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400268069 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480719265 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693108382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130396361 seconds)
  done (took 3.292958341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.679962546 seconds)
  done (took 2.23143735 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210321304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196137735 seconds)
  done (took 1.969820861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385186235 seconds)
  done (took 1.928249743 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110418837 seconds)
  done (took 2.657012515 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261576834 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162776352 seconds)
  done (took 1.967826765 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471040944 seconds)
  done (took 2.015147221 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.85252242 seconds)
  done (took 6.398694388 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212237859 seconds)
  done (took 1.80213843 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240467562 seconds)
  done (took 1.787063235 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.759697178 seconds)
  done (took 3.30650063 seconds)
done (took 43.445197811 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079495395 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080454585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080093199 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077311951 seconds)
  done (took 1.851908164 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076857353 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073431327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077328102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074408962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078623184 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074182286 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075957366 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078564005 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07396723 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074891381 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074071161 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074426114 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076402593 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076333817 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072678802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076588091 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0781802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073974075 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07716187 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07444978 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07289255 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076777222 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076619253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07330188 seconds)
  done (took 3.361345553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07727815 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073078616 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074105713 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071320319 seconds)
  done (took 1.851479235 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076535685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091426732 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088491839 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077028151 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090967085 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08709078 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070928963 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070649957 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0755434 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078923154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069550735 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098174883 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090456683 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078682094 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080920965 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067727442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070153006 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089045799 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078824134 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079399607 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071623594 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078952542 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069367955 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090362782 seconds)
  done (took 3.473030648 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076332013 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103403902 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077658661 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086998489 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089958965 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065981131 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075839808 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091016682 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125624404 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067363806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071614952 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066989195 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074477928 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066922536 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078173064 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107165576 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110693983 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070725787 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098491384 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067358441 seconds)
  done (took 3.235430594 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071824292 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069938703 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066450124 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070121059 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079774549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075179791 seconds)
  done (took 1.99535283 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067369481 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067437829 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068520728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068259214 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072967298 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068363858 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067818954 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068635249 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068912035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068656798 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068354771 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067407933 seconds)
  done (took 2.381520414 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.418562785 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070560741 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070558076 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065551771 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072803021 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067076721 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081243347 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070187786 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093547449 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068317002 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068347672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069820227 seconds)
  done (took 2.776699332 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203349765 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07579987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238646132 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135237763 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109844683 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114031595 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104523353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113331542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144215371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103630261 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169496615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166916296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108255147 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136035981 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09118219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099472431 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157255316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16502862 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105654328 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168746514 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144686 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125647308 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146341634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100274111 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104348487 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120356392 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070355377 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079530516 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168579903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129363789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144614062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109434254 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092293524 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174485814 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16896615 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14078397 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132885527 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082827416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100260089 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131181577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19611271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087834362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162021571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245107091 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080779003 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133456041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119480207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119000064 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106126768 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092031125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147131393 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184660493 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139947788 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09070814 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113711259 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116368445 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118866569 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10559115 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182615595 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162006849 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126736266 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070658654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101660332 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154409892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134146642 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109365766 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128210928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095444423 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135566081 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155460781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12024207 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145298655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131449983 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090236108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121730373 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142406852 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128703049 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169423551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12316522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071653597 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126425523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105458044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082883965 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142889148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077121431 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178662408 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10014596 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108634461 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114732511 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11059501 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110479748 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162729772 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145099733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247552036 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068040284 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106078702 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123641221 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151687277 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090060108 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111202504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118115794 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079435466 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141886787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077383219 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124909937 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077665685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126821246 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134712139 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078467695 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124350855 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103596887 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102448329 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136687687 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162927127 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091842903 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084712272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169584743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123787014 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106255301 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146714166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158070501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101624348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104510731 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150460021 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183108753 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091565893 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166020665 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110120462 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086152349 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089770733 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126207373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114883566 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124581991 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082903828 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121153588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171224651 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077523807 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097654049 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135460981 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081054983 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082825165 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105066277 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101768422 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096535783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102212628 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106051527 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139259865 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125079288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106595448 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27282748 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099121021 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174562952 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091078718 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103696992 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106388079 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072401812 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140529806 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160561735 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081719382 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165962693 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126393913 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107222881 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121797285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085142717 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143280196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080394993 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071680591 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147643455 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113658205 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113024867 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153901719 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106619219 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128780414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122315514 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136303111 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134652545 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132554637 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107281988 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090161137 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114481894 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128836912 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07502161 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094085277 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081812386 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106121051 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098006615 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085505024 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143999642 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126736481 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10254558 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114245868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098511199 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148969048 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078405352 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131673167 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12150549 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095968853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152994912 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151354603 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132660302 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100261709 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145808402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072260518 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07569596 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090864868 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.27370233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086658998 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0860634 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121561546 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149224641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132844714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140351926 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114294372 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123127197 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158621678 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07112038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116739786 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151302599 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123478885 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106466073 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092833362 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101060527 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145023551 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110818056 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185296484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115952404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129353795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15595275 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101843079 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081827583 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105812636 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138215585 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112311667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146555523 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101508558 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089661633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112350196 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075962518 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101902042 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12972236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121821574 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135781052 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116464072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133818644 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07713544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117729161 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122836399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125013495 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066088794 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121299531 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163465408 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09596544 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120830042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154895292 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080866859 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126567714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.3237423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144638673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084344322 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108464437 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118960115 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129125521 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122525806 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141885718 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111132578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137388395 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110776677 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087862831 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08986746 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098608644 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107225192 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098030419 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110373019 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116593822 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098064071 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134830402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105554171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111651055 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1205506 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097897985 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091865458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098746528 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178879112 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121937252 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174230363 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10120006 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14805891 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16552211 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073941908 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079229549 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080170065 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142071418 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085767274 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132112177 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096935676 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105710373 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124560677 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142360437 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096567057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06890148 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110627549 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135983173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111670016 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097521547 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103522242 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161771795 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101496906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080689952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114471539 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104686426 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102030976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173251967 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.207926185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09706964 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076163311 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082472193 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130172578 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156183656 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081782848 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105610826 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121697787 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113329099 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130855454 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104618215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101335122 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116300943 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150869077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129418921 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090117461 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113302004 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128213205 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155261881 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10396993 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094190812 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171057531 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153847037 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159671991 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087810416 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113365037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113185073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123421741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138030019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082408117 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161729411 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082005373 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13537685 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103038768 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089049633 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127852996 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09811309 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087634026 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146314511 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116288159 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081310258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076634326 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118321534 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120850708 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107439642 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077557495 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140561204 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074404512 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133561945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168261304 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080993219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105440633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243461657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081698718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110221476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103011475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090386563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100679717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176221579 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090450804 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151795363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143739662 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115872534 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138878448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102374157 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638701401 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079636933 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155930149 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119142607 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176027089 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097847859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118265852 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110368636 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124200613 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143901365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104375831 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175204814 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130670681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114436393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078662203 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101339981 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104192013 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087840455 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10442857 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115203772 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116733623 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094885587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116354299 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122807363 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081012772 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095242309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157942469 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118544349 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146316382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141389054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087159714 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120085186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139015346 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080286567 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123313982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150925173 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104251424 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096992154 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081661879 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102365792 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165015558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071072037 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155819474 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114727039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105974215 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108997825 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109936259 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126516231 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105084795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118367244 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093568557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10892219 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111819556 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0817791 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07695539 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104101766 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11126163 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097578639 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097401884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098496015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150419144 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071664705 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096289925 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103336218 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143045729 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171652239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088557888 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083093282 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116755187 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111465607 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111864785 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119303405 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077988318 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079874335 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076204431 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.074974912 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.102391289 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105382105 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098003812 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103894312 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151042041 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07970196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.216948521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089298853 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098984066 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067079572 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07440771 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090189616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091315863 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100928257 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095676794 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157489109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090797944 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0851495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086617225 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070505837 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078374717 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121075813 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103494143 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110281884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090377154 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060056172 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101855817 seconds)
  done (took 58.93513995 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113498908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083248472 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097945633 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151122439 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123833477 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212906198 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158193844 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200037474 seconds)
  done (took 2.979856401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068715766 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094902168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102214463 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082935133 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066714026 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069277905 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225771979 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083251257 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066886774 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088794101 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07981539 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069879252 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43215916 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070481345 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070689589 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065096592 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067584892 seconds)
  done (took 3.505248007 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363630502 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359786823 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372368216 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072364764 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.805908154 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088421297 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078540995 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095625269 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070587856 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279479851 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705244002 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091526538 seconds)
  done (took 14.09076977 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07472516 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071622324 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086280965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085200884 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073969329 seconds)
  done (took 2.094191875 seconds)
done (took 104.11813342 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079179851 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392152247 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054172223 seconds)
  done (took 2.176986581 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08208766 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085399773 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086205865 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085392586 seconds)
  done (took 2.049189505 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073576828 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074774553 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083615426 seconds)
  done (took 1.936672959 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222308928 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.142851933 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088860452 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080509251 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077687709 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078123838 seconds)
  done (took 1.942873708 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071413445 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074471863 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071312336 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075952869 seconds)
  done (took 1.994272785 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074936262 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052717928 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056704879 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057489466 seconds)
  done (took 1.943639875 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.0848865 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078831089 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078778616 seconds)
  done (took 1.945260699 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104830506 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083703793 seconds)
  done (took 1.890236843 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081415978 seconds)
  done (took 1.786192278 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097349292 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112085325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129714816 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11213657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139798692 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113902981 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087631633 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088420491 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078826745 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08992972 seconds)
  done (took 2.752759386 seconds)
done (took 22.653888562 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077466999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364819433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362552641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094524372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671140657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358529013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998384101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095263858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116726489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069501527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08686541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650931467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024348191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322111387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.010998526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.421585096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651986596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070682551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070139141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070080413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982494551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069649773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069973467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070415786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651212926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373526105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070164795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.42014758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069527663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071689712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357306441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070096669 seconds)
  done (took 16.555985259 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068958822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116139607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074600272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083704515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071329847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071664679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073731109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071330725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121705496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069682156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087026888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06973345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074112765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07069277 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089793169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070040217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069448586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068532647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06870844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070454158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088948767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069570164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069672857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070251388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069824617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082050352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068989073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068440126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06860387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071095439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072421051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071109713 seconds)
  done (took 4.151026038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113619309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123457815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07494567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103238296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115082512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072159179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147260312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09591643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130531638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070147586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087614321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06980557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103948206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070889168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090897249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070782004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071472604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071182555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070579611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07091212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090250062 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069829788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07075052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070891062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07101499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083235338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070718502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070712076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070947617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07227522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072281789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070332448 seconds)
  done (took 4.426288538 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071742842 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074263279 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082203198 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083127588 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070469 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074026582 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074268942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071935633 seconds)
  done (took 2.323052205 seconds)
done (took 29.166920463 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078001892 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068850025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073472604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081183117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073811298 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080197645 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068956812 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076228531 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073633678 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075089381 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076654419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069321337 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072614199 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069273743 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075089011 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069510492 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081409685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073678189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081254598 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081549697 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071746803 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07472845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075214311 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080957864 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081068014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081478687 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079063963 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074383996 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071247898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071912144 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079057416 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086387279 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070166367 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080922268 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069440145 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070013297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07317033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069750081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081581374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078553217 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071412304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078461428 seconds)
  done (took 4.869699597 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086738865 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093541719 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08748466 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063776343 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069141928 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066914933 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091456237 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061773657 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06183249 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090064617 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05786875 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061639121 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064532313 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056139245 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06052579 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058267312 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063876465 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057764798 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060304214 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05970909 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057552073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053618868 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059580172 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064937283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056532378 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061776953 seconds)
  done (took 3.460136365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072982581 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083300314 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087319696 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126284602 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10222689 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076234024 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07674074 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091749926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084533209 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06600589 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070697537 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092916357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087094971 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073108865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066662593 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084570478 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081088785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068235689 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072984907 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090377628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083413622 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083123735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093107629 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082840454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068687615 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071447392 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072863661 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083856602 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073641376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078669191 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.088236062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072601869 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071051417 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080976844 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073028654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07103654 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09311335 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079325531 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079568853 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069686527 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072860355 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070400935 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090903049 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124490232 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068527176 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076448248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077012587 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07806826 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06952465 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087193249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080969613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068483366 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071454886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068374988 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068713712 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081712353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071593184 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072114301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078299967 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072461204 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0872871 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072592899 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084856019 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068379375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076843387 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068539738 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069938877 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067868038 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094493276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070182744 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111097517 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070049974 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069702505 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077947174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077738504 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074783656 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069349075 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084371933 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08011342 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073095133 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077204482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072881654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072419707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089283214 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07118243 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070121683 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070348807 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075210958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071180992 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070785383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082612583 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068761571 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072037628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086083058 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068652661 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070171608 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075338935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073890614 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069706789 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080969023 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073094421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068217679 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077421345 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069628759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072215417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07931304 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075351764 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068435457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073797607 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075324811 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069725989 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070466984 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072179748 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070612292 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077234239 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076002855 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073233678 seconds)
  done (took 10.790323994 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158319049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152105512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070254923 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146775308 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078521916 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08136767 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150617456 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09704783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069594527 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070496137 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071138484 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11385392 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108891294 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121242449 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080746824 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069425542 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085310335 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116768656 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150907316 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146219065 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085376697 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079199551 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07196018 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071016401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073064844 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08069777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09013583 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07894784 seconds)
  done (took 4.53051439 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079779773 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099844913 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073423959 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089688927 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093164499 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069602543 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071950127 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071464131 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082517123 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081103793 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069335396 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075822657 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076787003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073246587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070229318 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076666327 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077419028 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071227331 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073264682 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075341093 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079523846 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082785402 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074114679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069220009 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076760872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069230649 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066356688 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086190439 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07024941 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091812268 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067922673 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077146924 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083816233 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070106469 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06958305 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069588084 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069312223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069516507 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071193061 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068256075 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068235762 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05965958 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069138492 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080909715 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075713872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058682896 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074002369 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074552877 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074617342 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067078471 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072447847 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071908761 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072692131 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076930781 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07466784 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074258135 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070621331 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06858779 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077090462 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069477729 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066888496 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06789612 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073549512 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067836598 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077022177 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073902325 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067877592 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068858181 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071144774 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075299469 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069200613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072397393 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06721125 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070944739 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074021406 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070962052 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070130248 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067518346 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068769882 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069684008 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057293332 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069063847 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05578689 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072773822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067879402 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067555511 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068973271 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073640276 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081671834 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071020798 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075312166 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070392244 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068460434 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072566321 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062267845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072315407 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085349103 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084519626 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069789067 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066912295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084604741 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074487641 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068682565 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058405124 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076820005 seconds)
  done (took 9.410221494 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092713521 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087409532 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070614074 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083420271 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090348697 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085947295 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075208231 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078284607 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071390511 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.084504506 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075252562 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078514494 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070614114 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078602626 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.095571666 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078666122 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071705879 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078600885 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073980595 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102809052 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085358132 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083620714 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.076862262 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069816019 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078238337 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082161375 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091208774 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081996152 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.080572626 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.077622682 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082141072 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091262305 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.076163243 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073962778 seconds)
  done (took 4.528037195 seconds)
done (took 39.302816046 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.813096174 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.970376134 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.796284323 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.140593192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.094657105 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.909596511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.864514007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796411936 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.06542704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.838296061 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.030106538 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.853671076 seconds)
done (took 65.909694916 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.822900291 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93414272 seconds)
    (2/2) benchmarking "String"...
    done (took 2.082710792 seconds)
  done (took 5.754379779 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.134963394 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.326146473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.041275689 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.793873981 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.800118995 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.105105682 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.595136859 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.319323012 seconds)
  done (took 30.719973379 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.005076432 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.994907981 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.468513634 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.499938058 seconds)
  done (took 15.756830879 seconds)
done (took 64.007259783 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.813044734 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.817027401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.810993502 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.780915537 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.854008713 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.80193145 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.140394102 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.815366316 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.798118515 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.788072231 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.798194351 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.230342239 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.805216088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.221850992 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.798973489 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.805975383 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.87547191 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.384940999 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.955623315 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.808512604 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.810127514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.846334423 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.801649367 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807091585 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.813625441 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.796403154 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233279856 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.806139399 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.59986201 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.805818982 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.844553106 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.282191792 seconds)
  done (took 205.290488218 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.796793114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.023051532 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.06670524 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.835273252 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.467675549 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.996872614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.930487796 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.489277541 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.799575174 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.799740017 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.110979366 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.797581015 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.125324307 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.749557711 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.804966415 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804769481 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.068130176 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.102701624 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.799474613 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.070369591 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.799450141 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.914787602 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.870119863 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.06621627 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.817766817 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.82862065 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.826613146 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810172016 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.993250878 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.045067098 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81864171 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.808404059 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.007382989 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.669915623 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.812348166 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.821299136 seconds)
  done (took 172.290214535 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.943505484 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.799523945 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.798524629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798992065 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.804306433 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.799316913 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.797593166 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.927173331 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.925116003 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.270162059 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.32114955 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.852535619 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638403915 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.799204471 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866024174 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.812095808 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.798798765 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.814421961 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.825794224 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802964517 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.798903003 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926588888 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.811724239 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.831842977 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806052112 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.799468054 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805283581 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.169594268 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800309032 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806165119 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.043893801 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.800652292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800238177 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707312767 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.543600659 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893031608 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.801682615 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8073526 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.801941837 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.020386714 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.800758198 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.800700861 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.803903374 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987078035 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.800062796 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.924835484 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801461712 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.307931588 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.801110773 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801415322 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.571620754 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.494805846 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.804506747 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.800997638 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.804353086 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.801176031 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.801781243 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.808079961 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.586025863 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.875102418 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.802536859 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.804672429 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806985903 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.803235479 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.970433382 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.8061857 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.116110932 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.863298186 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.919311399 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923780965 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.804847563 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870356332 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.896463818 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.802928794 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.803852723 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.802779417 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.802242596 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.884003809 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.802786047 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.923101268 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.802694719 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.809805641 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.803450955 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.852561335 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.871680618 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.802867562 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.700517197 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.806704415 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.802645182 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.132616017 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872989326 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.804563129 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.802137556 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802300844 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.921919052 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926566608 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582111482 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.806903691 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.681955862 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.809990704 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.803389664 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.935024799 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.803253042 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803079076 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.994238952 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.807569614 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.885743616 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809104228 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.806882687 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.804574837 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.835496664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.804615911 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.864604878 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.804701217 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.175249232 seconds)
  done (took 405.703428336 seconds)
done (took 787.022128255 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.478175028 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.443378562 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.547366647 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.466211071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.446442204 seconds)
  done (took 14.129499071 seconds)
done (took 15.876957984 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.890825616 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.897740376 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833183454 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.893664298 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.82867498 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.894118602 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878358528 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.831046414 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.861144424 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.829959985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862800471 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830027035 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.8171892 seconds)
  done (took 25.897248124 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.043988626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.051183555 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.873545488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.053668338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.850657104 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.035519544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.971946572 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95708006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.952677348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.820141843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.817627584 seconds)
  done (took 23.17773612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.046235545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.0459361 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.878264979 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.045905216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.852302887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.046758598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.967715536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.958426697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.958598988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.821680624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.819672475 seconds)
  done (took 23.190858883 seconds)
done (took 74.013557321 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.815633049 seconds)
  done (took 3.566368464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.837036045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.972455278 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.821853265 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.818444931 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.815785207 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.816098373 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.81804967 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.815345259 seconds)
  done (took 16.465907081 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.810255054 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.811026927 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81095139 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.810794482 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.814493682 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.813651612 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.811978624 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.812213519 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.813744743 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.811587706 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.811435766 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.814801159 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.813154842 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.814168858 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.814216575 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.814231103 seconds)
  done (took 30.754102725 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.813586852 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.811610589 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.812464498 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.812866629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.811987498 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.812050907 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.813235026 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.811880912 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.811533087 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.811735216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.813602297 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.812363945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.81430276 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.81259423 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.812730907 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.813171564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.812841051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.813541552 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.817490053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.814013022 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.813477868 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.812791664 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.813755958 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.814011083 seconds)
  done (took 45.267269477 seconds)
done (took 97.803198522 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.494404709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.442967292 seconds)
  done (took 8.689119058 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.817073735 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.815525976 seconds)
  done (took 5.425307967 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.816356766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816552751 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.816480742 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.816396384 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.816524437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.816585802 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.815940731 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.816906177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.816735002 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.815839575 seconds)
  done (took 19.917518036 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.816182387 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.817203306 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.813505888 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.816523064 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.817299036 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.816627743 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.815917642 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.815454066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.815630891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.813831666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.816734635 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.815657723 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.816016499 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.814386153 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.815196247 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.813990783 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.81361846 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.813168598 seconds)
  done (took 34.430965812 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.816656994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.816019227 seconds)
  done (took 5.384923129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.813031712 seconds)
    (2/7) benchmarking "second"...
    done (took 1.813325154 seconds)
    (3/7) benchmarking "month"...
    done (took 1.813273418 seconds)
    (4/7) benchmarking "year"...
    done (took 1.813388809 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.813695663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.81342058 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.813322418 seconds)
  done (took 14.445682147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.817365088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.982810158 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.049357261 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.483070958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.817179725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.81987125 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.767403822 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.820868714 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.821431183 seconds)
  done (took 20.13189424 seconds)
done (took 110.177032546 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.65969812 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.814359156 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.201130947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.865540996 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.858464213 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.105198224 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820133394 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.019488615 seconds)
done (took 43.09692111 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.841067511 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.270754204 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.302916046 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.195962655 seconds)
  done (took 12.515452523 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.789746133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.331942668 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.846946529 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.401474781 seconds)
  done (took 20.123894938 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175528662 seconds)
    (2/2) benchmarking "read"...
    done (took 2.174655146 seconds)
  done (took 6.100455057 seconds)
done (took 47.328735064 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810023628 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.806945775 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.809654437 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.80723172 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.809453849 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.806957589 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.807183524 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.808978524 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.809633353 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.809709689 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.807104965 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.809592432 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810238543 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806553872 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807619572 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809760119 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.807534216 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80700554 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.810656741 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807994062 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810803211 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.808069122 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.807827248 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.810625933 seconds)
  done (took 45.153147381 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.810302944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.808517566 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.810555433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.810847138 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.808790781 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.810925336 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.810544154 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.807986977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.81054614 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.810796242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808499504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.807855432 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.810713261 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.808050309 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810382312 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.810616366 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.810721442 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808267785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81033766 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.808149984 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.811409858 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808849825 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.808317206 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811140424 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.808112426 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808740528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.811986147 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.809521766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811934295 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.809319075 seconds)
  done (took 56.040617215 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.81607451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.819734953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.811750244 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.811519689 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.811821614 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.811433504 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.812211953 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.811103297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.811826784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.811669731 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.812264489 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.812291573 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.810729516 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.806573513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.805476386 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.805930156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.806136255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.806724504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.804537554 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.806176552 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804439873 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.804910874 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.804881017 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805090587 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.804125568 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.80419922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.803280792 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.803880144 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.804733446 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.804089157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.804161652 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.803901013 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.803995136 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.804137911 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804282247 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.803536636 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.808790531 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.810842032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.803530657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.80307309 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.80407503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.802114402 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.802557364 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802840032 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.801968665 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803798356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.799544625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.799249825 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.798998336 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.799610502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.799202876 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.799858193 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.799818082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.800498231 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.798251109 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.799419636 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.800404533 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.799256912 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.800424524 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.800336925 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.799626667 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.799459035 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.800682356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.800435911 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.800286111 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.799918792 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.799725457 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.800954298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.799303168 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.800466957 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.799388795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.800701017 seconds)
  done (took 131.663248985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.800192849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797639412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797371289 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796351031 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796745124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.800224923 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797187303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799898778 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797376798 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800286647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800210828 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798613153 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79793929 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801295085 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801098934 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798401701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800309194 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798688714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.800845262 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.800708485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800169363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797914126 seconds)
  done (took 41.314809472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799895885 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799944592 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.797772587 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799491525 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797790489 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800133564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.799657653 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800048417 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800475286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797465336 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798743127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79996176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797285235 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797504342 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796830964 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797454002 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800995593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796681764 seconds)
  done (took 34.115442403 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796481882 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.797532183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.801047082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796696686 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796867398 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.799318196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796461353 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800304349 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.801353058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796516857 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.799297465 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798455013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.799283963 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796279387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799390215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795446633 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797976937 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795369084 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798908455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798193694 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794419071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798092976 seconds)
  done (took 41.290378488 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796585345 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79771911 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795399381 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795128631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794437372 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797679792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797555793 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.795865293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796005435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.796847572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793915513 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796387004 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.794017275 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795640388 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.794487776 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793892245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795793577 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795581738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797797515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793596091 seconds)
  done (took 37.648216248 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796860071 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797223857 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79805644 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797906556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7969432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797656954 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79832662 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79792351 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798022439 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798585181 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797922635 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797794715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798776831 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797464156 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798537134 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797502707 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798073702 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797503457 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798028875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797260988 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798872675 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796962669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797868545 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796841359 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.797087893 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798946459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797328754 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797322343 seconds)
  done (took 52.070905916 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796426925 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796849227 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.795258563 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.793771723 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.794698978 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.794181591 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794039561 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.795069102 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796010121 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792491744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.796218962 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.797144608 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795994322 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.80217433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795757801 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.795763768 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796001036 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.793117725 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793905609 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793642535 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796270445 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795826391 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.795281343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793855474 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794058151 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.795810103 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793830824 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793699119 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796512824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794840222 seconds)
  done (took 55.591863434 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814429568 seconds)
    (2/2) benchmarking "in"...
    done (took 1.815796351 seconds)
  done (took 5.36298092 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.793988225 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797459781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.796296604 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793977982 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793621748 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796172509 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796154872 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794354574 seconds)
  done (took 16.093826336 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.796328144 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.796320998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.796115201 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.796582809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.797547989 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799431265 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803865159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.796562124 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.798822113 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.7997831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.803275809 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.80408002 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.801469558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797016586 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.797887678 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799188838 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.796496817 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.796524472 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.796344854 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.79572725 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797661355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800099868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79949236 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.793189145 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797921096 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.809078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.804717967 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.796147033 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797616609 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.802825348 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.797031394 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793631202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.796859493 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.796384025 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.795778534 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.797027466 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806674401 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799810093 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.804979527 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796868072 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795944636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.794387124 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.802200671 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.800132543 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798343522 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.796035349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.796297984 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.79438328 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.798356336 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.799018397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.799368056 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796358695 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793645815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807482011 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.800405393 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803954024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.796834832 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.799162062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.804849176 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.809654069 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.810684327 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803240695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797773557 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.796470683 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806204431 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.818756278 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803751431 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.793796478 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795702481 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79528122 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.806934029 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810627277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.805844318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.797506856 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795861776 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.796752958 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799077096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796435234 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805453816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.800935609 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.797099931 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798538322 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805985387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816154005 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.797509528 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.79636573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.797212622 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.796856441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.797711043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807351163 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.796522839 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.796353057 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798132828 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.797756079 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.802440053 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.797917457 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.797091215 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800559898 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.794826337 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.797101964 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797719609 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801440528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.806551173 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797800621 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798078054 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.80585177 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.797324643 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798251435 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.809103618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.799168832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796350359 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.797775518 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.807047511 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.794079799 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800556493 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806546537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.798688618 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.799115783 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.797401746 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.796548191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80603279 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.819205771 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.79670721 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.796449185 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.802074757 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.805292156 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797525275 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.8020141 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.797067592 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.793696569 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.794672657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.802289794 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.796230593 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.799667219 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798609358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.801298948 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.794772808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79732427 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.798248288 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.800995468 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.802167077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.800572457 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802338737 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.802226587 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798463517 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.801600875 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.806916083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.799157175 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801305542 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800992965 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.795268447 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797568327 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.801904677 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.800387658 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80249128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798161581 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.798715631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798902517 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798953106 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.800005638 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798793819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799732883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803163103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.799855542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.806158026 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.800813055 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.79629491 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.798979014 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.799470813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.800779335 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.799986696 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.79916863 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.80232835 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805801559 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.799164424 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.800204892 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.805919563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799550709 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799606268 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801024493 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802429699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.808497565 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.80060364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808095617 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.799780067 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800539403 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800030488 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.802602864 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.801359423 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.800079221 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.803097724 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.8054905 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815881888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810097163 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.802151726 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.802923905 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.802129576 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.804227004 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.808297129 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.801103375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.801900502 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800757586 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802801955 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801253956 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.805530237 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.801761371 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.801395916 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.801180805 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.800468132 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.802714825 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800942617 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.80389454 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805271631 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.798947608 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800702803 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803323095 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802505816 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.799175051 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.803256758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.802729506 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.803388822 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802863594 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.815019337 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799195226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804468389 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804490101 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.803860662 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802386512 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.802629558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805877085 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.803613577 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810608801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.805730689 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.804371882 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810288143 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.803058877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.803704744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.806789748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.802045101 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.799826291 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.805257576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.80843446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804274687 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80368298 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.804070465 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803701504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802265083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.81101345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80138202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804192242 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.803725556 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.807657662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.801044109 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.807171929 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.806030874 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806545179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807054101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804072976 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.803437836 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807441322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.804260755 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.804279857 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.804134132 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805829862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.810606106 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.811660622 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.807090842 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.808687383 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.807243013 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808114249 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.80750803 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.805022457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.805787018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818718579 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811926962 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813309996 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809745082 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804193563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812947924 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.807115456 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.810848456 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80737982 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807578553 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.807101486 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.805279958 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.802282405 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807671182 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.806479197 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80804814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806033474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.808197244 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805386755 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.807098312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.805973437 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.805923197 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.804839628 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.806271713 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.805695582 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.813269362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81085056 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808394539 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.806657661 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814806214 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809272603 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.809436836 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.807503157 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807199507 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806334102 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808839615 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.808395697 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.80961065 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.813255943 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.809761605 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.817550745 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.808861714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81692637 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80694764 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811211147 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.813063738 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.804163583 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.807178893 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.809104667 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.808309556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817459731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.807758319 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.810108018 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.810324212 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808247076 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.808567848 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.806980154 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.808062075 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80871775 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.807671913 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818378764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.809322702 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.812673008 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812951191 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.804675733 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.808527837 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.808184871 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.80749509 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815981261 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.808602938 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.81100813 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807909222 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810042372 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.807649516 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.809947065 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.807766234 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.805927567 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.807955608 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816990032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809645299 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813137723 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808722828 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.820615813 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809838564 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.817877798 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.810285764 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.812025367 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.809427385 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.808654682 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.813015006 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809549285 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.813005695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.809791929 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810985576 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.811850894 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.80924947 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.815050501 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.810871302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809994353 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.810727759 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818734311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828227625 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.81157042 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812552224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807486258 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.81130339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.814431366 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810571513 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.811317561 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.812978052 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819164247 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816733779 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.81159282 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.811200865 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812451654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810779392 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.810701561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.811167166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.811581098 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.811779436 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.813793924 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.811023151 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817812483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.810119519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.814306131 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814446239 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.812911562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.822683882 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.811320146 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.813029914 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812870385 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.810815041 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813564719 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.813075317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811871906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814385455 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810855655 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813451675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817165025 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817376894 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81606309 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.812666771 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.812158341 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.81399325 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.815481961 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812141565 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.813043823 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813682667 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815314256 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.812237387 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.814871743 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.812005028 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812113256 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.814996256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812384453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815532968 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.819118319 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815759013 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.810438603 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812820112 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812753615 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.813035101 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814801347 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.826358035 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816718894 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.821793086 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.820879754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816736825 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.816391105 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816517477 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821101708 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813340532 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.815932707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814305233 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.820914638 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814525232 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.817903121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814219988 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823313259 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.816071656 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.814811746 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823930976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.817794857 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813525407 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.814958679 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.818434512 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815022085 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.811171849 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.814654539 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.814737859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823662508 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.818967062 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813706095 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818868391 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.813678072 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.815558163 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817553818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814251607 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81833226 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.811564769 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.815790486 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814948534 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81445615 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.811664435 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.815358804 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.81580654 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.818113264 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822103659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.812787732 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818960031 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.817020897 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.817358752 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816475408 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814242186 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.813086463 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.812371074 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817320029 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815581796 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817623183 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.819654122 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.817169514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.816790251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816157015 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816779196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819014869 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825234862 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.822063926 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.813917821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.816963806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.82037085 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.821686477 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817631064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.816769921 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817657425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.821718291 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816917779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816851176 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816085607 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.819410948 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833012115 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.817832309 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818087537 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.819352275 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824440683 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.81746037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.815137551 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.816381878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.821220266 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.82009589 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823341863 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.817991968 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825227726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818268262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.818503461 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821401989 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.820429448 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826295519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.823515971 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817161824 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.817881918 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.823190032 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.833769862 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817983154 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826681433 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844236883 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.820977477 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820010177 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.819957872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818549221 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.819945105 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.823378389 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819736119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818994259 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819014495 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.819443236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820986951 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826090097 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.823488984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819000474 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.817977558 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.820743337 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.825022656 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.816722421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.819008185 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.818695751 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.820616982 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.819759991 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.81959216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820545252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833012113 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.830175041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.818621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.8212524 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.816169157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825797111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.822491791 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828310724 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.824738545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.820285439 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.819938794 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.824306468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82039253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.817254791 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.822412139 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.821092577 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821028015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.817204463 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834548104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826404328 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.827689125 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.82304514 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821388998 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.820293884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824122383 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820661683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.820074373 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.826893309 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.821679467 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823793679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.819972229 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.820313961 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824019375 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.826010252 seconds)
  done (took 1079.948422314 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818721128 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817970381 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81848192 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818582226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818816526 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818992645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818961881 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819614435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.819117458 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819566726 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81900156 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81841749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81812207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819410031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818149307 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8183105 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818356614 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.819124454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819344146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819046747 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819400995 seconds)
  done (took 39.952633036 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.821673048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.819759278 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81897144 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821617775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818554985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821390589 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818924754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822062246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822600813 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819434953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.822092103 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822041452 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.81991507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.820077458 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820150662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822397874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822375162 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820897221 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.823282951 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819934783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822907528 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.819931555 seconds)
  done (took 41.819172276 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823768067 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.824125722 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.824852021 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.820030968 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.822915363 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.820694056 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824430359 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.823282313 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.823501171 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.826708676 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.823443979 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.824729624 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82961032 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82700121 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.828616809 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.823502872 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.969074595 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.824778392 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.82513823 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.824129607 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.821568468 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832120807 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.821023657 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82228448 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.826258285 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.824173925 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.824620765 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.823943545 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.826212715 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.82603693 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.827708741 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.824588744 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.826225804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.827480456 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.8252251 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.826757745 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.827815648 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.826083972 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.822759841 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.825415541 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.833654138 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.840760338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.825473239 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834350753 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.825503451 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.824779901 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.829186728 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.831846165 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.823344484 seconds)
  done (took 91.37144784 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.824619796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.825847162 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.822883809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825206349 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.826216267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.825176093 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.825242933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826559986 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.823795793 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.823310108 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826261573 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.823017562 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822717359 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.824988282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825956198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82323846 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822901241 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823205613 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.823136328 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823097058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.823440804 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.826647143 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8262198 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.823531218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.826218574 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824163101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824018862 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.826501433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.824342615 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823673091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.826297339 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.826457456 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.827433937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.823293371 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825431019 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.826692226 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.826621172 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824556489 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826983481 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.823610108 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.82685843 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826196593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826919892 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.827285463 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.824412899 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.825032786 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824641069 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.825047253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.826070646 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827665435 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.827686078 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.825035452 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827004743 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.825021138 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828192691 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.828087883 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.825359644 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.825078776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.828210441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.825191607 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825816985 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828653544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824921139 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827927772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.827911755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.825737677 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.826446297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828808877 seconds)
  done (took 125.898258262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829866373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829712139 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829730447 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829702544 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82961229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.829518923 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830887194 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.829589972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829604502 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829218673 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829852007 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829585992 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.829436025 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829921635 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830427245 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831052794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830371031 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831158357 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830634932 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831789479 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.830211109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830915002 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.830745175 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830756025 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832635069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831107946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831185492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830931743 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831079855 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831162351 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832108312 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.831053144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83208575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830994375 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.832013127 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.832213384 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832219974 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831794344 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.833074342 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832255232 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831160212 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831981563 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832737127 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.831609451 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832842702 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832526301 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83188774 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.833225723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.831646503 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833090245 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832208507 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832580812 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832577503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832960097 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832057052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.831760305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832375031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833043036 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832835477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832842576 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832876171 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.83320208 seconds)
  done (took 115.312649161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833107931 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831788644 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.830134588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.829953423 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833634878 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830895637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834325237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.83375199 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833479795 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.833252407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833098096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831248349 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831383125 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834031579 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.831238346 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831536109 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830315426 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.831305279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83366037 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831193115 seconds)
  done (took 38.411273445 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.831140688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83405233 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.831903224 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831772194 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.833970578 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831694724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.834719612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833937051 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830912675 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834029207 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834563294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834912183 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831667885 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831945512 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834251718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832168545 seconds)
  done (took 31.096386638 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.831565148 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.835228285 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834899367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.835056101 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.832415596 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.831941101 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.835183515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83187824 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832342696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835422583 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.835192265 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.835040815 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.83637417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.836555209 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.833829807 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.836580263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.833479692 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.83328702 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836118545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.836351967 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834049562 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833274226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.835744693 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.835636544 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.833841027 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.834552212 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833289758 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.83371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.83352865 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.83618932 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833289039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834055322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.834314155 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.834067402 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837438381 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.833794441 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.836273834 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.836424193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836194436 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.836023581 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.836652155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834387159 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.836525537 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.836538695 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83430263 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836910692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83465341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.835978576 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.834281024 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834749536 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.837411521 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.838654085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837741494 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837782741 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.838650415 seconds)
  done (took 102.701372504 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83765386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836809769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.83481414 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837436593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837867862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.835369945 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837236012 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835132184 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836219761 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837725972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836107652 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.837757526 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835400762 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.838262724 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837106352 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838791763 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83598677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835765973 seconds)
  done (took 34.834597479 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.836901705 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836001219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.839208791 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835513301 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.835817021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839519362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837409019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.838991254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839194228 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836731556 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836114716 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.838597818 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838559427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.839681336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836751828 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836373088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.839066757 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838533372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836113078 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836836847 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.839024194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839636871 seconds)
  done (took 42.20449563 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.840784318 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.839528112 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.856510879 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.879426374 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.867373684 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.839430335 seconds)
  done (took 12.897337399 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837563735 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838990884 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836307909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840116999 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839080731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83800424 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836740602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836935595 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839810049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837403997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837476983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840367311 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84025525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83805695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840623595 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84009874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837758452 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838178901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840347063 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841064391 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838029411 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83999023 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838577362 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838254656 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839400565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838009738 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841195082 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839909137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838953923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841431728 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840845065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838532014 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842104387 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839137684 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842202859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841856618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838410923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841165349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840822231 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839263708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842057154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841700432 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841647808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83870044 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841019159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838993092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839226562 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839378615 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839037901 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841970115 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841606457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83928457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84237535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841651008 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841842798 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84260196 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839397394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839315788 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84205979 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840070438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839103902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842915357 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839571053 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840584434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843268738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839572581 seconds)
  done (took 123.21022277 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839948233 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840646776 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840478595 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842216343 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840787695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840746152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841958213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841251612 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841410123 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841558446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844483865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840858291 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840898282 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841792938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840963318 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841200924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842027854 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841551333 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841762325 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845116143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841288001 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842010437 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842342676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841523721 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842074681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844976669 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841922423 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841855324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842837654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841562998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841970351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842309604 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842222346 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843060206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842605765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842084831 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842118597 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841759194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843148572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844197424 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842858328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84510583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841884617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842701682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843382393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843481084 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843271611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843779454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842464648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842986237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843344571 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844395076 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844136517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843465452 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843566919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843773054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843308833 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844011189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844554605 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847456852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844525155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84405286 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846547582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844162545 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84474243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844853485 seconds)
  done (took 123.402339353 seconds)
done (took 2521.151510842 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.852856548 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.864464962 seconds)
  done (took 15.499218498 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.006940125 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.960542253 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845594367 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.887489311 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.845493995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.86678882 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.862979281 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.845909376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.845781004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.846486872 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.846273208 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033354232 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859552001 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.846418363 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.846542841 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940180086 seconds)
  done (took 51.984879289 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849401434 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.851364923 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.860199106 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.851949588 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.849379345 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861349318 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.881962719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.853894644 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882989279 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.860880816 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.917351928 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859627327 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.848929847 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.899218977 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861587969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865317472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.935199205 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.921670544 seconds)
  done (took 35.494600534 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.92616522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854512123 seconds)
  done (took 10.569255638 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.855690427 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.86753871 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872488262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.876598226 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.873832387 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.863760301 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.883288255 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.880824401 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.862145811 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.877025472 seconds)
  done (took 70.522899087 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.856716459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.851354232 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.851531719 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.850705053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.842538564 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.847144606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.850779137 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.849121908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.530124738 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.886447745 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.856396908 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.857207882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.850835317 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.85275416 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.847510748 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.873536161 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.966188453 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.848180096 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.846920233 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.856819356 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.852010846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94775061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.863857111 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.851057236 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880254694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529212642 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860450914 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.857286317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.987302042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.84835918 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.852298265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.85273146 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.853459189 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.245919315 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.142745545 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.849591425 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.859645779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85959419 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.848883198 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029460612 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.852676406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857927704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.831499953 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.138985987 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930984432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.892545236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205030077 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.856174929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853925012 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.883806378 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855031074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.854166669 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.866164772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361049296 seconds)
  done (took 131.770257805 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849239161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.436215755 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011966386 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848916841 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129068908 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089859317 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848213263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897569825 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847646928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09673504 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02498641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971128714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84839563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847514293 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850378458 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846116789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001302365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91834759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.849982937 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.8466063 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88393442 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112915192 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975183496 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.848540442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.871330794 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076415688 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.973882851 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96528624 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.370296589 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.84790467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915830984 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84964712 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848271404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84824592 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013513025 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955823869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945500065 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.849561134 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848465618 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84791905 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.511478052 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071667699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95963353 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986230372 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0969959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078052268 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.498110761 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848710674 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.487042067 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046731084 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058095984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102507997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.977269759 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851745549 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.098816059 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.849003038 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849300008 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112012508 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076423001 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.962771398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852191688 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850936215 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849664038 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16460299 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854005584 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.961554516 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852495351 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850373159 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962947092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967847519 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079150773 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09375134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881357335 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.746714139 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.357272856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134481433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.921768586 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114141786 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85312209 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85078198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945034327 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.609124874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023760162 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.166369383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.116074628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892656975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.452737589 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.851191272 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.098790737 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100364014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080898576 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096282887 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.01686809 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.166512364 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850609368 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.851377747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.059981378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984262194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853462941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.215589536 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100492483 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.579721868 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88266854 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.158898737 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989264412 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848772542 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478869493 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85099262 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052555902 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.895101994 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.853679924 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854157401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.098810415 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.722506988 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851846126 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.644592308 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.919564955 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855151442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117617144 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855972582 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094793909 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855134416 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.16396482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.340643962 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898280874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.047553108 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097494294 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.647045676 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121491054 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.166831654 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977999779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111580022 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.682997179 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851910778 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136474072 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855991595 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.853488072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022534465 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85418918 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008483847 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855255523 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113587915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880016602 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024470498 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85665692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12753445 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898926315 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90600908 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856281692 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972385977 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857560202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.898149516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039423702 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856657613 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855794393 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.429449458 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.855110529 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003786648 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.152988081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87967614 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926016315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.381568896 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854653789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949132991 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88209238 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.461433361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.855159736 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.026065173 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.857383336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845040122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.855334508 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.16504626 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078453465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85884081 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856645581 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.648427513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.544661873 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855900761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032647212 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.086828351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.505474306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075594385 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859069031 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988390248 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.859650674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.941625753 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206261571 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856115024 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.85600273 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.856346907 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.856734903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858828211 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083558783 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.886132267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.554096523 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.995005293 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100897286 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.167725675 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119388864 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905657344 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861250919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12437687 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859293358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.924401212 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858578581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881506664 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104690199 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860214985 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08660367 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.1434336 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.982927639 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907693782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.859452672 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858787723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856463305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001819017 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958604365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.85994619 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857996993 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975922117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98428048 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046854915 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.452187247 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.033286487 seconds)
  done (took 900.475254409 seconds)
done (took 1218.098887616 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.859576092 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858080975 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.848973534 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862173698 seconds)
  done (took 29.226388256 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.866669705 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.86441661 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.865894372 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.864411118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.866398103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.864482461 seconds)
  done (took 12.989491228 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.898444611 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.860571708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861070051 seconds)
  done (took 21.419014853 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.93396541 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273385564 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.966869906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.305720541 seconds)
  done (took 10.277440282 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.865527609 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866740995 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.86598699 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.868180535 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.867437851 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.869074796 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.867370197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867938973 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.868390974 seconds)
  done (took 18.607162625 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.932217737 seconds)
done (took 98.249605359 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.827189367 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.233243664 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251245502 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.921615157 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84524588 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.507772686 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.991704836 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.000260363 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902801302 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803325945 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889024157 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.861935762 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.953075059 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039922576 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.295225413 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.970534425 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47753709 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.743704755 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.20489564 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.070535265 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.228742263 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.326666074 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.191075855 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.935591332 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.455389312 seconds)
    (26/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.963863085 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.106456035 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.160970777 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.19712768 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.082786899 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876896112 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.250497688 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.94599887 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.950823317 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194834211 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.051459139 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.851432111 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.160976541 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689347598 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895781434 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.863668424 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.907175765 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.973483563 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.052127341 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.232271708 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121028571 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.862086868 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889452035 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.943005797 seconds)
    (50/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.862752706 seconds)
    (51/309) benchmarking ("map", identity, Int64, true)...
    done (took 4.805048664 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.864097069 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.867313417 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.027671771 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.958132414 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.944196228 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.919387284 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.791969296 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.687258521 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.520500901 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.876648566 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.870831498 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.629464395 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.112969907 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.374405864 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.099317755 seconds)
    (67/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954636689 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864129826 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.849458394 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.930388312 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031754183 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.852043808 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.528204767 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.943465152 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.991943073 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.110997289 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.854435222 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252627395 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.196323704 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.574656836 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.065469895 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.758202151 seconds)
    (83/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.928909543 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850448683 seconds)
    (85/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.021765502 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93767805 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.653737649 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.071788184 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.869218366 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866596598 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.903095659 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.950134764 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131517841 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.235643453 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055772219 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.772116822 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.017993919 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.896226605 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993464258 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.876269315 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.874485962 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.85038256 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.954928188 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.65670267 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.542269962 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.873917412 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.896458159 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235122995 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.375142732 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.441622955 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.409652957 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.181376674 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.083686516 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.622335947 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.997758038 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.974026159 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.974159094 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866514817 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.116744503 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869703506 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.532597286 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.953163276 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.000299772 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.278467552 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.853526255 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.192619142 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 8.836713322 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.9146256 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.86799174 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.340717142 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.892589464 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.943811421 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.124295407 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.218915055 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.934769888 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.964427574 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.166306935 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.942752989 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.923490887 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.085113933 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084105047 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.030614796 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.15009417 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.03073246 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.715995531 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.087683091 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.009588249 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.962436484 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.006527224 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 5.769246905 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.129002275 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885686867 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.971190619 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.165940538 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.001661362 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.992136318 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.544874053 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.26348121 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.859755518 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.966729333 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.85386 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.882133348 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087447092 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899173196 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.895925883 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.869884718 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.380206412 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.899286187 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.03671958 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.110345763 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170101742 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.465110481 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.738996413 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.899823571 seconds)
    (175/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.895021231 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.023448499 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.400293833 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920824633 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778762482 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936987092 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058206497 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.970402766 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.980705254 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.392166509 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.529140551 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.246953865 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.877844085 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.2241583 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902859631 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.894269086 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.855892535 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.50996558 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.079464299 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.8623128 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.907611333 seconds)
    (196/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.161383993 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.242544264 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.041252622 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915468847 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156505242 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.275989311 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.18060021 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.976491217 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.013819963 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.162251151 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.902541302 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.46851409 seconds)
    (208/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.035014242 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.162088524 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.101426758 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.465274567 seconds)
    (212/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.210483014 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930772376 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.85820606 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.942353774 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.388348417 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.493693448 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.517310686 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.221892613 seconds)
    (220/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.051872029 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.003194081 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968020373 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.287909897 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.014783069 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.901208295 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.075407691 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.595175427 seconds)
    (228/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.375443659 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875407401 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.877936233 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.282329506 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.299497449 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.475811319 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.236408708 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.862344763 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.990224224 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.893165751 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.895578654 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.79692984 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.233791312 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.863314613 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.966947453 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.903457931 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.389111658 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.916317752 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.161609833 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.984422607 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.099242138 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.560151991 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.034739343 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.80885408 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.836540596 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.941925453 seconds)
    (254/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.018517019 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.180182932 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.392099805 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.910457597 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.980636366 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.202424164 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.005032084 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.971812094 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877857403 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.170179367 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.899855661 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.877008378 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.973088555 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.522057814 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968604337 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56784411 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.267035639 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.883378935 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.02435198 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.904726483 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.785298024 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.003975951 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.009560985 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.267756255 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.876917582 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.902538336 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.863361978 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.188399113 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.183818746 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.158892446 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.931216262 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.308406739 seconds)
    (286/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.811964422 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.075643868 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.865981419 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.012139508 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.180233505 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.965106529 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901794701 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.994236895 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.877365405 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.92881571 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.032222996 seconds)
    (297/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001993783 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862037305 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.490279102 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881783402 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.068839955 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.926029564 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223627368 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.994844548 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.407772847 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.968217703 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.946518835 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.263241239 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.965722354 seconds)
  done (took 1023.819867739 seconds)
done (took 1025.632310616 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.911973314 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905984674 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.890528345 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.911895808 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.001793782 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.919377492 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.900745924 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.892274507 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.938879657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.940786298 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.890149557 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.918670619 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.89238035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.890870273 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.889413283 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904993541 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.197041193 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.91687901 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.907589628 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.900942119 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.907345626 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889604218 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.941217607 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.918557112 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.895570087 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.894091472 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.894679085 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.910605375 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.003154828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.894289082 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.894305352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.902454866 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.196339185 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913392373 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.887181302 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.911476918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.904408499 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.901353414 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.896212724 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.924714658 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.330982395 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.898351481 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.894033009 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.893696646 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.893280916 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.897710008 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89477815 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.898906779 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90483963 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906857684 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328060484 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.913185113 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.896842924 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.893782842 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.904244018 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.893264054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.896609023 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909881624 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.911991461 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909813704 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.187671772 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.921944891 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.895183399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.909655153 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.901285172 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366297043 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.894559968 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.898038834 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.331157041 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.904738802 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365547658 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.907727338 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.895261988 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.908371505 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.926566091 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.198719492 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.913075535 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.893374623 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901874835 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.893248046 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.90464721 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907089645 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.900268867 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.896147018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908688631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.92387229 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.90480882 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.896864795 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.904517322 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914449801 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.903580529 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.907063156 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.898347391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890365943 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.904802438 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.898958716 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.899313464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.899271396 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.901227347 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.907180157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.330195292 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917726773 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.89190402 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.892392455 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.894974206 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90917936 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330274697 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.902797831 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.917161696 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.943287717 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.898187096 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190110489 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.923475453 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912279764 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.905781447 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.899248588 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8914751 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191399743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355755466 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.916935721 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.897900101 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.896220945 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912684555 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.898660178 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.893065497 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.202567535 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.922262517 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911100637 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.017999534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.908187576 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.929177304 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.895858383 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.901388105 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.931467988 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916032436 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.929790496 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.90071593 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913109697 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.913876066 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.893901932 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.909304164 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.908957395 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.899241186 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.903348861 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.892988831 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.926761516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911296733 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910405468 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.918799488 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.020304661 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.895931633 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.193161393 seconds)
done (took 297.677003848 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.968111735 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.892155335 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.997184762 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.89328403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.982591798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.979697307 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.890853773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.890944784 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.891852389 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270130579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.890686779 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.891163739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.886635662 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.891416007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.979482206 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.892721175 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.89058579 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.233889932 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.894848445 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.965138885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.886850581 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.891130652 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.89294101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.276751985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.89430383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.89108609 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966355393 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.89501955 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.244120141 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.886687506 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.895797017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243477107 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.985413191 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912379917 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.905012843 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.902192775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979586889 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.898011095 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.976223032 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.979970233 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99728224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935658378 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.890979332 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.888310105 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.897561622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.897151419 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893323553 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923367935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.896982339 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.893858865 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.235808305 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.905737226 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.902358884 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893003694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.892954903 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.917592083 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.894041806 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.898148451 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.986541074 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.897054059 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.962126529 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.278862758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.272932512 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.896096794 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.894009052 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.893981933 seconds)
  done (took 186.039197091 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.964920504 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.971364096 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.965259836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.900235439 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.948127449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.969404794 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.900665081 seconds)
  done (took 15.448212906 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.9034623 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896373272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.94646739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947053018 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.897084955 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.048067244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896793277 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.908811257 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.894484878 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.952179248 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898034797 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897035153 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.904286077 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.894490652 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.946528061 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.909886139 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.012761466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.899046399 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.897541669 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.055216116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89529429 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.904878582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.952148825 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.910680361 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.898626616 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.905230282 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.48318254 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897678996 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894954361 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.898123239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895193633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.938828457 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898507908 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.898216041 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895587928 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.019052977 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.898487557 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.896481832 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.898338904 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.898673492 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.898265828 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89902774 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.899258515 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.895101368 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.898701435 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.922959598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.899379137 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.89791414 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.897935808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898540419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.949728897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899934606 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.896370827 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.896210156 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.956767238 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.90645028 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90030075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.897139185 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898643329 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896955393 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.057520073 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948337357 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.900060244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948142144 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899677802 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.89945052 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.899233688 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.899255288 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955364015 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899469718 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949129162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.8979233 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060852345 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.925631269 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.901714957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.903733613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.904364498 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901782577 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.899270067 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.908163354 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.897945938 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.903287422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.908043224 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897922655 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897531729 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.421116438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.013986928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.897645954 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.915182069 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.909127485 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.898507906 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.955327964 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.900747396 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.899922799 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.95430628 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017591328 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.958163656 seconds)
  done (took 209.126852772 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.907488303 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.911432489 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.904241931 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.918611112 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.902542811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.902433013 seconds)
  done (took 13.279663913 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.904835222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.903074235 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.901604378 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.901406001 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.902234051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.902175909 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.902901871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903671625 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905163796 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902018828 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.903721302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.90409729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.903724199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.902855362 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.90386098 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.902350017 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.903699966 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.900156717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.902159092 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903087717 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.04657249 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.903610146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903510771 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90486178 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907200323 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.904185683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912590914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.903425194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.903573562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.912399451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.905195581 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904472963 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.906356714 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.91079627 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.909299858 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.906792985 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907432056 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.90731365 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903471576 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.906403732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906864538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.906287555 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.904600327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.908336086 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.907902996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.910465199 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.91120836 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914123308 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.906384655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.908587441 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908055607 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.904963455 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.907471064 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.908928704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.910865417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911886322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.911503693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907123194 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.906301418 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.908181991 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.906920754 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.907177436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.908635383 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.909896563 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.914217673 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.90852389 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.907859476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909779695 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908257471 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.906837868 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909969589 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.904149038 seconds)
  done (took 140.237042037 seconds)
done (took 565.970966596 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.136409692 seconds)
  done (took 8.97511884 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.923312111 seconds)
  done (took 8.845276527 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.473993403 seconds)
  done (took 10.312502586 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.907339809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.928629256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.915494071 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.908833034 seconds)
  done (took 29.507779496 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.238241411 seconds)
  done (took 9.077141961 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.912886655 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.90014307 seconds)
  done (took 15.7145039 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.992921386 seconds)
  done (took 8.832570556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.001319548 seconds)
  done (took 8.848286067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.915008748 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.92142657 seconds)
  done (took 15.687756536 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.886008458 seconds)
  done (took 8.72632237 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.536028069 seconds)
  done (took 11.385786463 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.908099624 seconds)
  done (took 8.759301277 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.980564414 seconds)
  done (took 8.819687091 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.973194361 seconds)
  done (took 9.812343191 seconds)
done (took 165.142923944 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.904506766 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.901059446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.90164708 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.90156226 seconds)
  done (took 29.448097666 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.942579371 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.941647056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.942743518 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.951947014 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.944886838 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.942035708 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.934181619 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.934672928 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.952678448 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.945760145 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.944360875 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.94436403 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.943132019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.934559069 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.944487009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.944760012 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.953899412 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.944653192 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.935123742 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.946296907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.910066616 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.952993743 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.945829353 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.910049495 seconds)
  done (took 48.427580684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107086078 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.9811944 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.063828973 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.96221539 seconds)
  done (took 9.954474449 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.960828951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.96208496 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.974104722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.013223773 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.038929314 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.971404133 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.935860017 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.931198907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.918302475 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.963538957 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.038126753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.978530889 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.048231345 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.909435121 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.109441594 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909923419 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.909803124 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.961680058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.014249167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.031868418 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.910071225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.962619205 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.969863945 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.979653904 seconds)
  done (took 49.244259597 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.909004748 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.918671224 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.916511693 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.909663856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.909530945 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.911786236 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.916241872 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.911725126 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.931243057 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.910497646 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.908745878 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.909936046 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.909230584 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.91080638 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.909578814 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.922386708 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.924349855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.911315475 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.913577852 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.916980486 seconds)
  done (took 40.124521692 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.905734339 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.759529225 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.257574817 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.161765746 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.90462915 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.905339431 seconds)
  done (took 31.737887941 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.924363171 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.975852828 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.919263382 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.968509541 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.048917237 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.919345217 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912682792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.980133824 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.022711868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984130882 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.930597902 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.937402465 seconds)
  done (took 25.36625643 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.908453289 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.911207341 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.912555864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.927048831 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.923669205 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.920911791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.920034905 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.90798213 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.927566482 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.930915089 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.920655431 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.924383222 seconds)
  done (took 44.882560735 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995530422 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.950439808 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921982067 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584571577 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285203649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118276038 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.513474154 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244484892 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.911286339 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181334839 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878894979 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013302479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16359623 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365243196 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93904239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.369189845 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194203854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110636315 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932997607 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536294099 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966552507 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063141875 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.64628114 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959472667 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120337932 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.037381783 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.168941776 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908010089 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040455547 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942716952 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919268969 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908902572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182905299 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282581004 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013851543 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919393003 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.529216905 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.620909823 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.974665619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.546819762 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.549129816 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.017835808 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919789766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909788459 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843373337 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025571205 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285553751 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.91430483 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.621727308 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910379829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92059973 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004878498 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.913843305 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.73062119 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822971488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911494423 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.906616477 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917420378 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479521818 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970383842 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064181984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.882103376 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.003301502 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591665022 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28384328 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.050702365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.91429422 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914315089 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845170058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.540090316 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96144298 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240247498 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.932702591 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560945502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201679383 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.929931855 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857126645 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173833556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406677842 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.882588701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139826504 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911833205 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848097032 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.8565138 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846696642 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16439022 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945829252 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.665778223 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949794032 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240251692 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923606731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930153874 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935301528 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13609999 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.796423106 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913431813 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.654324284 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065110547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933908709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244300045 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848092262 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91689557 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170632964 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.124453385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.956917157 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.403820583 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05850614 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.436897182 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.964003872 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.033295484 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958596506 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.175135435 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96323648 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972219862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963088995 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913426663 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200019877 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470484647 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.050011456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.904310744 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03886489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.233612181 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939265909 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996599386 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923359272 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914486309 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660021724 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460910434 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.914788182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.917072225 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960006223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960457414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.915620355 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865501183 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.539168763 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903777831 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.931479093 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13964633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446960619 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224352156 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84908089 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243611261 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007482771 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.137016783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552945009 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.980218401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175438953 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96540427 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000192273 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961702393 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936064777 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015520424 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939112212 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.031099757 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207034998 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.92117181 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.920379324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645208719 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.949375711 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922788861 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.922297767 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670638854 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179885021 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934461536 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925602384 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.805510307 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.93034177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981190479 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922248384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927603798 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.460365325 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633986159 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.923323735 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.504424558 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14525664 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9286606 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.544326394 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029723494 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.999102904 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180394746 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969225065 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.852253737 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.628940371 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.611142096 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919116428 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853627933 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918961571 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927490268 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929303124 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.115195203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1823378 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955307782 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.547164488 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.955350678 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929399687 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.924215722 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918584882 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.429562789 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9892387 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077686937 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961884769 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06385907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.933790011 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852839486 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923251994 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9237182 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.918372906 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919961438 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952492126 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.556646012 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290226586 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179901379 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529345609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932920929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.5954819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.972392005 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.921040139 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677304772 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064420712 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.958548592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956111738 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.930962454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.625808034 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.62487063 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.486916984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222676972 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207414004 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337552354 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.095822135 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948567255 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257660152 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853856971 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477704325 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978362471 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25938828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865654532 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004901337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.558670664 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253854132 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938407043 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147773443 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293955916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.599438356 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049202188 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132437723 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956135097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.042488768 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880401515 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.207288621 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063682949 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.545838739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112559107 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254898005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.550280358 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03155386 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.922335786 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.588518432 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001287368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.638897902 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094956738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.082008704 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.81000349 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377113626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931792604 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147664069 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265395368 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.050525094 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.041634003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857958336 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933515274 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.934384581 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.924045876 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.921172468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.788181438 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.179619714 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934204176 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858043645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008814554 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20672269 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.820220561 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.930208921 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923700567 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208349673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430676164 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08764702 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.99824522 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447342681 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931135678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858659671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858228456 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.616700021 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930169823 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898901309 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123056036 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.021145166 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837048097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97930806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002588988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179952449 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.937703745 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183617594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191148776 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.622469217 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949765516 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.024157043 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.556380929 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.020914949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925933536 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160684893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678787669 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152482481 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.957577632 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.870132022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925821944 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138873023 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925218906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778678744 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13842395 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.647392629 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.933893717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236781718 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99401261 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.786281009 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956945768 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.018985185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937481798 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004386512 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936416705 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.937546149 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936761777 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974241811 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796608577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.036493115 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.940274178 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020443166 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996075312 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.450404281 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.932884054 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189735352 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26570308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238396357 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977342073 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927618717 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935584466 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862265154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076612542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152132374 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200943584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058056531 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.045166455 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951915678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545923282 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.097244496 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169820094 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202699666 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.821815617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406666227 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965898377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.928573139 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939098041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.138776658 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130923816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216697522 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063638853 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98166604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288796639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202848444 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.929733862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92987028 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516628766 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.938880232 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604713731 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.964778127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785801701 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187758421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939344794 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306502948 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95065277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.084417294 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.702529389 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613597206 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215590436 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.909099926 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980459248 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191742367 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291960623 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234195297 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997185448 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940548813 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.040122087 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077578512 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.803479564 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930378163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930797413 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978381494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.640099031 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940405639 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198213053 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232148375 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.928129369 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.801457479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957505488 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.940557384 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15518925 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188657246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179529455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94110285 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.938208584 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.746246221 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196383997 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980558957 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865745932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.934883812 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027488632 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178412415 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950614872 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.384024104 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.642443056 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196665946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.928285284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953569712 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069680656 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282762033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238641408 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.462915353 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137720779 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.514752951 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47907572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231852119 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.937176444 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.06363408 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234525165 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.936285611 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993664535 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970030251 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.190994993 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236232675 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.943301455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582132515 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.89930299 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273419235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492270385 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87088364 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94143841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.993772356 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933550489 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.061506743 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944715565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.806950787 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063055829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.710270386 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208199525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.938722475 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.92359146 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.636671265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.184751339 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965974209 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076358082 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941025961 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.608265126 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.283861999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190110493 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.994307645 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.941181282 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.938728403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934644009 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920754862 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129859932 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.13086375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201934973 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.018480577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.970259152 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938136422 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.15074449 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145589948 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.786536236 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05933088 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992571498 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975663379 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.842085404 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436098788 seconds)
  done (took 1694.682926843 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942885198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.954881928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.968094298 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.969752437 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988602966 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.031304461 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.971790818 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.03746657 seconds)
  done (took 57.737231078 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.935752317 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.169576863 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945796993 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.945501844 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946130894 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.937440915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.102616858 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.945837211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.946145168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.947355879 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.938063465 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.937031942 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.246755371 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.958386616 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.936543551 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.927113829 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.945830261 seconds)
  done (took 75.602581659 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.936662515 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.988882272 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958991679 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.949494193 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.996836615 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948622824 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.802210109 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.948318416 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.93954041 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.074381786 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.5713435 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.944933058 seconds)
  done (took 87.934816036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.946598289 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.944578495 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.943769688 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.944487252 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.943769442 seconds)
  done (took 11.598668163 seconds)
done (took 2208.606600505 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.326148182 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.148514646 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.165334586 seconds)
  done (took 6.188744018 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.08738434 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.135435849 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255816357 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.280049437 seconds)
  done (took 10.636071834 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.226986069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.324180679 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.150566143 seconds)
  done (took 8.576860773 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.340338059 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.956307791 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.047727005 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.937680822 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.941878868 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.9411637 seconds)
  done (took 22.697094288 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.942871705 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.945638085 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.942273679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.945318727 seconds)
  done (took 9.65134154 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924271344 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.686794494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.925117496 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.937659482 seconds)
  done (took 21.350286732 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691315668 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.702951206 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.686377946 seconds)
  done (took 9.956788961 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.507627569 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.85601932 seconds)
  done (took 9.23968695 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.212271466 seconds)
  done (took 4.088577301 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.07440858 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.207254452 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.403603571 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.4240467 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.48290389 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.803491147 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.249910604 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.18877726 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.332419415 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.368891979 seconds)
  done (took 25.412426095 seconds)
done (took 143.343362964 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.32965831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.189265891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.148770034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.324520003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167607254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.153162331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.138603419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.30709691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.798788598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.791975081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.284803115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.171400285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.305218528 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.184489702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.303567721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.314185661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.167260279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.349974125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.980814965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.218353559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.147176556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.923920957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124378459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.940361853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.170440221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.104879102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.516734469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.316786352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.134745065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.526608983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.107872214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.367312691 seconds)
  done (took 173.889172173 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.707591074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.943401303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944365472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947051857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.528004054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.943966867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94449319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944933288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.137919403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.109983394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944274451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.516687685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.94469299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944419253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943963875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944382257 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.242946707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.745946221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944788153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944502258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948944091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.446790446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.951122416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.484468506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.259717133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958124422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9451534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961582846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.952812939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955390864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95898616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944637862 seconds)
  done (took 210.91693572 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945361358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946498216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944248203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946425938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.950495735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9540956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94808947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945793714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.719764433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.734081225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.978605173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.953444243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956217387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94656516 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959112593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945408415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.957958298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.958364126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.954365809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957943152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.960373194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.770353365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974183516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.769596642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.973799181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956102061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94719761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.954764312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956389704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.956876218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955921695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947618828 seconds)
  done (took 223.624969022 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.141189072 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.95190696 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952701585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.884475703 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.9530493 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951909078 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.94871472 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142206859 seconds)
  done (took 19.8225622 seconds)
done (took 630.141723776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.37861456 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222903025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.12213328 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.976498426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205331515 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.005457905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.973017896 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.034451298 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.69150566 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.036799645 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648754875 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.986140318 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745485165 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.990674149 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.098446746 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.027468497 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.504380777 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595203012 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.146436807 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.054406509 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135528697 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.902882507 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.041892177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.725573426 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.766717663 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.946443317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.183893256 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.512306846 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.979725852 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.133833976 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.686132839 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.373175453 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.982883884 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.97044538 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.022700014 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006066226 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.35861224 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.98195562 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095713916 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.711991206 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.030749514 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576239497 seconds)
  done (took 106.454551919 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.944627941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.94601833 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.942442426 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.943424938 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943885776 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.944780985 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.942304855 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.941795316 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.945310952 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.942070412 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.942323902 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.945153438 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.942465192 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944218687 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.943096856 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.944247568 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.944433676 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.945689675 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.943605407 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.943441525 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.944221227 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.943374524 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.944731979 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.943223096 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.944516853 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.945996465 seconds)
  done (took 52.436458704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.956430808 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.099396166 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174243457 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.973921697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.95817015 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.960360023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.975902054 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.960736512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.959375015 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.959739821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.047872111 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.959990071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.974010959 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177870896 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.969105459 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.955443684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.955157452 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.956866642 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10497159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970671008 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.976371011 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.959179323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.97452001 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.968773985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.958832865 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.956439288 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.959195791 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.420786751 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.962453301 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.046002207 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.006979269 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.980803674 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.391879527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183729045 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.007731268 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.967412429 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.956985755 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.050979893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.962206313 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956724821 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.974610461 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.961669914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175580183 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457161669 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.967856231 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.957960771 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.431865613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.057368153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.998640083 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968585958 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.179888372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.972481006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.957975839 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.959408305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994819139 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967978835 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.957972816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.314297782 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.967943286 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.975308443 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.961053803 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.95955558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.113000529 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.966323903 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102500541 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.966626678 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.966202287 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.959052131 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.176971004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972358985 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.463691945 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.969680965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.958841434 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.047762117 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.104867229 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.453872836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.969965463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.116406365 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.408517359 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.98111248 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965641318 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.413566843 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.985204798 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.967580539 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.960729592 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.961300658 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.9602871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.016492545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.975348065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.393938174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465897213 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.327764488 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.98558939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.975894728 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.961165299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.317334633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.965944938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.960209915 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.169475464 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.477900018 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.972548161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.967639639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.447951973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972975111 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.97974305 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.968762638 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.181221795 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.97316109 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.016738891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.960906916 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.967286881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.964437696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.980407204 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.969099418 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.96127984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.43693425 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.065025846 seconds)
  done (took 242.400449072 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958708951 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.957957744 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.956933228 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.970275395 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.954842223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.961459432 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.955297712 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.955580846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.962048734 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.955873322 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955981442 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.959938435 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.957590661 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.958668806 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.440669503 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968774863 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.574945841 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.963769114 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.963492499 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.964105593 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.642573469 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970169316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.961667758 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.962227353 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.964007058 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.962036833 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.969429328 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.009432643 seconds)
  done (took 170.632424433 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.968344835 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.152869957 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.989598533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.005308643 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.981028186 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.967449641 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.993459836 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.993339875 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.975648175 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.966951879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.966839973 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.030638585 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.980550422 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101737797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001228873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.000193203 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.081528534 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.976403387 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.967511712 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966562629 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.997988209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.96839255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.030721655 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097355979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.990707517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.086262938 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.979256768 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.97036083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.969827365 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08760289 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.988244802 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030631011 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.002944104 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.993076158 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091744688 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.092534472 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.078217866 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.001232623 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.979094512 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.968806838 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.967752974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.958716303 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088751091 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.993350198 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.971694967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.078064501 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994090185 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.971591143 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.978926964 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.96944853 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.984454967 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.989149151 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038316794 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109211699 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.008772793 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.000333777 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.996687981 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.273109561 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.987480705 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.075055484 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.96947645 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089976525 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.998798217 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.961331974 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.972441548 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977624696 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.001355792 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008742002 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.08491344 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.98441317 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.076511014 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010082907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.983206696 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.97278277 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.974720344 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.091507483 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.100150411 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.009562607 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.015963912 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.010199807 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.970295009 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.975028439 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963881697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.993105463 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.981578276 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091607586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.099574571 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.983884228 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.976096393 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.975174475 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.976571575 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.001386101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.100235534 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.01598165 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074445001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.045039856 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.054402918 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.989644101 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987646125 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.978559024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.039612042 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.993454193 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.985632085 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.321478526 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.0520481 seconds)
  done (took 213.729571049 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.0728218 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465267805 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032313404 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.032027316 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.252271504 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.40210236 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.760315867 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.028530557 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.025411859 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.053534043 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.186825619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.083081707 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.040876835 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.016583763 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.419627009 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.014508099 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.022532388 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.04767305 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.027369628 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.562432632 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.34158297 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.145201274 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.02554793 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.16876935 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.010228718 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.329701856 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.345434165 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.406617577 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.062249535 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.368418962 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.368645556 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.709342647 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.234987441 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.270439346 seconds)
  done (took 78.245669585 seconds)
done (took 865.782228402 seconds)
SAVING RESULT...
DONE!
