cset: moving following pidspec: 31635
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.414177639 seconds)
loading group "string"... done (took 0.611139331 seconds)
loading group "linalg"... done (took 7.830728874 seconds)
loading group "parallel"... done (took 0.166184378 seconds)
loading group "find"... done (took 1.25460547 seconds)
loading group "tuple"... done (took 1.870977406 seconds)
loading group "dates"... done (took 1.320910018 seconds)
loading group "micro"... done (took 0.234212131 seconds)
loading group "io"... done (took 0.982516123 seconds)
loading group "scalar"... done (took 39.188225516 seconds)
loading group "sparse"... done (took 12.254263675 seconds)
loading group "broadcast"... done (took 0.974093729 seconds)
loading group "union"... done (took 12.916107266 seconds)
loading group "simd"... done (took 4.75204667 seconds)
loading group "random"... done (took 9.441263953 seconds)
loading group "problem"... done (took 1.734720539 seconds)
loading group "array"... done (took 21.647754775 seconds)
loading group "misc"... done (took 1.789375743 seconds)
loading group "sort"... done (took 3.432052252 seconds)
loading group "collection"... done (took 18.093252569 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562905828 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133394438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135233631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128492576 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155475722 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124905317 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135369215 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095341296 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.914687872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158796612 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125650205 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434484313 seconds)
done (took 5.621925304 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182893969 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090126912 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091345495 seconds)
  done (took 1.340238021 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073641548 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133981515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.077483773 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074960912 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.076696632 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075289071 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074325826 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074906339 seconds)
  done (took 1.747683581 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080786658 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077775297 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073902769 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075905272 seconds)
  done (took 1.468982107 seconds)
done (took 5.984549112 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809256135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219445075 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196179693 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420266263 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137599387 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183327155 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652391183 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325517538 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196191261 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083882211 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117245728 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352918835 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131765886 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645656808 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085016911 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098815523 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144684581 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447862206 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075061133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090186927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096867608 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13676169 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.096354263 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08124362 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152144457 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075089017 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143513272 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087957886 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074698373 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225822981 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180080633 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665231229 seconds)
  done (took 10.627352956 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107559305 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108305134 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076018483 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132981121 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107586654 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077457884 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082457339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075327177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098306269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.142765057 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100133269 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111349569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073209898 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076176574 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092765804 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213612915 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089979743 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089429455 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078278228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087000629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116422156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08597664 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087635547 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08774665 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136964003 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187654599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105254458 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105034213 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073675988 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09128023 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122089832 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135332585 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073484511 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073657138 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13499066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101178275 seconds)
  done (took 4.937386878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026288419 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150565697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09754484 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142077577 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072478967 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115184676 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073194608 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090735313 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219088642 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.364531843 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.631375576 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119072535 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121102887 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112124252 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075440158 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076030532 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074347364 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542802276 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103828964 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113794604 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08764967 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076817673 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075789594 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361830697 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075360755 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071652226 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075029372 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064350147 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071546031 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129387095 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0752291 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981143527 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170305756 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074120188 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107832559 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.306094219 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099201155 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150585492 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076841643 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072890398 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161885303 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077910035 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074278635 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09231648 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111231445 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124836446 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074035347 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073439216 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172160111 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072591132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086980056 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.100810461 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078313531 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159609639 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08473106 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073038661 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.073565671 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284547031 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096535404 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077935832 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073288205 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182355801 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130369267 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07556515 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074378237 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075754057 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076396661 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36726636 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073581205 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.862785417 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078425044 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084038899 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077516896 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077257757 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079906939 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079943614 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096118906 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073797668 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081771516 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074145439 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073831943 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075596907 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089509895 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.400805703 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073670006 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074863885 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.174317538 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098849127 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103829188 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075962634 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073629788 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107433288 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075429306 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074505506 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119888184 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07481805 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089992447 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078393435 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119970453 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074097328 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090897861 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075210996 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103528923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077058695 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110427293 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087476443 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076370205 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.451347771 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073384518 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073566635 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075346016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073135122 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075895581 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073995808 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08633864 seconds)
  done (took 22.512320329 seconds)
done (took 40.264398196 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262689588 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086259467 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080904999 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080437363 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081184811 seconds)
  done (took 1.846950786 seconds)
done (took 3.085657193 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133001883 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10802746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071705389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105267453 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072255968 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109760221 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109431784 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085237678 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108578796 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072138896 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105602194 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072236392 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072030624 seconds)
  done (took 2.478858054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091624962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092580205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079656427 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093091093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072457882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091313759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090478831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097133782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090106503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080415406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07158572 seconds)
  done (took 2.177927063 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09170834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093128992 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077624065 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091266714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071282017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090678966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092662418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095012731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090477838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082178223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072066902 seconds)
  done (took 2.170777326 seconds)
done (took 8.052334776 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085927468 seconds)
  done (took 1.300953979 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.580078569 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.926800475 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090120585 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118796409 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201242578 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124111014 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267399677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.093205507 seconds)
  done (took 8.797209606 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11184996 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079475152 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077063673 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078372276 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079121113 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075745204 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076026365 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078763096 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078486996 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077315666 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077274479 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080212309 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079247596 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077624938 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079755726 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075924125 seconds)
  done (took 2.571452835 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100560705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.100209588 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081659761 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082611069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079979926 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079397149 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081709771 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081339937 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07789275 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079756043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082493966 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080664899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079195133 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071747359 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081189742 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082293334 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0779631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081472402 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08177422 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082733255 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082851507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071708858 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078674493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081122111 seconds)
  done (took 3.284056502 seconds)
done (took 17.177388225 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113531531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075913165 seconds)
  done (took 1.412488117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088677018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089924648 seconds)
  done (took 1.409202462 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089617877 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073353648 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096911201 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084767718 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073068749 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07419636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094166771 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073665263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073494664 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073456005 seconds)
  done (took 2.037842292 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075952326 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084216143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077186411 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088537484 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080551179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071206691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079479159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075375436 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084075988 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070433689 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078631291 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090203434 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078323691 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092009828 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079707055 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075494654 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077884414 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07457221 seconds)
  done (took 2.666734063 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072802043 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074216531 seconds)
  done (took 1.381802997 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073233442 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071420647 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074008136 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073480191 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070482063 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06986377 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070668143 seconds)
  done (took 1.734765243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403086803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127792748 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339810945 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082492729 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.091516095 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272740383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073603852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079098057 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078981576 seconds)
  done (took 2.824041738 seconds)
done (took 14.705432275 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08756929 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094440679 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.105043472 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38655064 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099305578 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074039456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121115187 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194265129 seconds)
done (took 2.408952569 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221134305 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.704480038 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.449870706 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220732397 seconds)
  done (took 2.613393472 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360547896 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096933204 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066893804 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075043269 seconds)
  done (took 1.846885251 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074361536 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077279119 seconds)
  done (took 1.397719746 seconds)
done (took 7.324750313 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074117463 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094763729 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073837193 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071471227 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074519649 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.070879164 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071035611 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071666824 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07178899 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073533639 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073723328 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073736005 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075152932 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073490353 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071510036 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071098802 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074398403 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073989667 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071385863 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180590142 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070837485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073408341 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071412359 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071532735 seconds)
  done (took 3.153149686 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091831818 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07379503 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079557184 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.079154686 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077959412 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078732155 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079046618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073555438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080052229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076099707 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077707533 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077340239 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075555959 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077584279 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076146307 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077091594 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079327292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073784649 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076133249 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077357421 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078612566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074029644 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077264538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079341705 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07670855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077058251 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07651251 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073690913 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079170115 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076640023 seconds)
  done (took 3.581083177 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078283934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071552047 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07165507 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07789132 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071176261 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071480611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071127309 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071661679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072279162 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07139866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072734866 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070766592 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071667212 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071938268 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.072120148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075345625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087646775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071837588 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070959049 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071683126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074687682 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073019469 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.073879504 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071278041 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071350321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070683572 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072108526 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071777104 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071594959 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07098286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07452058 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074985728 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071099884 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078085408 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075541057 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070892684 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075064316 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070672164 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072341307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07104563 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070582231 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071116797 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071247665 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078421124 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070735493 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072699251 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071390291 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071932181 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071716806 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073837152 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070740155 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071513162 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073359822 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072502756 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.076389824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070756722 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071301302 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070587109 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072815345 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071303002 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070653402 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071411469 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073771248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071916084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086957706 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078069834 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071331679 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072765081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072159127 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073855276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073275071 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085815861 seconds)
  done (took 6.52258451 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095812869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095135042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074576794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072430965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069507586 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071343544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078296717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072527385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072931579 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090045147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071374015 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07299343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072997992 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075548244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071743833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073080448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080623968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069372154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072100713 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074967275 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071401939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077442333 seconds)
  done (took 2.940954939 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161067124 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077411437 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114022748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082402706 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077583675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082387267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077341642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077493637 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077117616 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074609605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074946347 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077458852 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07712609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074838789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07529573 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074882303 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07769654 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07544918 seconds)
  done (took 2.766933054 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083742871 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073895931 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094777184 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074328594 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073276061 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076148316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077556002 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081810762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076356863 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073170459 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.082269562 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076511455 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075778682 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073357605 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076249179 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073518713 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075642435 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073644566 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081466469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077497075 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077399002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081251877 seconds)
  done (took 2.969627775 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085989682 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076079922 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088702324 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075245454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06864676 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071492519 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077185977 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073936386 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077796459 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075052333 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072869384 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071944663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075983599 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073218577 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076380545 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073893057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075939717 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073164134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075639072 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069269685 seconds)
  done (took 2.767602599 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093405246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07578219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075783071 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082955352 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075331475 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075347358 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083058219 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075376681 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075388556 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096955029 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07604854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076398457 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081693331 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079064518 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077152745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081810859 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081571638 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082044748 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075508585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076535035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096623496 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075823221 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08264445 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07540869 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075259749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075703367 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075545872 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080151159 seconds)
  done (took 3.495041963 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074451943 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073506607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071610109 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071545011 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070798956 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071933273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071035679 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071790114 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073453249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070936455 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074350439 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073749117 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073412685 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073520918 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074087044 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073657839 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073622096 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071189941 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071126166 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070996653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073619978 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07345733 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073562954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071160457 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070598186 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074090423 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07152594 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071114102 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073790026 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070985231 seconds)
  done (took 3.438687672 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082172309 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080332942 seconds)
  done (took 1.427278908 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070050624 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087143851 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070763758 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078641736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076775213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074346834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081159708 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076676286 seconds)
  done (took 1.876599173 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089716571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085219579 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074589536 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086183516 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.085262987 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.092011847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143848067 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074281406 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080416144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071774661 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087380997 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073630462 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08058345 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074286067 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080600986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080160561 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071558286 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079375818 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076070485 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07206321 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07524117 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08289417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077215018 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.070078783 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075672703 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097418531 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08507656 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073829569 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077233734 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081664915 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079881821 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068133267 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074272042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074395016 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.072383466 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084149294 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088436924 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07706507 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082683378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074709791 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083364508 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07162775 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.081170317 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08110879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084801677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074338382 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0743692 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068706093 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072150932 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077108228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069048838 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074611417 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068741934 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081247633 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078236964 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084054272 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072747228 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075465075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077202007 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077127879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081349748 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076103944 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078105498 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073833894 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083962951 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079510591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083068658 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068769959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067869611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072523209 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083524135 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098098462 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080423079 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074610878 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074538891 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071581772 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076887181 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074881894 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078796101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08025725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073316477 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078759217 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081263709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074600281 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076276626 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080680542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072112396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076238644 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071584847 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089669722 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0726833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.072458522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071932103 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086580564 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077736495 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073365845 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072269311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081615272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.068393411 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07392768 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073904948 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074304858 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083277288 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078817952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077858716 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082051643 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081672917 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073991967 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075900233 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.0697274 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200154602 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074629317 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083604689 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070453565 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07796539 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076334565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074652314 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082762388 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073511182 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074072062 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082530288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080063748 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071981511 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071331315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077858739 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074034836 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07747171 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082397005 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07271737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.070026388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069544281 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077763181 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07422486 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078130946 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079173799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077667695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068516582 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071870732 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079558041 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082859064 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074612508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075241745 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081047692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075171565 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073758384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08115535 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076748889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073842734 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080347477 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07498744 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068965407 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075762204 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076186454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073220752 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077787994 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077018158 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07689015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07506075 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07304382 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08061147 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07464966 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074035969 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07468467 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072576782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08524378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075641702 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069455345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071671771 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081943347 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072729044 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073225418 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.074397444 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076442991 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074343733 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071262374 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072926835 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075813967 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08273717 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076627293 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074670017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079129252 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086202943 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073922533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076522201 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073571852 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074944058 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075115806 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083008525 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08029331 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078252581 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076620368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070628785 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078873908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0811951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073503732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.072035785 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07356412 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077387113 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079557653 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077219068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074251618 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072830865 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074405892 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076291028 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076281897 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073647838 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073532604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078710605 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071319572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079479743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074003335 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083807103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077744202 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06838052 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075533147 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072059362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079692231 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.069185151 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071507466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072847849 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.074135023 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072253734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07575948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066839922 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.209171702 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08311483 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076423121 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074539321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074350768 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081783196 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077138101 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078445016 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07995856 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081176304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085024333 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074219205 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078654545 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084267512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.075072521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06849788 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082862058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072939594 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.074060211 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073422615 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072418521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077587618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081480904 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081931828 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067664611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077414594 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072434064 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074505051 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069598576 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079170454 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077808986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075575614 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081011353 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075675013 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074245799 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078093039 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.074005645 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.075065546 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07528186 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076833527 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.075789722 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076173045 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073465297 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078603733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07398638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072562278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076108954 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074745154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075101868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079133295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073851117 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074046026 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076277775 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073989975 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074939324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074968068 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073238412 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077790561 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075766058 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074713689 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.077304261 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068939688 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081643424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073438623 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08233962 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074790981 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071146289 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079769337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07628923 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078652818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074792748 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074838945 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.076040298 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07374611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076763293 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081470896 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072396287 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08784884 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081463167 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075424202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076787428 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074549621 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075490389 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07372516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074715432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074307065 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074526925 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073903728 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078411146 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076765201 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074083594 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075725104 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074556686 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074893962 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07478582 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068006075 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073365591 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073714779 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073717464 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083242861 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074093697 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07388614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073502892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074979 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073333052 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.071191256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080513599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081719987 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073530348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080074416 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072923647 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075062536 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083893228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067195611 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0715527 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070815248 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.20351037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083245014 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075559863 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085098938 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075621818 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07479114 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071935643 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075087528 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07346396 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069093039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07187978 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079234956 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073716911 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073952173 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07475957 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.078016508 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075260211 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084330425 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073854347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075553106 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074286035 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07085019 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074009244 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07389874 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077351696 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074860003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072616454 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072005519 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073507595 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075307303 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076304761 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074272098 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075529564 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081980231 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073797171 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077414104 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076096687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068771534 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076967757 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073632162 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073562701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07305407 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077650541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077767942 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074489376 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083225863 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073429059 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077116311 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074782215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07155723 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07350252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073138007 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073402397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073743564 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075186457 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081890163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07216316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076933924 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074463664 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074897897 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080548866 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075855173 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077236229 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07964064 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075537741 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076211926 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081911332 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078761572 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077311347 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074356428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075792178 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080066982 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07419302 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080733105 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074303634 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.075319719 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075850735 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072135776 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073424319 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073797168 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073986709 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080356647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075051463 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073608382 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073569161 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072100015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074913097 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075994471 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081476457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07599301 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076945009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069700525 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071264541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073984365 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.071753364 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075286649 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076118792 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080135539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075790077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074194315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073329741 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083289258 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079616231 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077392748 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071994671 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.078061228 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.074093192 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075801254 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074888858 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074257633 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074524898 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077680062 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074788332 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072768249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080075877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07681794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074144656 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.206516126 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077473732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.077169149 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070290177 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075942684 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076791518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079423047 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077253322 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07518363 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085296043 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.071754304 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074533715 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077174937 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073085361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078637108 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068890672 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075909542 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07485454 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074908283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068748916 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073740283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0722455 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077641208 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074489378 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069538868 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084279739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083248787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.078425919 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072688904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072643824 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069730486 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069235888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073943083 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075044219 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075885106 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085126044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073501671 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073339611 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069933588 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074344279 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077185355 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07752701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071111882 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068804013 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073511986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077490648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080164029 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073288166 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073935086 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077894444 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076395493 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072128327 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076949789 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071060536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077688124 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086088362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074399396 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075425557 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080154989 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081807665 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074030223 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069111147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074198483 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077881926 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074781423 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074564986 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07515125 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088521713 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076873523 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073789751 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072930408 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076763061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073830778 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081921108 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074847581 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074978033 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078934411 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.077797164 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08236297 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077757569 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081529764 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077402106 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076966001 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073679587 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074410256 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071823651 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073583494 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074689178 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074120105 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077659183 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081171602 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073547015 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084176731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083172866 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075310141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070460405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073216392 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073783242 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06920439 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074488703 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072102943 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.07288823 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072042334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.073210655 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074995854 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0810663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074934086 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074144639 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073441206 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06880799 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076294218 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076569741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075166504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070509407 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07341603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073466463 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077414817 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.208250918 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073604287 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076758337 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076354372 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076396242 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070391122 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082390856 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07449792 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076613611 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074009298 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074718352 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074708662 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078731964 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078366903 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076605931 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076702628 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078678736 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076320644 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071427164 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07164512 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079022852 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072464241 seconds)
  done (took 47.35026384 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107303399 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070858842 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069691785 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068899361 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079341521 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070971341 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069186434 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070295474 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07049848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071958287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068646193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069555152 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076804801 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083893885 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080371567 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074344903 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068867588 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070814405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069248979 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070614263 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077060671 seconds)
  done (took 2.897407339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080634278 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084686183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083144178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089107885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077775342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077527023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083402444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077243646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084974772 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079234777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08459278 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076889955 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079525573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079716415 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079811441 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07762634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08485099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078061859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077589353 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08298133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077275785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082527877 seconds)
  done (took 3.109494663 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074073306 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.074125573 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.076019968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.069132928 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073297814 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068621855 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076249436 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071524448 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076379715 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072866283 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07226122 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072628429 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075128884 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068533756 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073537994 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071451005 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115108711 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076532367 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073007409 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.075504326 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068878497 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075207427 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068476428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069083441 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073209048 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07703191 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074779103 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.0712943 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073579541 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073129892 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073644888 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071495881 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07477501 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074686951 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072136964 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072797477 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072975981 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073828082 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068253662 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071898479 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074075776 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071447092 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073884128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07431468 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.072220726 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070962583 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075352337 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073874892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068792715 seconds)
  done (took 4.945747466 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085974591 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117370592 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075047866 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097339844 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086891133 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078944685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076762444 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097684989 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070638612 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071160244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088259174 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085675552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072587586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077561253 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07712988 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072196845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074003147 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071865306 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075815331 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072568527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076624007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08071783 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086424395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08629068 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076691039 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071725982 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072015765 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07640298 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085379508 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076520594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077211574 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077701402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087731142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074572176 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071746358 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074866991 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08823291 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072660446 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075360946 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070569205 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074342601 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076915332 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080351858 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088495607 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072653191 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078995907 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072843208 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.07017105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084893199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075721808 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079419345 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086339459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076466017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073410077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076736071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088197559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072695321 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070780189 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07565836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084312078 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070857518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075936886 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085991972 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075249464 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079683979 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08693399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0787456 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07618622 seconds)
  done (took 6.84496683 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083651477 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104219392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090420609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090351851 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083349557 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083544221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083120863 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082903209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089671337 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086855875 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083305599 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122335778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079265104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085136775 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082804424 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08281284 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082744058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083062815 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083077726 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082671925 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083225484 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089090248 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083268105 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090095837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085959771 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078780575 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082550717 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082542309 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090134506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08278606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0867471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083281487 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082490174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09009272 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086254753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082117027 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073574878 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082365285 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082517346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083218847 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078572388 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089679107 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082562747 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078631343 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083464637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082742704 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08947305 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086909139 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084818895 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086698672 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082670311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089438452 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083045947 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082654086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08963797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0911989 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089154942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089386406 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082968412 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089654586 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089716702 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092103583 seconds)
  done (took 6.677385013 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089822638 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080881531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089331425 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068675176 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071681746 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079411387 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071366919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071869305 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081515441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082441856 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082899375 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079486941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081401943 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082944118 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079462583 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081390545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078560133 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078746667 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080957502 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078837177 seconds)
  done (took 2.948706905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081577277 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090748535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074462264 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078783368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076653908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078580364 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07659911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076549895 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07448916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076836894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08298866 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082799407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074606617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078273848 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082802108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078959015 seconds)
  done (took 2.61480851 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092200492 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080791974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087192502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07367816 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074321537 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069722083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072492925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069030057 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069600023 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085434878 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073529201 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083761593 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073246885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072127876 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070201005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078573039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069556534 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.07050597 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072531392 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08596898 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077041285 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071459922 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076569174 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073798082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.076686903 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078220154 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072447933 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07389785 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070258204 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073348601 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076851856 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077104633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070369428 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071490155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071845631 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069912671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072860239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073529591 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078280512 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073920881 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071331763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075701388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072847575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074605247 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069515612 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07340377 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069565261 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075355823 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070703452 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076003295 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073445753 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075619084 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074285649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080651514 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076030583 seconds)
  done (took 5.464269385 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086557611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076683743 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07070317 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071374985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076851467 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074702109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076874475 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074937242 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074667526 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07169222 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074651497 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077095886 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074613832 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076624886 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074806778 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076916082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069023477 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074776657 seconds)
  done (took 2.71557569 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078533543 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073502084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080895125 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073777592 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07330525 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06953887 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071877323 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071733027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073170554 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073352756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076127934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072007006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07615508 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072835736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073224885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075962072 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071804956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073511483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070057451 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075745135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07213849 seconds)
  done (took 2.980106095 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101177394 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090109724 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149669879 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08606974 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092840837 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078925328 seconds)
  done (took 1.955129709 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099544099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108123974 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073528742 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077194363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083032895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077211452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077543988 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077211857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085469381 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083426209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077383758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084922219 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084563121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083706253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083038836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083245382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077797465 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080049495 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074021404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090021827 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077838806 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08549946 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077716186 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076821111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077609439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083895457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085238261 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082315119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077520272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085169137 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082971744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077044439 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085096704 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082647064 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078559666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085602199 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078167789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089963642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08277517 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083830233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076404332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082583583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08504949 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081893276 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08660759 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077271728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081319352 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07767241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077460003 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091903708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083512674 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083797636 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082626879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08578843 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084987461 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091531157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082656974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083839928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082613808 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082968457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084137957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082605597 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083983008 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082474111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083127311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084192449 seconds)
  done (took 6.820644947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111766342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074233051 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07885798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083059887 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084270151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077096533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077707386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07789436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077611771 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074997339 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114811572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077774428 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084395007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084339879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077457057 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077535304 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077325668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084308748 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074885193 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09127716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077748002 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083886369 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083922087 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083763829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08278181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082528597 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077420709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077240474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077694239 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077144387 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08128388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07770812 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084245385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074224756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08405968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077699846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07775783 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081631624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077028913 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082516699 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084240447 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090067272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077210412 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077423005 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083056737 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077601874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076999292 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074385216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077604166 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074271725 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082369025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08256341 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082969407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084282235 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077443091 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077580231 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077573648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076994452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077881104 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083190571 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084200905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077663423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091889465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077543365 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077258519 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084233591 seconds)
  done (took 6.7279239 seconds)
done (took 140.242120312 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196313501 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176449689 seconds)
  done (took 1.725149267 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076774383 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10596963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084598337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136657773 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073745162 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107571531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106414517 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085764233 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074278909 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073634712 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074024432 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076310234 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13853908 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07372266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074273343 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075909847 seconds)
  done (took 2.803541379 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107102489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170137279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109923302 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072646615 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107564288 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080464991 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073001327 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082400543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078217717 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073271496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079670408 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078241056 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07279208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077910113 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081053171 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079439783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072443621 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080467249 seconds)
  done (took 2.942207413 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105344345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099289167 seconds)
  done (took 1.572392507 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159458212 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.14052801 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211421657 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354876586 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164476722 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158949062 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149361786 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148289725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119557728 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143892057 seconds)
  done (took 3.115331014 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10719401 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161427654 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278313477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125820719 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080166445 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100495594 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127624077 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087038057 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087444725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087095744 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087231217 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084531724 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10808558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080272214 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082315721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084333356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1111808 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080360666 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082275729 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083110255 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108271466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074239243 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080220494 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080758492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084288464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08478427 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07409536 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073533956 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083214027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082737957 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083836288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099528075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084838905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112215474 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079274336 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.113754219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084217779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081017632 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082799478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080674405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085181381 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08529987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080327831 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083955215 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073525112 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084635382 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073445433 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073650122 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08517453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074077269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084316829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083502091 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111986945 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074925578 seconds)
  done (took 6.400923859 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111932578 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113676966 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077592584 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1194494 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110087632 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076973098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111142535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103489557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111604379 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077284648 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075448382 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076872312 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086927908 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088322146 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121737589 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113943794 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079168338 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076137127 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114508063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113402557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075654586 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106560328 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101192257 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110882252 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075399686 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077103326 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075389972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078157941 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08345587 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084444084 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075825631 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086662983 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090454089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085114737 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075189409 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075237728 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075605897 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085552608 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085820036 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08571635 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083705787 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075030952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075720789 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076240949 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076179377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074711386 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08469363 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085718483 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08444863 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075856873 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076752844 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075333189 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077696924 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086115814 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083123798 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086401129 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086386499 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076060359 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075675828 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07858037 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086997222 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086110354 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085295786 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076714343 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086835014 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076445949 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087128631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090222022 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076215436 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077163716 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07568578 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075572169 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078994108 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083341419 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083798332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076930451 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07523532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075775002 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086128837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084233235 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075678603 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083195894 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0750451 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075970952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076551099 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076967659 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083220013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.086110781 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077181116 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075750649 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075287783 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075708059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073906128 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.08319694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084949369 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084839964 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083408455 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075357244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083312819 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.214339098 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078694025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087596222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076062648 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07822729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07807611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085162838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084989411 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087610958 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078635237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075730343 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084924742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087153409 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075996463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084150478 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086331169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084582469 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.076092961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088109345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076817439 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08563073 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07546034 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086773105 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075212242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086026537 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075468222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074703483 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076142277 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085581361 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077069338 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075298212 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0772416 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076446541 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086069879 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088605955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077524719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084421374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08480134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077137995 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084887024 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07564148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085577157 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075549744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077077697 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074682463 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087449889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076033308 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075741113 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075514813 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086468919 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075754668 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0859764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083315007 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07412723 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087325708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086494523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083688247 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086909128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076637321 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075635243 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076098781 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075257915 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08345213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085797691 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076454699 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075766957 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08402184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085693614 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075245548 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083959658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084094708 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08419766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07531591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075461736 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087134698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08678601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083811418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08423285 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085259509 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075519048 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084011368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085217721 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07580903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089546609 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075620728 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089005682 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084419348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083129593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084328765 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086013644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086220618 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085823583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088251512 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074467395 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075231018 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.084329303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07537092 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075082717 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083654292 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076142507 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075647708 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087477585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.209791299 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088803171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075824476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085987313 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075611913 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07817946 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090688374 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07684561 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077291611 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085325696 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075715174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083815141 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08763459 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084294984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076463505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077287382 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085894087 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085533352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078150181 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07618387 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078186389 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085430177 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.085521037 seconds)
  done (took 20.18626873 seconds)
done (took 40.124400666 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21086038 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156605186 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176945313 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121705401 seconds)
  done (took 2.132834832 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122668989 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106943111 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098900472 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072531828 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10548327 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072850899 seconds)
  done (took 1.980795127 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300903107 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207842047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186171487 seconds)
  done (took 2.09522905 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209617057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195471698 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453443259 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279510302 seconds)
  done (took 2.645336436 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149378894 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094167661 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07450377 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092063505 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137252106 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163069675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104629226 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129593382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087086252 seconds)
  done (took 2.483781924 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151479404 seconds)
done (took 12.89736774 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.23226143 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122933152 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.118128572 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.167791222 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.1005512 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.109981427 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1966376 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.085930078 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214343357 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082160668 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108999058 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254521274 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109632388 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081834781 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.194062847 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073052359 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106360646 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.19577095 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.248865042 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087756204 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.085308753 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07189378 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150074077 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.151246469 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239754693 seconds)
    (26/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.169075317 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083795581 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080656504 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228199624 seconds)
    (30/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129222169 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118003854 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.079931871 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079043066 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223841864 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.305461643 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.170649347 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072652623 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083739787 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138033859 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.170432723 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133526845 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099789094 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.21416342 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.164679119 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075014201 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097784223 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107459166 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159002896 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080542128 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.12375028 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080464286 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202468677 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.120368453 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072388316 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203445131 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097311743 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07481719 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181622916 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124854994 seconds)
    (60/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202569106 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109737614 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082961555 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081392957 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072789125 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133081663 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.16521914 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08030765 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08285337 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058960101 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080206922 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152877981 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.100359005 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.073968074 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082167805 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161586077 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 0.140433945 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059363213 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060071735 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078891885 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078629248 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.240608946 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134547873 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082679584 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09978399 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059197888 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07395676 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111262177 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08040588 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073325434 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.085731542 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073297952 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079862752 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074867657 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124114329 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1636555 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139513927 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081792197 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087179402 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071589081 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080089575 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086916717 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102506874 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083427745 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127852669 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082813949 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057500605 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081378683 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080349251 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096490302 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069026953 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.173685047 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109545099 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154374576 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100083461 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099962768 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.073876687 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080293454 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096693853 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106803869 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.146759875 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.082105786 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098243793 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203246694 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183043682 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099856881 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080653842 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147552062 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084717864 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.078973856 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080220149 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058935745 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073215628 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079235009 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059650042 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156227128 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058272096 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079576194 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090360748 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191270686 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072411977 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080284129 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073060066 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200772954 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086980362 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18234892 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070052225 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072734443 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058421674 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150634411 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081415434 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060091164 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072848142 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073233725 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104317051 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169026707 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095790052 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169015854 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182742898 seconds)
    (159/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133936666 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076797946 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195593343 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085825252 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060317358 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096537149 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084649577 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079084498 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189706535 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 0.150676829 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087948178 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.155180257 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058565406 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.059142281 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073269585 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194230376 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.073170146 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081113371 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074844449 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078535321 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057990282 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081144986 seconds)
    (181/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05873543 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079642264 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160119688 seconds)
    (184/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.230864474 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.060115018 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.117460006 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077322602 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083705542 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158088907 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073454696 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135723171 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108379436 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188847394 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.175983787 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073786403 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071740071 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.158131133 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070726875 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071224599 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058551204 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098718201 seconds)
    (202/309) benchmarking ("sort", Float64, false)...
    done (took 0.140348749 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05905085 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078454666 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090741563 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082465555 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.082237909 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05990992 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098845063 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14451213 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07522951 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104092019 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.058391655 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057724349 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081103067 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074205577 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079077092 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087568741 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071118746 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158386448 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.081826658 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057909177 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072149784 seconds)
    (224/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119235472 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08869485 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.071051344 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073217482 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.076973766 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149250178 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188595891 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070026812 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138519124 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058786811 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058791769 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075910973 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094768052 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085353492 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097327538 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058258385 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073295116 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.08087477 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058334713 seconds)
    (243/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057775535 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103327408 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161972611 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057874144 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073084149 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060506788 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072706373 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101889382 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.072642367 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086566149 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075070146 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083165185 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059484693 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080254358 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058316228 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072369545 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073627101 seconds)
    (260/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079081724 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097790361 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.058214724 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081817369 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143131985 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075927599 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059460191 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080107274 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073682599 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075023613 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079041754 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.058383883 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073913556 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058717558 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071403402 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071013703 seconds)
    (276/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059324003 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057449594 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100804097 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077511298 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080921495 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073443439 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0580192 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058417949 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05775852 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080883934 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058955405 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094914573 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058213334 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071488862 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057640367 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057977844 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07099729 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080107039 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058919202 seconds)
    (295/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058147405 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072799861 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080431422 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072866794 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058206511 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058295145 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08037925 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071830732 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078816664 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059209803 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058199084 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057660117 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078080139 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183818613 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.212857434 seconds)
  done (took 33.554845408 seconds)
done (took 34.966389773 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089741158 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10169013 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083205202 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102014048 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088340535 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084184647 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081464146 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086050421 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087903832 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089758413 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084574866 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06203778 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082829363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08243111 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.08230556 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098641713 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08654999 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080545095 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081678515 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072165876 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080877853 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073231194 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074340642 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061849824 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08591536 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079562259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080115656 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081893875 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072667661 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073126322 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077417362 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080767474 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072850333 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085567427 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079810465 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079951587 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082431874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084394433 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075253402 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072647065 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08200033 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073020065 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080283899 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081054098 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079551751 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07938612 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080427585 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084621184 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09827608 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075183168 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082809323 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08351121 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082509557 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080179305 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077043218 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080833733 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077761048 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098849692 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080781651 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074626574 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081526783 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081746805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0785536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080266033 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080747457 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083665834 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083336128 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078844932 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082360333 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07972433 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.072898662 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080341154 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07686795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074125658 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083540802 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085792292 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071858148 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078897189 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080722108 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078169829 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072558224 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075442708 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074261142 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.079706737 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074653351 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063343996 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077320578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079321471 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071586425 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081445043 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.079575431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.080349104 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075144037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08294002 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072536396 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078051629 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072675286 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07352573 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074618898 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077268705 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.072221954 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074892523 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082236726 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074072463 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079638437 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085856648 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.072549095 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079101447 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072109174 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072104462 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086472387 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082776626 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073505852 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075491337 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07193311 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079994325 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071007204 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072086577 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.073094727 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07258992 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079195856 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071993616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073509631 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079024646 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.22233626 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073962237 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077480625 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076336255 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073228523 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079614858 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073204575 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073013473 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075909978 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06982379 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07502632 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073763754 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080887957 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075339989 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081493439 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07571236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081854543 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077969852 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080168008 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078430299 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071719159 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066284271 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076338312 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075455741 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074628938 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072940318 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074310835 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072787009 seconds)
done (took 13.580110424 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073548824 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143957413 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103194423 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101561127 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092108393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073704488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082818559 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104790821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074650998 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107527212 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094474086 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092612881 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119928454 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072318971 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073188284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077115738 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07422379 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088211276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105758119 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094310943 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119633587 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072655422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098307581 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095544227 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09408196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109031595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073912163 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077446001 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076515241 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098348497 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09563744 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077924703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.073866792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103886812 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100383916 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089376593 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073361781 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089433436 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074089487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072877594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074347075 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104531372 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086663272 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087254133 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077587219 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.083498769 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074639327 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089543729 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096269932 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08567915 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09211877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106276881 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075863039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.090719572 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072085123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092112685 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.083609582 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076691999 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.073968199 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081534577 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07317098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.076423364 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087289387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087263402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.077447939 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091542844 seconds)
  done (took 7.284405223 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090576389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099649866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090101364 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090487595 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073061616 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074516972 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.0732475 seconds)
  done (took 2.095868398 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073319206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095141595 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09634023 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096102448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088940545 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095384935 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084847318 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.073647842 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094852468 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075018547 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094388951 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107193218 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07737135 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08089515 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097933188 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.073791092 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098367733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07429852 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07703798 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098217971 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075760087 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1030959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077137584 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07405642 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087588921 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074549963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122170714 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07881666 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075535042 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076822726 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071521925 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113951258 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087937775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08152382 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073792371 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089228388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0886855 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072754676 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091528106 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083433515 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088205159 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075050838 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075100233 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071860574 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078501351 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084827678 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075211112 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074225008 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076665322 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094134233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075167881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087251066 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07668078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07917476 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07580307 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080385637 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085255801 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074903787 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094174572 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075559883 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091607087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090882126 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087761253 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090366284 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076145839 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087486932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088078556 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076358071 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075835237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.077679239 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090189773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072415366 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075682597 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08455948 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075791728 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097298811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097028698 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076072439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.087612223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.074795643 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074265434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074085805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097119479 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080091661 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073889583 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077902448 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077114932 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072608188 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074207684 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077732187 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072139867 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07568763 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076951162 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076962408 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076567218 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090244945 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077004371 seconds)
  done (took 9.542373902 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076575855 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075539133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077348379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075910429 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075224167 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075390052 seconds)
  done (took 1.985699386 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100999466 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076081441 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086847028 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07820981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111807367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094020946 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09522389 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085285383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090643485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085721696 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094496994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095000684 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0991669 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079222387 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094200232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078590659 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094107517 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081664952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085687704 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079225646 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093102888 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079319896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079347845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089570289 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083411725 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07879119 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085337647 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086110408 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085151213 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085937705 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07971697 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.082967086 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077436985 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084432801 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094132479 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077819553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078709802 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084820321 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079931488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082808792 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095094523 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079843205 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081331679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084261937 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084552193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078425352 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084208661 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085785323 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.093671795 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083816971 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.086292166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07904345 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.082307705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084004058 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078225007 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084931097 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083982844 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094228553 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079432732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078026799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075532699 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.082970735 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083943125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.082936752 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084841602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.083997828 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077147364 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078738596 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07938374 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078750066 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083713596 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075025277 seconds)
  done (took 7.607651931 seconds)
done (took 30.007704319 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540340696 seconds)
  done (took 2.035342191 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629489566 seconds)
  done (took 2.149253634 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.522301245 seconds)
  done (took 8.034359695 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404140505 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.507241117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742782634 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140697946 seconds)
  done (took 3.354235508 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.735775399 seconds)
  done (took 2.257870413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232590463 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221454568 seconds)
  done (took 1.989170693 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387332154 seconds)
  done (took 1.90127903 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150237462 seconds)
  done (took 2.666758019 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256469264 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184917785 seconds)
  done (took 1.963847475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.494435388 seconds)
  done (took 2.013513918 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.866351212 seconds)
  done (took 6.386840723 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224325641 seconds)
  done (took 1.790966256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244705805 seconds)
  done (took 1.766256504 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746146004 seconds)
  done (took 3.266272129 seconds)
done (took 43.099672153 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090155068 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093044589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092964306 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090183645 seconds)
  done (took 1.873081287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08375431 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080443027 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083987282 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080528257 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084373652 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.08049608 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081637507 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083086026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080125031 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080322234 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079579596 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080192998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083186192 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082292851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078521101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082838547 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08331851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080348224 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.082609658 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080502824 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078354302 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082989928 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082749637 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079636606 seconds)
  done (took 3.479596559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085783635 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08136545 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08274707 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079982437 seconds)
  done (took 1.858673013 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0853257 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100305686 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096869985 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085274434 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099638007 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094090091 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077142999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076326976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07803527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085092984 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075940281 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10418536 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096044968 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084942782 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088600642 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073172962 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07623713 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095811189 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086020555 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086085088 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078456098 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085868532 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075973606 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096909605 seconds)
  done (took 3.607634571 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093444678 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10992372 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088965302 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096955945 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099409114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072518178 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095335834 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.099261549 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134490604 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07247951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078105772 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07303623 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080946574 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072894485 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088801616 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115595775 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120823547 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076754626 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104758906 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072738683 seconds)
  done (took 3.381258348 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080258764 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076477592 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075480543 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072931363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085229843 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.080351779 seconds)
  done (took 2.007281647 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075716675 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.077713428 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07560007 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073672526 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080344816 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075819826 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073211366 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075352613 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07462973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074697677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074189575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073085701 seconds)
  done (took 2.434803174 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206401029 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074709455 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076400523 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073408745 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078931867 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074570923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089652163 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07507067 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100725993 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073736441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074166604 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076428522 seconds)
  done (took 2.606538348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214178119 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083215548 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243804484 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159343287 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118865694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122911573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119823362 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120958996 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149632757 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108206369 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173617493 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174539093 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114429871 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1447853 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099362493 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106616852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16355184 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171767095 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114594122 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172284021 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153410812 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133900603 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154043685 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109914654 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113471128 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130346553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079281369 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088564681 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176308173 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140507121 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150948867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119087606 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100838329 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182427871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178526044 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147138124 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155637656 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092709626 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109367868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14007503 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203747509 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096146268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167596967 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257971549 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089962025 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141614915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12593596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126308907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113128587 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097894784 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153962148 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190378562 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143348421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096249207 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132619891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122349249 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1215319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120700927 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188145209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165487866 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269375 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079272243 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115447863 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159028031 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139853964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11573762 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.13248334 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099653811 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142561123 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16001533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129908692 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150568144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124738622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096934719 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125257711 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147667093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134928828 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166982362 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129959282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079763021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129778978 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109208938 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087326301 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155048724 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08274545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182973722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106175635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112503287 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133542262 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115237562 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115549239 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166692703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294376242 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111555787 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074248494 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113443109 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126834426 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153617659 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095442849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115188534 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123598281 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08504228 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145086796 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083145785 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129733307 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081872031 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131238626 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135961192 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086866051 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129563882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110941876 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106983587 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138806727 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165296397 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095067335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089535807 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174999357 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12885936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110558343 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149700288 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162479305 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106218348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109302911 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156761999 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17878556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096683633 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16937569 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11420745 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091243142 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095175949 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130051426 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118438546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131950056 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088466862 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124383681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172306441 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082153618 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102169277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14005518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085698079 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087241351 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111951759 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112011636 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103114789 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106826067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109169617 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14364928 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128873553 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258463372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132920645 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107404895 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178950934 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094862644 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109044743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112131203 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077046701 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142626924 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165635793 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08735006 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168317293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129219817 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123318463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125336288 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091430012 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145555072 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087356797 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077491724 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152855074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117466879 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116164319 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157058686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122552369 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132627355 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124998383 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140277742 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138049939 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135650633 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112730105 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.094428537 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118566246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134210238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.080958084 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098182871 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086615354 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111473279 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103291425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091313221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148355262 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130068891 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116522554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118056467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103077003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152992708 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.082817164 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133538147 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125714486 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102254528 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157020705 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15636435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13710311 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105631308 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143141136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221188083 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082668577 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09753454 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129596494 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091332687 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091376148 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124931864 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152972021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13595646 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144258593 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131388597 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127507521 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161824574 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.078094528 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125784626 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151813083 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127797471 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.112961026 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098154536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10602727 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149621628 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115673056 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187824885 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119154171 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130290422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159727468 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107232802 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087215861 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109054086 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141314676 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111351084 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147858546 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105696903 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094841484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115315201 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081934691 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105239004 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133130944 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126249099 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140634762 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120697644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139081808 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083906408 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123411617 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129423344 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131727541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071555515 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12474933 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165132885 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101656837 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123413861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156799094 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086924844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.286796998 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181488418 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152643115 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093294174 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116283148 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126224755 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132643781 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126633065 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14726765 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116283909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144263321 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117347088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093760537 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095525148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103841187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111465964 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101849895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111695864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119994874 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103749461 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138889061 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110717804 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116929387 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124170446 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106459944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097905363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103687256 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181583608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124601366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176260626 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105827539 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148093227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167943825 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081762912 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086252167 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085075845 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145939526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091235834 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136680764 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114102774 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124376886 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129874749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147684358 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101675064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075323303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114656515 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139737934 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13184323 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10557643 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11053918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166714959 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106847195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086340134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11998039 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122488163 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10802898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170022955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067754298 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110088033 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08234473 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086420635 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130121746 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152494262 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085257585 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105557033 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12242066 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116269596 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130335614 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108234753 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112604087 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131203695 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153474397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130459474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094279607 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115457644 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130156643 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155625769 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106096972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101645117 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173577556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152380931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159234991 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092641628 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114452982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114416306 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112288209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135031169 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087051507 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15757897 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085200121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134061975 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105137289 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090397573 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129469155 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110699112 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090521795 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142248974 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117939967 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08657472 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080743635 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1190972 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119073598 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107967375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080907146 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137758113 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078154488 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130881563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.418706188 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090149168 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114255194 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105918739 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088687253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116022195 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112068665 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09609614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106487221 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1794761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093783356 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156710305 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14085254 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120315155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141198221 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110614029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648968412 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085270695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157007699 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124112914 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180193011 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108208727 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124446075 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116396965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130216791 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152071727 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110684509 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192547326 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139122748 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123495332 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08753804 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109801728 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111864135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095508973 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114846046 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119909745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12271006 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099955625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122868622 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130571766 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089228495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101967484 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160037378 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123632731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152718188 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146276993 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093437088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123900231 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142788813 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086551809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126819047 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305032805 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113490379 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108170525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088988117 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109512583 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165616633 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080674893 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166879953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126399691 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115630594 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119076509 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117879197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138576983 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114849906 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128083887 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099362932 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114665893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120223354 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088436048 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084558757 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111606655 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118169768 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104778189 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103660317 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107021507 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156590406 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.079757496 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106388077 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122413389 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151566854 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180097855 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09552094 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090371021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126235811 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122463042 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119661271 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1278024 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086432846 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089123666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087340053 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085424994 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115118763 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119900453 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121445316 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116592657 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166797657 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089507643 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241796503 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102754476 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111499441 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077157426 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08456673 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102669336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105148963 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114620815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116678074 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314053728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102231719 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.096609869 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098256301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082333203 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090977568 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13512625 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117581675 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12499765 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109790702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069541966 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115534238 seconds)
  done (took 62.105489813 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109837314 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089440684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102659736 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152042639 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.130254404 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208001107 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160445416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197321414 seconds)
  done (took 2.814513525 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075704228 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103177816 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110654942 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08996972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073942654 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075364847 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237304163 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089262275 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074326681 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104304041 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085220984 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075687554 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.441852982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072974958 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074622929 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068024677 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073985642 seconds)
  done (took 3.578962165 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.405633629 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624795154 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358185202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08358292 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.924049885 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096619129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151292783 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139272323 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085602546 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541703287 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.419067512 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135177603 seconds)
  done (took 18.629240861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087436336 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081053297 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096055259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096928506 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084715999 seconds)
  done (took 2.111635235 seconds)
done (took 112.043733976 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088145784 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.628386766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060612369 seconds)
  done (took 2.381771353 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090165967 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092065069 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092311081 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090408316 seconds)
  done (took 2.034880683 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081498206 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083708389 seconds)
  done (took 1.829815255 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242340305 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174086028 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104096107 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089777827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085824153 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086759121 seconds)
  done (took 1.931899934 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079537471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082279945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079562169 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08351506 seconds)
  done (took 1.989462577 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083860223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059044353 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061218335 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064440519 seconds)
  done (took 1.935311621 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094152291 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085884664 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086210491 seconds)
  done (took 1.932897541 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108421797 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09391799 seconds)
  done (took 1.868325387 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088934678 seconds)
  done (took 1.755715714 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101586969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106963933 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139755758 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118323821 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146906573 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116917247 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091872189 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092481228 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083770057 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093046486 seconds)
  done (took 2.758335392 seconds)
done (took 22.690066265 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086080058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377633857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36719001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097716928 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675746394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363552953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.975633362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100513194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123291683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075589683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091894284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65485046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964551152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332201993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953426208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331891076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657204949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074975601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074602716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074739435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962659963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075272637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075632096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075916474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655633526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379437797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075722057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.346433839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074761673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07698942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362385987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076166466 seconds)
  done (took 16.343746762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077006048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128355725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079819856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091879047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077909382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076726086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079057942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075744228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128395094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074828895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093126394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075025006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078848347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075711154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094910932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075535325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075913552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076464239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076168679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075368003 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094614632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075311089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076074462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075285393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075521707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088112355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075762616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076518468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075591781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078121883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078151813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075748546 seconds)
  done (took 4.31220695 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122200062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134252743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080414296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112023003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119514548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078066127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151223434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100585778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134177716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075794113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092738662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075445267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110245237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076101378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095142729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075592506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076633154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076572177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075902473 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075569921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094583246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07551945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075895373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076437707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075756355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09023151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07662566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076230173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075910668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077669829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07922158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076258497 seconds)
  done (took 4.570596482 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079563983 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082762383 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091356498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091176296 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077087213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080106327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080465903 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076757245 seconds)
  done (took 2.343020558 seconds)
done (took 29.243235583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086112459 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0764338 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078865338 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088668968 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080689774 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085117433 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073696495 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08314819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079278779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081471186 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082230971 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074172759 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078348651 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073633979 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081052109 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074925381 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086488094 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078951547 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086514363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08674327 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077649182 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080338958 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082419882 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086212062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087117695 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086327666 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085211586 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079796263 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076187607 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077537558 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084517024 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.091508962 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075653457 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086510012 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074663818 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075244067 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078568096 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074546468 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08723746 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084496637 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077993756 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083484749 seconds)
  done (took 5.072918045 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095333972 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100141197 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092583613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068759358 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073786399 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073145996 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096380584 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067233766 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066713582 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.0958441 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062587036 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067027063 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07061733 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060644754 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067899445 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064146405 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069187533 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062702092 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068032417 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066712972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096521805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060825124 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084749678 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070813123 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062819014 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068673898 seconds)
  done (took 3.629729336 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082439768 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.092331833 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096688576 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137189088 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11188297 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086706068 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086640408 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102857406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096423454 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074224973 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07871364 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099869897 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097364884 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0820279 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075133874 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093781492 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091998603 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076540238 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080365962 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101736903 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094570991 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093602664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103220355 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090491942 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074475621 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077190375 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078368909 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088670669 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077974737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084848493 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077660397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078748326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077500872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087024166 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077789471 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076685591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102598334 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085186938 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.088202198 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075329053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083539373 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075813003 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100423289 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13439029 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07395621 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080494696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078713001 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085010699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07432996 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095550341 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086497548 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074620166 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07832203 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075734048 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074172491 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078462177 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076602156 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077536992 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083456283 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.080932075 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.099360956 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080061599 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090889714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075144117 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08314427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073767223 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075632637 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073275991 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103909176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077567356 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118237414 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075384251 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076492336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.084705902 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083367579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081123752 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074826937 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091361351 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085640809 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078223424 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083299807 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079486974 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078836923 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097889467 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076911414 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.076340461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075770336 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080706785 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077791455 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076163308 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087934579 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075250653 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077856531 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091574691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074966349 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076296652 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079813315 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078994751 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0739845 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085511067 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078614638 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075281492 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08448011 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075700334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077197998 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087189005 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080896572 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073093903 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079041077 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080282585 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076204424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076431155 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.077857007 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076636373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083969922 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.081878665 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079235086 seconds)
  done (took 11.5347117 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171862532 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1658219 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078339458 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156969711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084109871 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087043737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15968227 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102639187 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075341201 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075945476 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.076481439 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118597203 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114232676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12413997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085954864 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075239782 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091953107 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122510796 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161379851 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15519307 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091484196 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084753985 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078661439 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075968986 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077765617 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08569793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092990431 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084431446 seconds)
  done (took 4.683822044 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087012784 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112966832 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083050627 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098893212 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098952749 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074953287 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07781374 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076794377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089062624 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08581453 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075621369 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.080476438 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081988554 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07845256 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075657147 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08239203 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08227564 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.076739975 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079238928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080830639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086227783 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099240678 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078716097 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074388232 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07996501 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073943927 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070343366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091329299 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075214877 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103457697 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073351145 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080528511 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08956789 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076087248 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075127211 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074788718 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075218712 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074790708 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07738838 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075943479 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073898343 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064597793 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073980955 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086268478 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082300849 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063605161 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080123481 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080470239 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079934848 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072232987 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078035558 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077474146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.078400366 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082786429 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079508695 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.08021881 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077123746 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081496636 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084697052 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074937143 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0721566 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07378743 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079344028 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07198715 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083721524 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080018261 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.073415807 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075550872 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0776811 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082540214 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075494837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07932199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072561956 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076823436 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080221158 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077017787 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076650605 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073842533 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075586841 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076238139 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062481906 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075021253 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060284772 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078267312 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073117393 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073864169 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075822418 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080470844 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086177219 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.076364895 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081537206 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076426162 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075116938 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078584584 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067784453 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078440997 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087248025 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089379415 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075200552 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073281251 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08882933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080591495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074143319 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063077152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079284761 seconds)
  done (took 9.999812652 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097739529 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.077084667 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092101043 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098761863 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094664835 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082248243 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084941086 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077146742 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091092779 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.081978543 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085335159 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075688369 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085704853 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084972742 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077411848 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085045225 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079380144 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0922319 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090459566 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075631877 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084160595 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.088425398 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098156757 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089119569 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088782178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089345142 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098313191 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085374973 seconds)
  done (took 4.165623114 seconds)
done (took 40.76474471 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.79982138 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949880445 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770973184 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128070193 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.840439117 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.900194868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.855971645 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769545291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.061740022 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.809219274 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.109708191 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.948722304 seconds)
done (took 65.78188696 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.787442258 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.909127631 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009810316 seconds)
  done (took 5.626394525 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.033997127 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.346388832 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.02028268 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.7712206 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.778357573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.090459137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.578771851 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.288266528 seconds)
  done (took 30.581057864 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.967359663 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.996319762 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.48060075 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511749759 seconds)
  done (took 15.71733073 seconds)
done (took 63.536690743 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785127028 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.783815372 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.782819379 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.755853296 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.834731928 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.78143379 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.240187273 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.835723827 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771962843 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.759702983 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773240058 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.241364024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.78545349 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.176098205 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.772302123 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786330128 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.829929101 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.285265003 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.93088487 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.794238124 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789194762 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.836302186 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.775134 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.927368161 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.796431828 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.777491169 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190516662 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.777936116 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.399013386 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.774012673 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.803234354 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.378240923 seconds)
  done (took 204.63844005 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773267442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.604997694 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.707692804 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.80871469 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.109258261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.954984065 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.880391387 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.187859743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.7775471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.800597833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.944093742 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.77481906 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97976959 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.720391107 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.80237083 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.777756909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.944379504 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.009535144 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806435408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.944568142 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.792705613 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.768550251 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.713809492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942355087 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792246627 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.792796108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796276441 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.782157777 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.965245353 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916451881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775884864 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.777301014 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960975138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.647520154 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.775465964 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.798756589 seconds)
  done (took 169.01857045 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.938285894 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.77754322 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.774493496 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775969209 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.781107582 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.775057441 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.897169438 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905899136 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.385124454 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.229113971 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828288699 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585023485 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776558932 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.775040505 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84335971 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.787425139 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.77654035 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.790768701 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.803461901 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775989597 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776857081 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907302394 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.791087681 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.771549194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784736975 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.775905153 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781578065 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.146584552 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.775119291 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775261398 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781593867 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.016107966 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.7776849 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776210017 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640218844 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.906993907 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.867571588 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.777917971 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783018918 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.777555035 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.994459303 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778375438 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.777577825 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.780399674 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930272561 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.777574012 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903716544 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77790993 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259969574 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777768949 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777310592 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.592842881 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785445626 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.373445814 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.782316409 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.777673107 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.778061995 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.780579882 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.777956798 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.777095865 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783380471 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.707982913 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.021325614 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.779767321 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.7808559 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791808686 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.778600926 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.90275832 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778559647 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.637365118 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835917783 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.900448091 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914865577 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778976158 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845446774 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873118059 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780334323 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.779166669 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779071607 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.778781113 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859104116 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.781269365 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.939238773 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787736206 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.780077656 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.832966222 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.85001391 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.780184516 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63150897 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.782043208 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.781267255 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.062288209 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845654958 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.780647739 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.778819749 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77956734 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.917706297 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903069455 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.499090356 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781998735 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.822711361 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.789224414 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.929385689 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781984455 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.939412885 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.782318383 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862364546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785629575 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.783916642 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.781277644 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.81380978 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.781591581 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.840145168 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.781341663 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.152866725 seconds)
  done (took 403.13015161 seconds)
done (took 780.488055861 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.440311782 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.403786035 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.511647557 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.42592405 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397490736 seconds)
  done (took 13.89470881 seconds)
done (took 15.609990048 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.873900213 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877499539 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.806740715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.873360385 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803671513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.873209581 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857602594 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.806725948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842963445 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.806599161 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.843806971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806781965 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795217138 seconds)
  done (took 25.583740965 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01208593 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.018769947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854489599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010724109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828570079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015841397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949681757 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938887366 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.935104279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800242734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795280908 seconds)
  done (took 22.876992122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019483701 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020513982 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.860532131 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.011639591 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834079674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.017813561 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949504847 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939279328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936178817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799538986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.796333175 seconds)
  done (took 22.9018234 seconds)
done (took 73.078624477 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.792161663 seconds)
  done (took 3.510229821 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.81912015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.98838448 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.800151733 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.796805547 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790126188 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.794380376 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.797566651 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792453631 seconds)
  done (took 16.298960789 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790392375 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.790172134 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.787819961 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.788128243 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.792157191 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.789105281 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.787934463 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791644423 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.791427121 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788796563 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787470589 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.790561755 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.791208959 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788744285 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.791469003 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.789172866 seconds)
  done (took 30.355434297 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.790326014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.788797141 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788563231 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788552905 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.789568535 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.791273666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789692112 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.788584993 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.789415032 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.789557127 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.789904718 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788873489 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.789014902 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.788417762 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.789696395 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.79097505 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.789702484 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.789436089 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.79393455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.789350229 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.79034459 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788445955 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.78893834 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.790228699 seconds)
  done (took 44.673702385 seconds)
done (took 96.557184377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.610591584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.443234144 seconds)
  done (took 9.772737675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.796105408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.793094777 seconds)
  done (took 5.36895313 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.792924722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.793018658 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792368439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.793286905 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.794110278 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.793208835 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.792891194 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.794558344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.793069048 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.793081638 seconds)
  done (took 19.653106438 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.793569211 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.793785203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.792121519 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79370695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.793989607 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.791462639 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.793903106 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.794470263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.794929637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.791601806 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.794322751 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791351784 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.795117458 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.791074454 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.794777788 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.79083643 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.791524103 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.791945558 seconds)
  done (took 33.99683334 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.794528361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.795003375 seconds)
  done (took 5.310695427 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.791343878 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791348332 seconds)
    (3/7) benchmarking "month"...
    done (took 1.792624304 seconds)
    (4/7) benchmarking "year"...
    done (took 1.792936572 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.792476825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.793247117 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.792679469 seconds)
  done (took 14.269218251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.795917838 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956352742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033929644 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.445996653 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798074085 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.798310817 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.747359262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.799546134 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.800766254 seconds)
  done (took 19.899401555 seconds)
done (took 109.991113717 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606983988 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.79398185 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.043254815 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.848080103 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.852071066 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.134077108 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.806295166 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.095517078 seconds)
done (took 42.903214608 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.816415177 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.127162839 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.184991042 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.815782335 seconds)
  done (took 16.851913298 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.776829332 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.317969341 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.830619735 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.387376738 seconds)
  done (took 20.066774396 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.16738099 seconds)
    (2/2) benchmarking "read"...
    done (took 2.144163023 seconds)
  done (took 6.039412676 seconds)
done (took 51.498994419 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796332601 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.796890567 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.798066194 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.795504528 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797243853 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.794362196 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.794065274 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793860227 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.794409995 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.798236368 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.797083766 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.797332825 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.796961052 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798293575 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795230782 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793760569 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797368352 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.79775529 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.795324194 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795332634 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795063973 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797297897 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.795218594 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794881531 seconds)
  done (took 44.831080312 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.798758361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.796079828 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.798708988 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.798980348 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.796166721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.798215665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.799346414 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.7951805 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.799714794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79836605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796284496 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.795435109 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.798480296 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.796288104 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798458361 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797089119 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.798372773 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796801428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799398532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.79641808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.799143194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797077346 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79674668 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800054501 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.797335446 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797086125 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.799309646 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.798397385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799614733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.797910825 seconds)
  done (took 55.661627364 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803927142 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80755066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.801243055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.800131378 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.800480995 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.800577309 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.799903814 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.800188025 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.800176153 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.800473659 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.799628766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79994653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.800163157 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.800175628 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.79984534 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.800827622 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.800803186 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.800837465 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.800718732 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.801409843 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.801567487 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.800773431 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.800828043 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.800646995 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.800806262 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.802403248 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.800659585 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.801482427 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.80157787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.801847246 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.801294337 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.800637334 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.801381514 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.801355014 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.800663679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.802121747 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.806097382 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.80891438 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.801931619 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.802219624 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.801039663 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.802862956 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.801752879 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802999421 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.801866686 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.802615953 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.803007302 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.803556208 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.802572759 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.805566768 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.802442885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.801914499 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.802675225 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.802424875 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.803436005 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.80336244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.802833482 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.802224435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.804801569 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.80257172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.802878262 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804005567 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.803499493 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80247531 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.805153507 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.802409238 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.802875407 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.802557109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802981373 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.804796622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.803526543 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.804057554 seconds)
  done (took 131.484859632 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.802938934 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801610426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801957718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.800993173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800602082 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.803103798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800582763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802955277 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80144098 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803971515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804322413 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801538838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801807926 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805200247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803228481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800773159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804777335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801215058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.804928191 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805818817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804127731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800659009 seconds)
  done (took 41.388934173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804271123 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805167392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.801072686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8051833 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801799428 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804705948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804892094 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805773193 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805276981 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801942583 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80276908 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806182181 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803677455 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802447814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8028413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802397024 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80516017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802028495 seconds)
  done (took 34.199414091 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.803450491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.804022409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.805913811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802611294 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.803674901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.8060205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80493492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.806682845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.805603056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.803586279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.806793863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806882178 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80626239 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803294067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805548113 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.804408641 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.806471841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803282935 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807104855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803753924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.804378218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806246217 seconds)
  done (took 41.44570356 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80619944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807661065 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80408895 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803943174 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.804772669 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806359272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.806649603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.803664038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.806739104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.807769428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804593176 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806433646 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.804489897 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80487822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.805794994 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805440134 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808523373 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80575834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808025738 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.80542266 seconds)
  done (took 37.850758503 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808170451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808908684 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.809565623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809342074 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810159092 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808475145 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809229992 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.809803968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810255289 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.809930758 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810013198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.810228197 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809425956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.810052281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809398117 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810632908 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809782977 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808545575 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80959155 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809061499 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810555385 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810492063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809328744 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809870619 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809953478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810520947 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809856854 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810387484 seconds)
  done (took 52.407815498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809042009 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809324201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.805686945 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.807215019 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.807286364 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.80687351 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.806023376 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.807281575 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808720545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807153138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.809293562 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.808985667 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809367296 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.809065491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808944661 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.811221485 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809383363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.806866503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807587106 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807222008 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.809923342 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810621894 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.810728384 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.807296784 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807133773 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.811121779 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807610155 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807341781 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810166604 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807126641 seconds)
  done (took 55.988588409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.829764771 seconds)
    (2/2) benchmarking "in"...
    done (took 1.827887127 seconds)
  done (took 5.395936924 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.807284154 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811403651 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.810933818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.808903735 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808717649 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.81008063 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811428731 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808440311 seconds)
  done (took 16.214019132 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.81121155 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.81276428 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811127691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810217875 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81280811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.812380315 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818734013 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.811738624 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.813571139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.81297794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.819538813 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.819640353 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.815009089 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812228521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.812403841 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814734946 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.812537207 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.813628464 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.812289527 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811445853 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81329671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814991348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814948199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.808833498 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81404452 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.823516726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.81708135 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.812323021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813145267 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.816873192 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.813435632 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.809852238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.81468815 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.814098855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.813051228 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.814837181 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822523019 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813581216 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.81937965 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81361368 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813890491 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.812276562 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.815810174 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.816576889 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816190553 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.814954392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.813747775 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.811327454 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.814765864 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.818555191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.817786946 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814510447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.812029431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818429173 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.816742856 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820692386 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815203181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.817085726 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82476122 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823786023 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.828501524 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.822676136 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817541503 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816000814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825064558 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838420128 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822130374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.811598648 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.811852569 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814861626 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.82187153 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828678368 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.82454064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.816093198 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814821552 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.815841817 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816291301 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814725364 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822796685 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.817968213 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.81601019 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815839418 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825337583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837652405 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.815256493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.816044113 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.817174837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.817179405 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.816954615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826543282 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.817089457 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.816449936 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.816515529 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819293154 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.817637027 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.818528838 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.817017233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818458959 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.814283707 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.817267449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817857105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82091989 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.8269763 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817327712 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817541121 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.823855483 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.817320785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81614537 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.824286204 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.817263186 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81708013 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.819209866 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.822271025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.814266494 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820588973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.825802997 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.817100811 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.819515085 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.818524372 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.816964209 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827827175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.842873251 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.818792983 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.818370287 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.823129726 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.830190811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819416949 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.822265628 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.818393179 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.815769897 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.814627867 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.820930223 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.818455776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.819953145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819138629 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820219763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.815888025 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817840855 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.819478897 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.820715074 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.820724444 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.820774432 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.82254978 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.821819683 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.820437581 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.821618482 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.826605721 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.819531538 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.821755616 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.821632273 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.816278258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.819388029 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.822269446 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.82169751 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.821712607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82108356 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.82087272 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.821118922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820583091 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.820620503 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82032441 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.821907213 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825554742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.820945354 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.82519474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.82026571 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.816758945 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.819508812 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.821181596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.820321327 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.820903081 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819727715 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822975361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.827841328 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.820741503 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.822979208 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.823106849 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821347952 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820944373 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821171331 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.826837289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.829060615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.821746739 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.827829483 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.821201561 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822017307 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.822108876 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.822662108 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.822142858 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822065803 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826546813 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829610604 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835214553 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830081904 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.823192349 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.825052469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.824398206 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.826223915 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.826385543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.823106662 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.822336329 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.823010469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821816613 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82336427 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.824540884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.823841914 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.822245159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.822808802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.823500048 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.823045141 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822849728 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.825651831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82453698 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.819617332 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823297429 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824306791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.823046204 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.819751043 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823762733 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.824774856 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.824080893 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824153073 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.830989772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.82019477 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825383154 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825587487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.823900221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.822731911 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.824263539 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826275335 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.824742765 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83137598 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.825038324 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.824946227 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831350573 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.823742381 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.82324401 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.82681411 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.824108125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.820459456 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.827211731 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.830886681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.824401805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.825669672 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.824391728 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824719083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825600808 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.831387643 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.821849253 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.825385868 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.825299298 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.827577996 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.821238864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.827315458 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.826863044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.825637716 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827349733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826218793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.825586134 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827043192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.825572175 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.825838839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.826482076 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831156723 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.833410833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.830388922 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.827422147 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.828655771 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.826816686 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.828619001 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826279074 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.826243614 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.827701551 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83944647 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.834244996 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83298782 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.828312503 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.826167719 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831556618 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.827993421 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.831245768 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827498883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827880392 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.826691948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.826824426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.824093976 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827794044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.826375075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828578865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.829383317 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.830290843 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.826841505 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.826994507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.828108423 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.828106321 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826651151 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.827241403 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.826511922 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.829800043 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829378419 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826474165 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.827968076 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.834421232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828504878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.828688749 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.828027783 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.828207645 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829078567 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829945003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.827599105 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.830870854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.83707772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.833401756 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.837384038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830616314 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837895699 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.828537153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.831441736 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.837544998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.826774533 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.830478441 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.828654814 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.829170645 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836442685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.829541961 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.830040931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.834683689 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829811563 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.83016678 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.829184481 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.829212588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829771684 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.830196869 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.837614581 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.832096831 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833447257 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832904658 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.825565424 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.829822351 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.830606379 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.83015094 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834482042 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.829890483 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.830843965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.83066375 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.829985289 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82915644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.829876844 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.830180137 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.826598407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.830001412 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836797741 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.831830101 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833466596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.830332223 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837813212 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830854269 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837266791 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.832755405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.831813833 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.831282054 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.831319176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.832148211 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.831720364 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.833194284 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831729017 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.833601675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834370703 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.831294199 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.834027042 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.833778176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.831789116 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.832022932 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841051547 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854966653 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833768225 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83561195 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.829318822 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.83381133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.83700608 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.831246699 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.831010632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.834634256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.841546991 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839170098 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.832217212 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.832643283 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83218932 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833937796 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.831872998 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.831949658 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.833140647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.832222296 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83337967 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.833457898 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836875624 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.832551451 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.834016425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833194998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.833660264 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842563329 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.83339367 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.833823057 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833030426 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.833146919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.834614323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.833214211 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.833032537 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834939549 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831923916 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.835002864 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83933129 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.840059527 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.837255599 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.834151291 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.834351064 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834554388 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.833315447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834712492 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834383417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835400009 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835382406 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.834658808 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.835522257 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.832671211 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.833846792 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.835278667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834915759 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838066935 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.840776939 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835607488 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832206487 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.834851501 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833858941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.832959221 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.835795449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.843382818 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838227183 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.846059215 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.844140189 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.839508076 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.835148756 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837381612 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.84344624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.834612318 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.836243194 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.835034989 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.836568139 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.836423601 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838216576 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835329011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.841805074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.836311352 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.835368748 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844502752 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.837453421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835726398 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.837148691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.840331827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.836637507 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.833032393 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.835302548 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.834985159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844052948 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.838314276 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836384381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8388838 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.834964655 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.837074469 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841221524 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836708938 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.838443031 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.83372685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837302271 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836853934 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83687268 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.834111664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.836776139 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.836633124 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.839218794 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.844925284 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835293503 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840144891 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.839326337 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.839455622 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838836202 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837973879 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.835924053 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835267482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.838565917 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837869445 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.838976978 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.841701874 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839265646 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.839198453 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.839062031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838172549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841066209 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.848230181 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844919611 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.834535468 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838115843 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.840235145 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.840485504 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837764892 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.838476504 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838865971 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.840906545 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.838135269 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.839003148 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.839016419 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.84111032 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854158147 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.837986256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839841005 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.839349814 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842792475 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.838409531 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.835165685 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.839172363 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.840667472 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.843025136 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.846976126 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.840919852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847101344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839982378 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.841039645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.843233244 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.843446767 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.846652816 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.842531366 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.840580337 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.840878296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.847539896 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855915547 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840047318 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849589344 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868489838 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.841799031 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.841217146 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.841662658 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839000617 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.840849191 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.843769992 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.841050202 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.840570842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840645081 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.840542347 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.843109007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847615154 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.843530063 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.840026917 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.840604467 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.841176807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.842157383 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.837799596 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.841571756 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.841610261 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.841586073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.841421706 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.842435373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.84225096 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.855059147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.850348907 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.841312178 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.842134599 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.838779631 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.846554937 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.845494283 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851920223 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.848854807 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.842518682 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.842281536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.844078445 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842673433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.838002722 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.842524634 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.841795549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842962628 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.838560603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.855653642 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850159481 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.847341783 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.842841084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84348213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.842856211 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844965431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843775753 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844131698 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.844916533 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.845124206 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846918393 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.84204964 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84254129 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.847517505 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851008151 seconds)
  done (took 1092.148727856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841257206 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839827606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840570373 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840585884 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840061029 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840133598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84018808 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839871569 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.841220872 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841023723 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840700309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84116699 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84089526 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840079085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841909627 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840635408 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840768872 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840824378 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84259653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841085923 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841164131 seconds)
  done (took 40.425876249 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.843308844 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.841504132 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840617122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844165568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841602857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.844289343 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.840719678 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84427816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845542676 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841792921 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.844589923 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844240325 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.841061253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.840894713 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842124631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843309206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.84474941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842637119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.84511699 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842802368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845736588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.842415725 seconds)
  done (took 42.316964304 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.845828621 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.845971885 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.846097925 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.843040081 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.846627204 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.842287933 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.846075881 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.84453888 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.845387353 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.846081724 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.845280406 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.846716168 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.852906876 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.851994365 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.847725648 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.845212162 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.989792423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.846656 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846979227 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.846325203 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.843305173 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.852534149 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.843377311 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.842745172 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.845791176 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.848069121 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.845424683 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.846116353 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.847369393 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848846131 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.850909176 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847949106 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.84658172 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.849315803 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.848774383 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.848992494 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.851912968 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.848072593 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.843599949 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.847714941 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.857306289 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.865802655 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.848649305 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.853397416 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.847454925 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.847864188 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.851268567 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.856169768 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.844463299 seconds)
  done (took 92.46317025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.847803651 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.847757953 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844842443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847541471 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.847471329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.848233574 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.84863062 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.84885276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.845203325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.845210612 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.847629039 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.846050137 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846084614 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.848419203 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.848722369 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84615579 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846998697 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84564237 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.846238796 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846126603 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.845455237 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.848915339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848839188 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.846181398 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848136188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.846321517 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8455693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.848563242 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.84656612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.846626607 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.849359412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848445092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.849998617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848028817 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84649635 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.849449081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.850062009 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.847570451 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849622412 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846242689 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.850111298 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849054518 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84997567 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.850293724 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84700465 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.847394901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.846789184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.846540774 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.847572845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.849865321 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.84964756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.848336921 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.849229236 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847223771 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.850212047 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85096635 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.847303083 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.847293039 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.850400788 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.848349493 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.849135735 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.850773309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.848520765 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.850928361 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.851570107 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.849116825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.849251408 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85176693 seconds)
  done (took 127.446611103 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851417634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.852288726 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853699939 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852795364 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853725695 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.851383017 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.851294872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.852176777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.852105675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851952198 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853196421 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.852330506 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.852692952 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.853200467 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.85221057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.852944175 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.852542398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853866581 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.8540823 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853263507 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.853297311 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.853063122 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853319666 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.852302262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85283438 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.853387502 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85451432 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.85385356 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853224599 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.853583318 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85366812 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.853259482 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.853948895 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853571868 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.855158986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.85311501 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8530381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854648383 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.854160894 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854129917 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85475242 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854567144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855159331 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854218283 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854358972 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85499203 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.854815412 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.854426608 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.853712004 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.854435769 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.854643539 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85396749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854378896 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.855206175 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85485329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.854707664 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854873195 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855306992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855517771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856109935 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855062219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.854911609 seconds)
  done (took 116.709730631 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854371162 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854107127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.8518832 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.852104802 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854199858 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851926302 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854004219 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.854439865 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855120195 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854830449 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855025294 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852124626 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852628833 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853873997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852311397 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854039587 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853333636 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.85206513 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854765716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.852306442 seconds)
  done (took 38.849132871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.851543028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855846812 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.852275811 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.852587247 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.855824503 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.851703104 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.855440671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855461507 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851984699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855850456 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.856892373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855500092 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852961037 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853474907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857701362 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853379546 seconds)
  done (took 31.450897884 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85282036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.85617516 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.857739601 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.857254838 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.853697002 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.853764908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.857002484 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.853501649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.854132741 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.858572734 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.856894658 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.857252057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.857099246 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.858331503 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.854240534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.857597512 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.854401942 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.854266547 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.856704085 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.858386239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.854907976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.854212767 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.857901242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.858028262 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.854559781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.854989285 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.854381965 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.854736877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.853840258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.857344209 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.855354065 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.854875515 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.856950347 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.854753015 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.858759576 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.855041304 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.85850392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.858654002 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.858800836 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.857702877 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.859276668 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.856210203 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.858924215 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.85871013 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.856846569 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.859475513 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.855866285 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.857046997 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.856444679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857283874 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.857922939 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.860091716 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.858937055 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858911905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.860328322 seconds)
  done (took 103.899778369 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.86158796 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861661099 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.859874296 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.862521019 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86184422 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858790378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.862748474 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858772505 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858828623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.86328809 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859800852 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861889748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859847517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863221419 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.860778295 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862846009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.860399133 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859045364 seconds)
  done (took 35.282417798 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.860044616 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860335505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863192132 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.861896789 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.860175635 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.863401146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85870256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863565728 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862122736 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860446686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860622887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.862600181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863102317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862774911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860726991 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86039383 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863653192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862914864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860271964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860633375 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864262615 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.863722231 seconds)
  done (took 42.747800395 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.862403454 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.8638089 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880303193 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.885006708 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.884920631 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.899516631 seconds)
  done (took 13.06482011 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862032714 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863946233 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861069422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86593033 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864190311 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86138177 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861415054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862600538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865110941 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862978053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861885712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866032243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865137263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862078327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865224887 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865651124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862484602 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862649762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861940511 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864817578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862950723 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865575085 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861904155 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862934225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861994105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862359709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865928294 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863405735 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86254236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86496577 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865433199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86388574 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865493373 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863662859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865604501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866211781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862957134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866445778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866362555 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862508048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866360838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866373052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8663153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864425992 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86660398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863103125 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864033964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863162862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864752022 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867793309 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866583021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863639765 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866693356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866813235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867756857 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868494073 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865206732 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865968776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866764817 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865003993 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865406795 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869200267 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865010711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865082419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868039418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866487839 seconds)
  done (took 124.858471542 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864931982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865371959 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865245137 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86574361 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864964472 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864333547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865978661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865268701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865970991 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865840957 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868456368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865074208 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865672498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865718008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865683896 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866119847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864713455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865894643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865120142 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868968691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865663957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866496699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866862327 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865975568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866750784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868624381 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86598237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865789175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865505141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867058623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866484538 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866063985 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866094224 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866403687 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866316554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866685198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867746718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86718024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867872519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870046821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866819651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870786676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867641758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867352189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867562242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867587412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867324479 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866715855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867276485 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867297369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866931605 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869449624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86797953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867800553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868125062 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868258311 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867917381 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867555181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868033752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87226803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86923662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868038583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872524478 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869388331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867854186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867954017 seconds)
  done (took 125.020990559 seconds)
done (took 2545.281956041 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.863689826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.889962786 seconds)
  done (took 15.550251544 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.037048765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.990124638 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.875732715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.910240611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875927344 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893427476 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.878559997 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.876510279 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.875437968 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.87654115 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.877328786 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.063963278 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.872035542 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875576168 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.876551943 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.969813209 seconds)
  done (took 52.430621721 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.879986872 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.880413041 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.890971706 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.882551596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.879407741 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.891962177 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.914886287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.882828784 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.915517167 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.893581649 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.949282777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.890630525 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.880068181 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.92969727 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.893472752 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.895350889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.977189038 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.957316409 seconds)
  done (took 36.087319164 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.95887526 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.879124477 seconds)
  done (took 10.648032733 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.899733411 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.880549001 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875871324 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.903935848 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.904840333 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.87673706 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.890588057 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.882581982 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.91221043 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.93748379 seconds)
  done (took 70.774744755 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.887833806 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883633538 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.882150225 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.881788375 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.87384379 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878475813 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.880905944 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.878487052 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.55158236 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.918722654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.88940262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.890086746 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.883724522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.885731667 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.880777601 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906046495 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979524359 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.88130225 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.881482159 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.889865976 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.884925224 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.938266072 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.899951345 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.887236222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915139058 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.555133019 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.892708572 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.891494971 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.977615446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.883094648 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.884431532 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.887352931 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.886330514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.284061541 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.190251467 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.886182899 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.900658531 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.893721547 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.882426701 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97797245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.885469134 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.891911028 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.498244024 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.169130036 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.981884786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.92815467 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.21184801 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.903886582 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88773473 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.912960898 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.88914687 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.886775598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.899363914 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.36559979 seconds)
  done (took 133.008455294 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.880551032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.236670889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053379461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.882423876 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17239957 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093593472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.883073698 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933564394 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884208207 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.114576262 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.141515675 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99357773 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884694728 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.881668153 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.882735166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.880636378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042119968 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.958001404 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883633152 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.879476328 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915199868 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.128148495 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010893037 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883764625 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.913208604 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097296176 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009892036 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.992554674 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.654464791 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.879188929 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948829965 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.883732219 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.879359634 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879629202 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040294897 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.979136469 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967566684 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.882649034 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87926604 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.877637736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.55229075 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08364703 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978153765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.022979477 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.080787579 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090541665 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.662776398 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.878881948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.622081416 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.045294635 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113798915 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.111865472 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004651935 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.881626011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.207809806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876214123 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877064537 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130528603 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026346554 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982170116 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879421502 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877269636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.876674361 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.126984614 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.881618184 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.977827503 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879955334 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875726816 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978417336 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983212692 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020227284 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095029984 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.910796472 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.772328215 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.41010109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129006001 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947288366 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131092756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878066388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875620902 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95960624 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.724075829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134090184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131357028 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.133733276 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916694237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.603902709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.876258888 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.108165665 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100962016 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.130517662 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086000209 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.11757181 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.210168502 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.876784467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.875959732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.12467421 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015998748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879772265 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22883721 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115360968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.445038391 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898223038 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.188494535 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012544986 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879434615 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.521415297 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.876068639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.103827593 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921959527 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877960526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876778541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.099955904 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.854790373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877652103 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.739342445 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.943613363 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879720673 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114079244 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879960594 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144248354 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879267971 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119081363 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.984508793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912574251 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.054643847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.083433036 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.878486961 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124949982 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121105284 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992160604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149883572 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.782992711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874937697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163236052 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873463435 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866296295 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.042563128 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.867737637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016065879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869619395 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149878842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888986097 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098042521 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863400773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120978236 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895675202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912524798 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859468521 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990788576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858747622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693123937 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015216564 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854190843 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850556407 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.420841995 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.851895042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001076308 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0855826 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873704739 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925111207 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.522979511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84490644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939285357 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874843231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.23768779 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84645656 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.100452236 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.846507199 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.842154076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.842282044 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.086025989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08136896 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845482517 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838986074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.733149898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.836672271 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83420209 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023869473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.17086033 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833317352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039120859 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835144834 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965059647 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837005566 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.911084252 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168272612 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831403656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.829108667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828256806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.830442191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827204984 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040403751 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857454412 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.368584236 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970379936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09864772 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142735233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.079173705 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876438538 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.830969578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086823179 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830252515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.892412724 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.828349356 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848604399 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062082855 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825873465 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040265352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10831901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.870882326 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874847468 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82557074 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82430455 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.823490023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971001612 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916692388 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.825335452 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.820614385 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940171 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948833198 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035294018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.822624777 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.87437952 seconds)
  done (took 902.420835513 seconds)
done (took 1222.716093873 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.821135329 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822124518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804522512 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815248633 seconds)
  done (took 29.01706717 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.823474726 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.81994229 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.82251941 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.821075707 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.822390675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.822172225 seconds)
  done (took 12.678469256 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.861804762 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.817257835 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815652453 seconds)
  done (took 21.242136448 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.889701053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.656710734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94629572 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.243347544 seconds)
  done (took 10.483379257 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.822520465 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.821693451 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.821727305 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.821502751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.822281493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.822864624 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.82193141 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.821693721 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.823197858 seconds)
  done (took 18.148246742 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.212456141 seconds)
done (took 97.534461785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.099856597 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.206428061 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.892179577 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.970763953 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.024556607 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.997207574 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.246321676 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.933148761 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.888889308 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.913569821 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263856982 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.88967848 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840226669 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.925707479 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.086506205 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2756406 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.840976796 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.995382941 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.874492484 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.470794579 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.144648289 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.873735754 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.136678746 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.876542746 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.362624857 seconds)
    (26/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.878538388 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.107195031 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.098601641 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.137817355 seconds)
    (30/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.892668742 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908242655 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.953396646 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983562658 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.874651356 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.993536896 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.917143564 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.134975784 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012597109 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.874320292 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.033370912 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.880536328 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.986031668 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.056474229 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.876528954 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.0681692 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.186862373 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.230343999 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025885459 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.045572463 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.117861566 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.144318246 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.310104118 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.122561067 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189180042 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.528170196 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.263642306 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94932224 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117369677 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.965187938 seconds)
    (60/309) benchmarking ("sort", BigInt, false)...
    done (took 6.887216528 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.407579103 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.897640092 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.006302988 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.215228879 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.878951558 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.967702505 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.630954743 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.890051938 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 4.229408181 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.911160302 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.958409758 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.693566847 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.578105813 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.912073688 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120246393 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 5.570925092 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.871935335 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.004260989 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.89473326 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.97842774 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.976969107 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.099125298 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.88545759 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.48246004 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.934551397 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.213746522 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.986119777 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.912572444 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.881173464 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.99753413 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.974193055 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.031997505 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.936101871 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.95362333 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.972578265 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.977628485 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.880452375 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.20238601 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.183003097 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.27881521 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.99604761 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.882421008 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.960940295 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.584650521 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.985232206 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.975698131 seconds)
    (107/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.910262873 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.073553967 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.909055308 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.331913392 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.376272519 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.981038705 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.885998492 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.530474663 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.53373424 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.892870999 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.187298312 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.020082861 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.872776257 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 3.711131239 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.907090686 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.882172069 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.168618489 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.336855931 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.266350793 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.144118828 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.884636802 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.896181331 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.103671311 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.137297327 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254996868 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.88866327 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.708191518 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.872084345 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.081829365 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957016612 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.988415964 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.760065977 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072610631 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118899332 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.913836302 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.566246071 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.892996004 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.133912042 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.884727369 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046554256 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.114056846 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.17573436 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.889145096 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.908649609 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.869218707 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.352872993 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.274836586 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.87448432 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.207164903 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.858736031 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.089355456 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.024960677 seconds)
    (159/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.05799915 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.917959041 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.88555823 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.888823992 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.930825014 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.141286086 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.905184377 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.908436848 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.073700908 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 4.836196563 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.081526975 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.172467317 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010418233 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.381979601 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184672783 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.891891123 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.889772138 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.159298384 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.022780721 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326112829 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.998059811 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.903291934 seconds)
    (181/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.316703657 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.925118932 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122982734 seconds)
    (184/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.996458623 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.805065458 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.069529193 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.889838539 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.38616483 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.908592688 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.890035242 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.05618376 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952450953 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.890366125 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.349169592 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.889145069 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.019952834 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.171479566 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.427879219 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.108812963 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.179936812 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.888571721 seconds)
    (202/309) benchmarking ("sort", Float64, false)...
    done (took 5.710660318 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.861793405 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.045225708 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.789133089 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.519688122 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.069141965 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.857412176 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.208842075 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.905040804 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.007792385 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.888479991 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.027770645 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.301166874 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.979049608 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195678412 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.896698473 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.58720547 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.058799013 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.937046594 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.983680575 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.501078173 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.912545013 seconds)
    (224/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313232659 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.745111988 seconds)
    (226/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.003830244 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.150801191 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.935616418 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.782129165 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184759483 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.001398027 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962632219 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031777402 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.848865313 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.040330356 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.858041421 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.380795863 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.953662872 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958324263 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.866700083 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.968361547 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163609792 seconds)
    (243/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.433507306 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.912597609 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.926563601 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.966378228 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.036506159 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167031814 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.961753129 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.979207613 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184695034 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.431049726 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.959781482 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.986145249 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.139224953 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.885264073 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208692001 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.115203255 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.540542045 seconds)
    (260/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.288636402 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.692012036 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.041545845 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212414268 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.952903855 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.91861306 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.898798656 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.942079806 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.857556946 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.007248312 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.942711631 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964195699 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861301788 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.111688083 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.945732537 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.95693102 seconds)
    (276/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266100986 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.049194256 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.988442565 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942538549 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.873899214 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.856691375 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.656950897 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.15878663 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.215131753 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973135453 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.281184434 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.914156206 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.205212504 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.946536002 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957310444 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.05826608 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.997959744 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.884751346 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.842108104 seconds)
    (295/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.943207746 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.862514585 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.212755044 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.210911675 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004238739 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.787717296 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.88562441 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.777496664 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.899015074 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.276098133 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.931264916 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.886284035 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.885827899 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.858781049 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.208686592 seconds)
  done (took 1013.453689697 seconds)
done (took 1015.5574235 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893667544 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885440179 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869869635 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.890970274 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.981461495 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.897582321 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.880232681 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871708418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.9176861 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.919485975 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.869323548 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.896659084 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873143658 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.870029431 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.870310329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884614376 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.188788784 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903067679 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.88785742 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.879568091 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.887695085 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.870177814 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.920731883 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.896568643 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874552474 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.872710534 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.873737271 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.890518981 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.982501848 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.874386027 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873698312 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883305452 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.188796433 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.903627504 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.865239961 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.890831543 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.882719204 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.880184289 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875723287 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.902958433 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285650441 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.915374824 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.873697168 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.87299832 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872993864 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.874849788 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874402686 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879449311 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88561778 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886994795 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.279473718 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930847715 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.875780589 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.873031893 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.88410753 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872678948 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.875899814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888554447 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.892776167 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889345241 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.181953731 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.910128091 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874714182 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.889870903 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.880824641 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318548039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.911423257 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877418126 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.287647164 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.920045097 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.318275364 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.923868612 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874377867 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.887933562 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906121498 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.191523098 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.901561082 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873555858 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.880770152 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.873060174 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.884637465 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886350411 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877778199 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.874919552 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889135417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903903193 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883693842 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.875579454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882658767 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894644118 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.881015436 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.886267249 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877455831 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870231636 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.882894018 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.876627236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.877354467 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.877664574 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879963033 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.884526712 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.287526137 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934323871 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870797045 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871275539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.8745364 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.889936519 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.284846068 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.918951669 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.897862836 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922666663 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875598071 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184261491 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.91204646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892522336 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.883889327 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879118331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.869602236 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.182541539 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317345416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93401975 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877701848 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873990709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892562195 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878091067 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872829626 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.19795701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.911234928 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89474971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.999209892 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.887134629 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909350289 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.876771442 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880707504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.904784539 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893833699 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.90976188 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880942421 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894354535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.892705347 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.873437289 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888518325 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.887788856 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.878658874 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.883319206 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.870996346 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.907147106 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891626638 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891986146 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89799928 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.99883475 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875603937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.184667154 seconds)
done (took 294.780942569 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.947846084 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866503933 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.974987355 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.871768098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.95568101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.959154308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.868640426 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.869404753 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.868293896 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.238646648 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.867011274 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.868574355 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.870290795 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.865220669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949603544 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.870178179 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.86208754 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198969496 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.866037367 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.937276498 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.864498798 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.859252865 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.863195298 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.237010924 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.856141388 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.859007079 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.93395667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.862592028 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.198864851 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.859829619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.858761728 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.196818689 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952089727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.878625078 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.867065913 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.864578474 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.940806461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.863030166 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.93847182 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937097354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.953979395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.896346708 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.852979599 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.846219637 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857442558 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.85223842 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.848993401 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880165664 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.844866828 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.849343004 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.186605766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.863344469 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.85008608 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.849616291 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.848750519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.884417815 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.850412826 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.853328682 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.943780752 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.854758683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.915757513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.225377806 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225703869 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.851994419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.852468709 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.849489478 seconds)
  done (took 183.654272963 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.918499608 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925425862 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918894822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.857569966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.903159522 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.921396738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.858678317 seconds)
  done (took 15.078716807 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.860154351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.852276888 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906124859 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904770791 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.852979367 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.00165332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.853621207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.864625674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.850817511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.907080592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.854294444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855171776 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.861126498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.854199757 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905077389 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862521395 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971855143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.854087875 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.853293991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.003635133 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845532319 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.855680008 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.903341413 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.860981102 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852725902 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.853991628 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.437855259 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846616373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844751413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.84879032 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841668096 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.886292464 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844675364 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.846481702 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.841721647 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960270834 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.845413066 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84300169 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.845401917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.843894823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.844846645 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.844415198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.844792312 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84221192 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.845332192 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.868952831 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.845514468 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.845566252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.845293203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.845570345 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.897551024 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.846350123 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.842873021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.844066439 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901388006 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852201237 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.848133577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.842254411 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.846146769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843674705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.999811186 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898518034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.846131329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89712681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846495086 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847459874 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.846677073 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847066418 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944786518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.84760135 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.89808766 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.844322558 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.006474445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.870334448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847348765 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.8485554 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.850254166 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848152868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.846753936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.850320941 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.843646539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.837060376 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.841388817 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832661653 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831747366 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947832307 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944337999 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.832086938 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.847162861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.842168993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.832115334 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.88797559 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.831984256 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.829262539 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890325592 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.95246977 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.888082291 seconds)
  done (took 203.539423796 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.837196694 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.841649198 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.83338416 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.849434165 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.831399665 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.832945223 seconds)
  done (took 12.783702821 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.835108064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.832989788 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.83235847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.832259351 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.833862868 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.83387694 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.835564326 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834250009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.83769519 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.832805157 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.834888297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.836391713 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.83554429 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833741253 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.834738923 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832590481 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.834826343 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.830616568 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.833675378 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834495689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.982946901 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.834823942 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834797979 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.835260938 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.838753229 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.833725764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843260948 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.832912797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833291137 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.843864021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.838790401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.835909012 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.834241087 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.839995504 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.839484044 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836476795 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838119801 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.836845319 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830503401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.835302965 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.835874324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835563026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.833919555 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.836703995 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.835845171 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839074432 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.841130843 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.842163057 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.835886977 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.836554599 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.836613514 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.834733039 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.835518153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.836880979 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.836962855 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83997703 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.840173811 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.83624898 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.836569868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.8360456 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.836195602 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.837767838 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836991893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.840975681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.842468539 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.837542469 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.837229219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.840156902 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836131587 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.836526833 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.838367889 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.832912213 seconds)
  done (took 135.116651323 seconds)
done (took 551.987809401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.937399336 seconds)
  done (took 8.696960416 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.961783077 seconds)
  done (took 8.769651355 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.362708307 seconds)
  done (took 10.132091931 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.850025096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.865402152 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.847600957 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.840044659 seconds)
  done (took 29.196364208 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.914840348 seconds)
  done (took 8.682550657 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.86131785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.837561552 seconds)
  done (took 15.498391225 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.894909859 seconds)
  done (took 8.663338658 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.90622433 seconds)
  done (took 8.702649722 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.854203147 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878882537 seconds)
  done (took 15.516742444 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.82042314 seconds)
  done (took 8.588662641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.196741638 seconds)
  done (took 11.059311246 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849498754 seconds)
  done (took 8.721221659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.911039842 seconds)
  done (took 8.678903419 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.893831464 seconds)
  done (took 8.660505967 seconds)
done (took 161.326701373 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.839950666 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.841543893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.838207986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839127525 seconds)
  done (took 29.127059646 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.877159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.877547369 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.87778507 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.887638 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.880750914 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.876208021 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.869613133 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.869422313 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.887944061 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.880050282 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.878856663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.879129003 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.876876424 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.869415042 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.879862678 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.878979484 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.888104777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.878714454 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.869401374 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.880844905 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.844099611 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.887934504 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.880489307 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.845300836 seconds)
  done (took 46.79045164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.042321999 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.915232957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.998091777 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.897596614 seconds)
  done (took 9.622652694 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.895794849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.897668647 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.910019578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.949143406 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.971923975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.907430366 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.871553767 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.866568214 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852954063 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897590129 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.974389848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.899257082 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.98377183 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.845222554 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.042606423 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.845797761 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.844941105 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.897706026 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.9482163 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.972376948 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.845157558 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.897031673 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901655157 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.894025543 seconds)
  done (took 47.58213401 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.843987949 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853402737 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.850930713 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.845892507 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.845037306 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.845149875 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.851758241 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.846928709 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.866324253 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846464866 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.844351785 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.844971577 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.845574452 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.845893486 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.844700152 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.858094049 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.858626512 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845372755 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.848735399 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.850921732 seconds)
  done (took 38.752458863 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.841087587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.69351638 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.191182166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.095156172 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.841291669 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.842409614 seconds)
  done (took 31.277707174 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.861334013 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.853314649 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.846177008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90503928 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.987780654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.856341324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.84712074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.860911338 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.895846668 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.912010138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.869760147 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.878083446 seconds)
  done (took 24.345488828 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.843340865 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.849310875 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.84525322 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.866783918 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.859851472 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.856292497 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854616947 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.842423031 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.8625 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.867110719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856273558 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.859992685 seconds)
  done (took 44.039139653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932039907 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730688954 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882718844 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559939439 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378833102 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054139639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374198074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186849501 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.846134404 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116287398 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.769674007 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084194525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098219202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84263582 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914639081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.278915211 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139703629 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069768216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869062719 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53680281 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035493609 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.512459891 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.585516111 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042336734 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132902117 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053665444 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.181113092 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.877488324 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05163609 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955802974 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931608272 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920504071 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19613604 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292504789 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03664131 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931167952 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580816228 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.6392799 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.906277188 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.609763852 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.745719555 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.048931281 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929207626 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920993831 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856077994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.519409858 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270563559 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.927496505 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.624703793 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922669316 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933275841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01257465 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.925655259 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.737486196 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875710151 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200395738 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.919269122 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928921518 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493584257 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964522746 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631004366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.864269372 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.016590381 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633508041 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386615872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.069483997 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.925531235 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926350491 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857654474 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.556682586 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041300787 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068076682 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.942201182 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573803214 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2307444 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.923710543 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001657928 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209502255 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798783278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.865331058 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151942748 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874998739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857873836 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.780620251 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857005378 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187322859 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959595085 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.535175632 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964320252 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263945565 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934360518 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944824296 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931241295 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14868518 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.806528525 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923829037 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.634646835 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203905022 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94644019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263570826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860129976 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.927927133 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179543606 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.135265449 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259007695 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363003142 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086300146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925631178 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.013021187 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.925654317 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93606129 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.199094325 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981403071 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95948703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050082102 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884040586 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219903232 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951333018 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.098986078 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.858096583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186184124 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232260359 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.176346501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010215988 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93051367 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925928453 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.586562107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.545822381 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.149807888 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.927475612 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.526999309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941048299 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.927156072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861790949 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.561659067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852090043 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.031844851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14985586 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.956644661 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201318588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861058311 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072727231 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038964325 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.149804937 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56970309 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.001705857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187878333 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508579103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268784845 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941255683 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946674384 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020573732 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948736369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.44837171 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187782507 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.931817382 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.931446809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.592031823 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.992008544 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930366776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.932828471 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731337284 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208192711 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950800459 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.939181047 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.816771435 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.941994704 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995428314 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933607953 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938830494 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.433562606 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681880554 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939465522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.608473836 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16452955 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938384768 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.559867989 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116080282 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.013827154 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206979566 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98729022 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.864013535 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634430989 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.630291212 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929282085 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865419923 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930016922 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940379983 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940748731 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.130886422 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212350998 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972708646 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.563783872 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.039360044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941249947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.93564872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929816369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.424566828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985930948 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.655194731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941119495 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066885488 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.943439573 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864553291 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933500128 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934596931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930286484 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.882798435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983786778 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.55943109 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379717089 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192110268 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58451158 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948470579 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.584514896 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.055203753 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.963649664 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.636489577 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966495538 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.066301077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01688071 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.942583099 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.644133606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.709537824 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.501649367 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24305566 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240930654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362485194 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.377951248 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269015324 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274190242 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167494706 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461345645 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993231856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280822112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876640098 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023443158 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.574469945 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283325549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949912666 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160932941 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313290128 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.699072416 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089560642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144723495 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966891484 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.806644018 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975132486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.137538658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090656873 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661250212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16012878 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278984657 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643574273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.032449159 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.933472708 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624177989 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017626316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.643849155 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.294998663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.556792054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876918978 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421115094 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.943605865 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379139737 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283016919 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341790069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.033379552 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870309939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944762755 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.946037321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.933981111 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91532943 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.855566134 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.211911095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946521091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170122067 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316011101 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196518491 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83719306 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.939895416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935384183 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228494257 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.701146958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179477895 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.356049345 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.528134885 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947190168 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870000769 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869079025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.63765323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936841007 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91160192 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170471328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.044458646 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88966284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389043099 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260209023 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192481079 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.950115394 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209212858 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210675575 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.671969397 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965487801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.036673933 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645487082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.636768586 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158472642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171870339 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741192498 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16831179 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.984134574 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.888672335 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.937552633 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152511416 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.159173585 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.876658269 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180975554 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.660812854 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.94894196 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318629389 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993214499 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.875678153 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147596199 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.03263231 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949268221 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018895409 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948289144 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.949193557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949109667 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988357042 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904166717 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068324077 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.952171121 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02946351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985969862 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.524049128 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.94900372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215025816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29666965 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260515157 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996704642 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939528495 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944351571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873636454 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077741394 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.385713248 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211723713 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070674833 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.08182664 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964946172 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648741839 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29145265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263204505 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214167755 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.835096935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940939431 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02985195 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.165173186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951422401 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.152108232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176128357 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262566064 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409972788 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.159455074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39331653 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214769537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314234391 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940310248 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533180073 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.945643681 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.705772426 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.980865972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904288337 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224013362 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951622891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317729736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964229962 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.141204563 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.457008656 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652524941 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301129049 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.925373759 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999629512 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220464116 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333701617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254279197 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010906847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953157038 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.641171237 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079935098 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.893273164 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.203704769 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944124225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154393549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.654768504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951992735 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224626364 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251679211 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.9402799 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.919704042 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993792621 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.952434961 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.166106885 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20266152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193341239 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953387426 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942952169 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.757921227 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224105488 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999991289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878093258 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.946697914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039207668 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190675264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962962693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.460204367 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.646251285 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238937264 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.861738369 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965215001 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426265674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394528039 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272438383 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469721568 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173744211 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501272278 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864298602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328367549 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.948913427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413493982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330977812 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.948982409 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.52696207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066364613 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.21628793 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264221542 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.958721554 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649179651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.983972234 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168739676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547505719 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887131738 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951974942 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.006239163 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94677575 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.077684005 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957236213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.93398022 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889922043 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.795046495 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438944462 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.950102378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.937293692 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.699536424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.557388641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063193302 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103324509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953705622 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.649951071 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.239359258 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202028922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.528502391 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.024416686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.949481045 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946806727 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874895404 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14533684 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.170424134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251466732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.373115124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.067273701 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950587231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.163216802 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158660073 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.881512042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09953447 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405392831 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069534628 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.866135281 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.660681721 seconds)
  done (took 1715.347311377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955250108 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.015868772 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.952274147 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.990972138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968615433 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025907414 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.998145711 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028072111 seconds)
  done (took 57.809503398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947727129 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.156433197 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.958408926 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.950137172 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.99029105 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.949879173 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.164566303 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.962539662 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.994903584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.959651279 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.949296977 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.96692416 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.314812482 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.976829055 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.962844796 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.978296554 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.976135278 seconds)
  done (took 76.068344824 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.951459854 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.137810541 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.96694842 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.972120484 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.840728288 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.964101919 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.08976691 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.985305739 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.953004067 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.122829371 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.290868233 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.956342598 seconds)
  done (took 91.108514055 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.966687494 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.956878449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.958144378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.957416433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.957734083 seconds)
  done (took 11.681143856 seconds)
done (took 2225.338393149 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.197706261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.171841113 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.183600541 seconds)
  done (took 6.23248778 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.098930401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.145065231 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.264432341 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.284569217 seconds)
  done (took 10.672337598 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.238303752 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.332700614 seconds)
  done (took 6.445764446 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284368859 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.981940697 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.368650382 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.946773156 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.947993171 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.950007041 seconds)
  done (took 22.72467944 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.952767538 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.955162733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.952752334 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955749924 seconds)
  done (took 9.692563923 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.932348796 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.66661657 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.931882127 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.947993981 seconds)
  done (took 21.35389859 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.700069844 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.349397133 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.69619951 seconds)
  done (took 9.621244264 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.447079151 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.134220269 seconds)
  done (took 9.457393825 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.189331996 seconds)
  done (took 4.065418196 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981961967 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.22377021 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.473318844 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.497986706 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.56615658 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.775060908 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.257479866 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.190320149 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.402035056 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.411420206 seconds)
  done (took 25.655949527 seconds)
done (took 141.629996585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.371256692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.980454029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.150063873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.307063895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.177383506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.149980744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.166161856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.298034656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.832333148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.828721201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.312475415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.177986798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.112792911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.966110805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.118558172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.964390297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.178143539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.389063234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.032513894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.214286612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.179058332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.959828678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.153219188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.973750078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.178356991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.104625668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.505187407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976706488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.170565879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.515453648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.110041837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.356532061 seconds)
  done (took 170.789283658 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.952944517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.95460258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953722536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953779329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.240383998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953707199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.955582389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.953768049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.006972876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.982725345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954784322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.246995755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956966491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95426012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959026276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953937249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.165737596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954763359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960039993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961823183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962923093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.121274814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.955274321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140952866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.121759364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956386568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.954597992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958811625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961788391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961182447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962015288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955100386 seconds)
  done (took 209.869352159 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.953879611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957277643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.955284848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.955779246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.955934407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955244654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9562135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.954906004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.439097049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439206543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963086864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.96539988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.96936961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955762697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969622263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.955654208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.968728002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.967107398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968790736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.972315206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972482869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.628001044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972016999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.637430533 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.965915684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969602423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.956111038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969784636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972750769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970904819 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97635183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.956770875 seconds)
  done (took 223.018930584 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.160606403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.962531011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.963204522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.892239489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.962724225 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961515561 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.956757224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.145200529 seconds)
  done (took 19.909246231 seconds)
done (took 625.470383724 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.437156842 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.28373539 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.144313436 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.988168084 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.242900878 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021783435 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.98394022 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.053691547 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.709246185 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.056309032 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.638773765 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.008814555 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.725073198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.012498628 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.106854087 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.047429414 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.528370724 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.623380404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.16198861 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.078300214 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.156432496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.945718895 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.066796462 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.752751932 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.756116634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.994813372 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148645406 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.535450887 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.996137383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.142256507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.735417355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.366417819 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.999052875 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.983169691 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.040820803 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.018636362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319324072 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.997263045 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.105661291 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.750975393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.056962801 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.594420284 seconds)
  done (took 107.199594243 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.952530122 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.951546044 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.949500334 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.951503095 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.952286621 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.951230671 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.950574473 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.950986069 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.952117468 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.950493799 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.950724293 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.951329058 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.950695091 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.952112712 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.950797304 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.951027121 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.952127704 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9541863 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.951502399 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.95137186 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.951725738 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.950965415 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966527879 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.951327961 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.95258744 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.951959052 seconds)
  done (took 52.647221031 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966998894 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.133106239 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.206457146 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988842304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.967205474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.971423707 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.987222522 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.972493858 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.970513929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969759245 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.075385697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.973533777 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987416416 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.206057798 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.986399623 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.967843918 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.967373052 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.967687868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.14066736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985072802 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.986688745 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.972424295 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.988059082 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.982719819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.970394054 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967501473 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.972520558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.471388416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.978013362 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.073751127 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.01231703 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.992667992 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.417109575 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.215613772 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.025038989 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.977375804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968619071 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077721125 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.975136097 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.969120464 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.988156016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.973775905 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.204816734 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.467000517 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.984036599 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.969365336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.480837771 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089968422 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.011576581 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.980956043 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.209110315 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.988496062 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.969614796 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.969486095 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.00571465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.974218737 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.96862353 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.320825642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.982267575 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.986718007 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.974365889 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.97062007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147163025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.979904699 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.134997973 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.980559782 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.976390412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.971363593 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.206160885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988277879 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.471721128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.985283413 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.970431147 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.075746827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.1385571 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.511846422 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.984572173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147183353 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.435797866 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.99658163 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.978340175 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.461585727 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.000789039 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.979521473 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.972166645 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.971617344 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.970708504 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.015797133 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.987174233 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.401730438 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.472302517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.341606216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.998746513 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.987066352 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.972066698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.322260882 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.980459625 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.972169186 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203074486 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.4816668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.988214567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.979745751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.46236809 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.989186358 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.991599877 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.981597388 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.212437718 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.989830643 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.015295213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972453092 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.979096081 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.974944884 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.992676345 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.979909663 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.972159002 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.448806274 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.100480232 seconds)
  done (took 244.351733835 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.968164837 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.970291606 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.966119968 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.970001869 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.966419418 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.971941199 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.966148357 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.966162843 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.972863009 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.966256114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.967539731 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.966934609 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.967706824 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.973234661 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.596492029 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.975310093 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.576706778 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.966364837 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.968841066 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975070122 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.745386149 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976497092 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.96815276 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.98366202 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.968702866 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.970257424 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.132793518 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.982083041 seconds)
  done (took 171.2416378 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.975008506 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158641933 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.994074217 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.01540352 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.986289179 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972498334 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.999244301 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.998787355 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.982180673 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.973238215 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.972881561 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.037113453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.986292963 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.118769158 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.008057398 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.006403705 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.080844277 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.982233965 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972965504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.97351205 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.004650807 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.969633437 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.038310134 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.104524736 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.994711145 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095393148 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.98094276 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.976121534 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975588262 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.094836712 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.991851488 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.03719907 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.006247537 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.996695349 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100319071 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.095340323 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.081377578 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.004514935 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.980653426 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.973833975 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.974666508 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.963042485 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09600933 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.996182178 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.977844187 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084081303 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.997964779 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.978745059 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.986152766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.974221603 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.991271778 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.996478555 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.046275197 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.11414762 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.012066731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.004939638 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.002510629 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.252121216 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.987003686 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.078547311 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.968804069 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.096482299 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.998550054 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.964497034 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.977291916 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.982219627 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.004878524 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008370891 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.082748891 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.984710534 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.078411999 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011177275 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.984345022 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.976312859 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.97905451 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.096868026 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.097614496 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.012055241 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.017454333 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.011066352 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.972641523 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.979239798 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.966336364 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.996141896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.983649234 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.095703446 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098574184 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.985448847 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.979901891 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.979866117 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.979612116 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.004710847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.106557924 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.016069785 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.07688886 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.046905166 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.055065152 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.994518218 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.991285091 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.982021991 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.043380962 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.994371954 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.989871855 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.30068235 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.050788267 seconds)
  done (took 214.113212954 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.433625536 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.034287794 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.03800823 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.302513758 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.402513669 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.887616692 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.028388438 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.028386824 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.053435911 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.215769504 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.101033581 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.046619461 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.018117923 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.003626629 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.029102536 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.049794627 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.038232085 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.360272683 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.164379286 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140667487 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.01319799 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.29553903 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.353095439 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.41299725 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.066204656 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.362995069 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.715307255 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175448819 seconds)
  done (took 64.678690803 seconds)
done (took 856.114366681 seconds)
SAVING RESULT...
DONE!
