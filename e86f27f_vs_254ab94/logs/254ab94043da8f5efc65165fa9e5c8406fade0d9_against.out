cset: moving following pidspec: 18323
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.65045063 seconds)
loading group "string"... done (took 0.543527297 seconds)
loading group "linalg"... done (took 9.199133931 seconds)
loading group "parallel"... done (took 0.177985844 seconds)
loading group "find"... done (took 1.438490392 seconds)
loading group "tuple"... done (took 2.285027854 seconds)
loading group "dates"... done (took 1.503100715 seconds)
loading group "micro"... done (took 0.210953745 seconds)
loading group "io"... done (took 0.602022164 seconds)
loading group "scalar"... done (took 48.613302074 seconds)
loading group "sparse"... done (took 14.663563511 seconds)
loading group "broadcast"... done (took 1.168663291 seconds)
loading group "union"... done (took 11.291652765 seconds)
loading group "simd"... done (took 2.900036446 seconds)
loading group "random"... done (took 10.723456582 seconds)
loading group "problem"... done (took 2.309092252 seconds)
loading group "array"... done (took 25.715819632 seconds)
loading group "misc"... done (took 1.159990396 seconds)
loading group "sort"... done (took 3.991527106 seconds)
loading group "collection"... done (took 20.44542788 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.673291781 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14563675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.226840688 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.357713953 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229305219 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151003122 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160510932 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.277830104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.270233559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.228737177 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127541941 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.561352212 seconds)
done (took 6.10370947 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.277281987 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.247599937 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168697474 seconds)
  done (took 1.052216319 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.067668119 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169308967 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08881695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.104526319 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106546341 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090676788 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107088846 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106695232 seconds)
  done (took 1.410697092 seconds)
done (took 3.449601627 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520267538 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.86899999 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545322851 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157972083 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31712107 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.320988117 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333981139 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.218265653 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087699836 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.104278846 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172813779 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403328925 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.435851498 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.994699005 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085148833 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110229025 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130042059 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.770481696 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07204081 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130990066 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.570647925 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194787092 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.110625056 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113729227 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195803885 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12758807 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17438908 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083605111 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669263637 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123334337 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195621422 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.075381601 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.17329888 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.23404817 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219412851 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088204585 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672276452 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195686044 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097583326 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096056471 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686291703 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125095122 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.159453793 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099424432 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087188354 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183187622 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116128055 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088603833 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095504525 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09606804 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157377316 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.451303409 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.088296055 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.15410025 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09987621 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682801707 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094459948 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275630902 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132247063 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10036533 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.069708771 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.099292171 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152488383 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.087975111 seconds)
  done (took 20.250781712 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150968411 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16238965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072718726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155249892 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135456275 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073244894 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093524517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071112402 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121947836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.233197055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133707106 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.160332131 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086248524 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082460769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14230323 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247910342 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.100181712 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118065133 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09615956 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087742802 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139052571 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.104578415 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088369838 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104949841 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162682379 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197425166 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10419268 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118212222 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092636779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093194017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136038349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156671014 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068037051 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09425809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18036576 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111952163 seconds)
  done (took 5.135183714 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.18278166 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23697375 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098474506 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.230454413 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173159624 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145031865 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169693681 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155519428 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.297834444 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.317069762 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175569327 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125029902 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092158375 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089643221 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080783827 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.090934116 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.551079719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179768511 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149354142 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.147028271 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101355929 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098785334 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367363549 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095975443 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094968789 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083611766 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09372486 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072048513 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.21967632 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0814099 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.177128771 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.077736644 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101133671 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125080348 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.187872953 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126197911 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117559996 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092627993 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073690794 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232059715 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09074576 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.089985523 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129037134 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125977693 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114090792 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097185453 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104886747 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223117109 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094064219 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123965255 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.089934385 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193240809 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.133783376 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078294 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09459855 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293111654 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109236927 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098466489 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076407092 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093166968 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.324485248 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11010375 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092372016 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074154599 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09730968 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088290295 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428419671 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108037072 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.988076408 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074773236 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158071274 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096650881 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097040831 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078182386 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096301578 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092538713 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090248036 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070520672 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090059296 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07042734 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09462643 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112937337 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077046834 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089685101 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139617043 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102715983 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091705174 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117992332 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093716373 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072054657 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121638514 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090269465 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.076235995 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.161006724 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101141375 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112954431 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097253037 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119435969 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091695883 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.235226753 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074933383 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120010593 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.091328784 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105452236 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107474771 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088718352 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077810251 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.086870172 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.072952252 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153519918 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074930774 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093145028 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077720631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104898271 seconds)
  done (took 23.402335778 seconds)
done (took 49.426358904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.501777416 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113743121 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097551289 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115072034 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113961924 seconds)
  done (took 1.658098288 seconds)
done (took 2.346683978 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.38640042 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199830191 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.112244853 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192037268 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08088761 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.217657742 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187494895 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105425714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216578666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096080349 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194334179 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095959974 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097116304 seconds)
  done (took 2.897075717 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092574194 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119205488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092331924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1070745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071077468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106324102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088028327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121541652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088772566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099349873 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071127512 seconds)
  done (took 1.743489329 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088767577 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114786185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080011065 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104723287 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072640889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102401119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087500088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118595131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087252181 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10098984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072143672 seconds)
  done (took 1.719631578 seconds)
done (took 7.042248592 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.12485524 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.024119089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.143453159 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195072322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368418509 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248625854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.598514746 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.17863712 seconds)
  done (took 12.755666013 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112524135 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137696869 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097104062 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076344162 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094706226 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079576664 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09704301 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080048257 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095962367 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082171086 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096677289 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079754667 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095093419 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080475158 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096769436 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081163326 seconds)
  done (took 2.237817798 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117467496 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115289034 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101601602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087403988 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099755321 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097890083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085122079 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100725476 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083912643 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100680267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09058093 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104464363 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103078895 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08462049 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103248594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091830408 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099371036 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087328368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10461113 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088546394 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106861083 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10114241 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090350107 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105949312 seconds)
  done (took 3.153558823 seconds)
done (took 18.838373246 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171289281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078270814 seconds)
  done (took 0.946693143 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142005508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144848563 seconds)
  done (took 0.990629547 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1061065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093028978 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136234714 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111612452 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078636223 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093443116 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120001904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097646958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078859122 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096618421 seconds)
  done (took 1.715297967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082133553 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097403561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091556164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143280477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106539045 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083894719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102070754 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08316025 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102853223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094449032 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08925944 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120119931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10370538 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105021898 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102053022 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09056861 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110592362 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104384038 seconds)
  done (took 2.51669752 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077287062 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078622075 seconds)
  done (took 0.8608736 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083723114 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093542178 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083450612 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10036831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081822736 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096935325 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081650808 seconds)
  done (took 1.328037828 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497862863 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267010643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.356048371 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113895798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138874633 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363369768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137148936 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111552946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111111461 seconds)
  done (took 2.843577179 seconds)
done (took 11.904621651 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.084501961 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220983319 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628444548 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.100995272 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094795909 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.137602181 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.317739015 seconds)
done (took 2.292508202 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342011555 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151696207 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086207632 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07733159 seconds)
  done (took 1.363864213 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073490174 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101700478 seconds)
  done (took 0.886307506 seconds)
done (took 2.967558059 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075808925 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075049943 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091275386 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075076355 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093665885 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077624058 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.127726823 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091748358 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076077156 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074450004 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091956546 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.075107551 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09266555 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075275146 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090819091 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075698469 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091269108 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076446281 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090585375 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07796672 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076459329 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094031343 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07690517 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094080742 seconds)
  done (took 2.78669133 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09988825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096074297 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083542728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100797919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100582366 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083588496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100021518 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079629321 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100375271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077730306 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100555164 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083477048 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094324063 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099259742 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079055968 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09985207 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082750221 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094980332 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079080225 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101006162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083030116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095289122 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099402916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083655309 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10034693 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084140171 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094738403 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07916321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099998658 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083730931 seconds)
  done (took 3.454213738 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08469235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07174838 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093778602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081505739 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09029541 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07671018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090251227 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074674197 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098223981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080476502 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098766038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078368058 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092233091 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081201191 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097943521 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082749774 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106057041 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077088491 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092467923 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081029578 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096597087 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077014379 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078262584 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095665728 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079177967 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092457897 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078723801 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095693171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078301448 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091854448 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078407344 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095373148 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076611289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101357948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079482386 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091590063 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082133215 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089247838 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078940485 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072323667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090146617 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076494741 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090184335 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083879501 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092615298 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076367852 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089258997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078594314 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093945345 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081219886 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090669271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076414885 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098222567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081945462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097440178 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075710406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076861968 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091775294 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07756421 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092127339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073306494 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090253206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080393121 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093535519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094105087 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100248067 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073253756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095797564 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077359306 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098912901 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080618574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105513547 seconds)
  done (took 6.936531456 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091426305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10505006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079509903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09496076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07755344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092611048 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085771654 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092931174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079100987 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103006768 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077575668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094903817 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07829608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095312576 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077572506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095874982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085777094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094321641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077085351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094824434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077204233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101919209 seconds)
  done (took 2.673692006 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234324754 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101767945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147701148 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09398492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117633729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110876931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081318098 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101424105 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098425408 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08837614 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106069804 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081478159 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116656622 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103899397 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088484501 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107309534 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097609908 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091135179 seconds)
  done (took 2.69101042 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095558692 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097838967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10259195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097406233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079921982 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09797643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104747023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094855888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097717174 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080616661 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107398745 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079714823 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096582787 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079487497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096432142 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082549663 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096946048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07919947 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107056176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105893 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088605749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106445352 seconds)
  done (took 2.801329692 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096323661 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095519945 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112973179 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101066409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078940669 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096287357 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102860456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080709512 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103676831 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079676862 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098362114 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077824131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105588434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079813208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104534442 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080292294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097265877 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081331663 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096972648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077954006 seconds)
  done (took 2.573557415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172675478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095008079 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110432755 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124083874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094615021 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110306129 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108233696 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110718501 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109757417 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110322013 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11125584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094760261 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124749578 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120512886 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095186866 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124820037 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124047796 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12382201 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095355803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111693392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127827391 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09516402 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1253204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09509904 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111994214 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111620441 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093902141 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12099481 seconds)
  done (took 3.884586026 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077416243 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076547823 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093905567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076762131 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09503497 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075859778 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093859346 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077689764 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093040586 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077731508 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075897535 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.212368397 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076596431 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093570081 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076655087 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093557137 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076642703 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093997823 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076137089 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093449538 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077930652 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0757111 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09359579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077069476 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093721947 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076500677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093360907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076566272 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094012497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076878781 seconds)
  done (took 3.372190846 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089317364 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105904302 seconds)
  done (took 0.929090791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086773075 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113072215 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078194224 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095175707 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08779704 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095869338 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089149299 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103989752 seconds)
  done (took 1.482218266 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.126974682 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.145596108 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101135694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108512984 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127315554 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.137806558 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142160217 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102653487 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080525482 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089399662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137887353 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.074574857 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.099800896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080158158 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099120267 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088474789 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096318892 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088520383 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103555047 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08042166 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100908631 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090455532 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101825835 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089010722 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091778549 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.085453014 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106131242 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108404062 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080003555 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.102448495 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080195457 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095983534 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08266444 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100557757 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079120061 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.144105703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108945102 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079292441 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101193134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084336241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105492839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078175889 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102809287 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080388904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103995582 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100425597 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085410421 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078947747 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092410232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075015183 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096490264 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078368051 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096147075 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084344354 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100800832 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108088543 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080000717 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092376212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077945243 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095066024 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08178502 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095586885 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086088462 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099828576 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080046634 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100705662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082145164 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096634074 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080645287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096615921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082729116 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115553352 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.102470219 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084247086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101887281 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078835935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097311499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085610182 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099100021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.084124947 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101756339 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086755828 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09785516 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078365856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096678346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085329352 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098729807 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081211502 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09025854 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092962131 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098021679 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079600198 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093159451 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080735159 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.096460681 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082232164 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093354015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083249912 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094688178 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085419173 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1025918 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076393763 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.103334404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08519049 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102381724 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082662691 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138648481 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098900289 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078166556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099119321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084584141 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095453944 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082009418 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095786496 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076047696 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096490291 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084239308 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101348668 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080751393 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101238112 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081120709 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103675432 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080188327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094992678 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077389835 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100774185 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087848067 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104377339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099156822 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080319585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079388165 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101085599 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099807309 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081062507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10271736 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081038295 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095321657 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08061831 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100765321 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085055019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096122689 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082170287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102143775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083492738 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100109273 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083620789 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095650875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075536704 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102183167 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078636538 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097583202 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088085224 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097386067 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081218913 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09703366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107071495 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081395096 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102804668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08219579 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101309649 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085428688 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090644683 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080779352 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098069949 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.086691433 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099652382 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080080807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095924066 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085844759 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093455939 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082793649 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092265531 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077116968 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102626645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081118351 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082338801 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096898794 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113382289 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093875054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103620205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.082091554 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100002572 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083715178 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10048978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082673878 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102921646 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084803241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.100704232 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081519966 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101564916 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076069333 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098570383 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080978647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103681188 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07344592 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098335038 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073956122 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101307751 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086068499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101875549 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085242544 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099894685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082217286 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106660091 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07903302 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101738448 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.075910242 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102478487 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089344438 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102876392 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102189926 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085899662 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099441805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080988511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107125542 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080947512 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100203743 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080255684 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093561218 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076652193 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103026606 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08273182 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097477151 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078276809 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102514367 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086491744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099069615 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07612372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102374765 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088428304 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096752688 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084389643 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106141031 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082025968 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109821439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.075581961 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096437543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104472209 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084056225 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078242345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.098585482 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081367642 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103566287 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083042589 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098298833 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080880637 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103909595 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081235536 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096065747 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.079826698 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099868415 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076602783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098832072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083488985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099195592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.078747948 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106588394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10403918 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.094093243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099205879 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082820746 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10374904 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086004832 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095851657 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085809445 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096517222 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076220055 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097760384 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073913208 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098436086 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.078866211 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102128881 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082339902 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100653191 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08363632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103732989 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.080996461 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104467635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112405502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07615383 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09371652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082099414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101133478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080063709 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097305219 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08143516 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102099445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08400597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105507435 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077023796 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09648517 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084496137 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09805712 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086217592 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10409489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086462439 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096974273 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084255004 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09833706 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088205946 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09562833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082367328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099946686 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082719814 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098233446 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08050849 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097112637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.075341662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098122677 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086039741 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095449818 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083679691 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098898569 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081281374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095946891 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079337094 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104328178 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076874272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104834999 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078684708 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094579747 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076402265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10243774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083485118 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10322102 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.078220983 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100101102 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08640889 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100937291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079070477 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106910744 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087714512 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10423805 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107908633 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.074516126 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098834482 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089514646 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097927504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083042283 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098481306 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07775871 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104917425 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086680939 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103257914 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081529144 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095192697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079982774 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103635165 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083228204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102684596 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080996621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103031539 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078574221 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101455471 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085996105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102415569 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086078918 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103087738 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084200597 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098367308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085438757 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098853627 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077583815 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094569919 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080736477 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105215801 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074754141 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102043678 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084885132 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097849511 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081899365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101559034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081438199 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099859259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085540476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097749308 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09132687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097584462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080073816 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102072103 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084187956 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095010661 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081258279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097764974 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087003239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099816506 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084544979 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102330713 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084854226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100864066 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08535944 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103706757 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084776593 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094747631 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087068195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10635942 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082254548 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099436121 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082011299 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095277749 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08255831 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105965296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081200097 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106790519 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085856088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100486013 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081610841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10377122 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082751637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105323961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0780097 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103515702 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076816737 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10624755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082228375 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105004564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098481161 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077502122 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083593999 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104173579 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084022109 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105938464 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10554098 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077638848 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095380757 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082723992 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098811401 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091122206 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098286193 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082421986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100573224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081809726 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098857355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087681818 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096388701 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080259335 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102521319 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084229136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095974125 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077599761 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101581847 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082876852 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102870779 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083957318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097075817 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083654746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105718555 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.081814375 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094609431 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.080996105 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106034867 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083865089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099565634 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077397313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109561953 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085594649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106941437 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07805764 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10295796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08100981 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100680574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086741549 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100863938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102003901 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082084213 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102952995 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090930232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095397867 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07886962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109309175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084901885 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107211625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082209208 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102065271 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087773543 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106187946 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082937532 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096218299 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077721763 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097306989 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077412819 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100252149 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091079649 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10213164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.080867519 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102634483 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0837402 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10098511 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082807394 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096604256 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087825868 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099818766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088389231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096299564 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075621843 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100482842 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085263906 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098911682 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080231327 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099291689 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082777577 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09637963 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081442255 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106740468 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083935444 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104094996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083424527 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099918271 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082283973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110641032 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080243309 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099483818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092085432 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104901723 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084487244 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103208438 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088145932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105249604 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081591399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106313488 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099363753 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078689333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105917738 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08808842 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112873867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082770343 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094228754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083996391 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097004284 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078262813 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106609819 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087630908 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105787084 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.083977505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099028249 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08844614 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100824638 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084548126 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100361488 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.081344846 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103028593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081971231 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10157825 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080597148 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106882226 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087426912 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104555699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088709959 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095074612 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090620617 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10664149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088438205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099058336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07826639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097418005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083362179 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107186729 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086844247 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103661052 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084201457 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102318915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085607565 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102880611 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081942406 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107873779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085100272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099925196 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086135143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097817258 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079448925 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100175695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086333341 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107006301 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086384534 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110888161 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087054369 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10201466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081128862 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10487652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081964315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104701522 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083740254 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099910495 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07809214 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10580634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087399429 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103350864 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087598757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109139141 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101021946 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087273094 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109166507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086407579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099244863 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085502445 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10104673 seconds)
  done (took 55.943699195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155647766 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09075197 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100950082 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082930151 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130263582 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083829472 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101849749 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0836786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104132689 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113846085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083196979 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082114635 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124193552 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132598698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128341162 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117602915 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082154851 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103261575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081793878 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103032347 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104610123 seconds)
  done (took 2.970760335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105356016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119590535 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119183972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101634288 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112492597 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116955927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099886849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116797971 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121110112 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112968049 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103005244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117189098 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113433852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094646786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113335637 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11425166 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103139796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111119746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119200831 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099739937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113545553 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118361262 seconds)
  done (took 3.23032934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091274057 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08523489 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106689215 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080569732 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103886949 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081360236 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110738841 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.081369311 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111206362 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102036586 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079477455 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.079940842 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102768625 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081725818 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09880033 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.081486094 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10967246 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085505813 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106530326 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081259653 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117260952 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101386381 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083573654 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.097327882 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095829124 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106273488 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082398683 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103416978 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.077692482 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084539721 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101709022 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08391098 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104686859 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098250744 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.077367966 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085026958 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105416238 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081689031 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101054103 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080065112 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102992131 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086621089 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10760085 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081671246 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100972977 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080961399 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104447924 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.081313935 seconds)
  done (took 5.260763881 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120838006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159906664 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087583694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147974518 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124132259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09636213 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107232035 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147386027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084912034 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108461697 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127565578 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125333413 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091143615 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112079812 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087072014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10938047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091255242 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106906985 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113799968 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088481207 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114975676 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090409246 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122831978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124144327 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090584649 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107362447 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10784817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093284343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122268761 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117026762 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093429741 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114104766 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124118057 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092059481 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108246894 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089252292 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125677192 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109831919 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090202338 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105801103 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089473688 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113186791 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090972266 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126212388 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109952749 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091898402 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109039558 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104565505 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.104343892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108834963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117149734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106719541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110304801 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090236905 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112772071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125279408 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090822724 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107328037 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089945462 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122766955 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10618199 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092683249 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125241835 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108045547 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097373973 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126657073 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111532561 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091764125 seconds)
  done (took 8.287858494 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121146153 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11293963 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125494881 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106819746 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112926139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111295767 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093168832 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111547159 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092380905 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120678128 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112527529 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199047808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088795908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119571739 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112645585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092935559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113094979 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093027816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11401166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111840094 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093380001 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124914594 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11186503 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106519044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128946265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109097932 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093225101 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112309331 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125499164 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093279506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128628887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112785316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093056542 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125814898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128274396 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111992602 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085607051 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112061834 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093884895 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112690991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089170809 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125985984 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113414513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089399096 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112754004 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09302927 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126615818 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130257798 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119516312 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100905423 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114125631 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125890517 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093345347 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113221639 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125896618 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13435641 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107696473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125965096 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113692628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105927009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126393271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135099463 seconds)
  done (took 7.788673526 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082917888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081428542 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10305844 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083084755 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103304883 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083253675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102343726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083067814 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102307977 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083148009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101578362 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084006256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083046892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103185618 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083021817 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102803468 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083999665 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102785013 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082564555 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102387184 seconds)
  done (took 2.634150907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09559982 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127272373 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086834283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116149604 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087036413 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116234162 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106240926 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08804566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106030363 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087339363 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118143166 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117670826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088350647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114957912 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099409341 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115459153 seconds)
  done (took 2.466953104 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.110737684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128497191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.166055245 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108835934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087689169 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114674852 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087284613 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108412518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085449033 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112841689 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090860664 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111065477 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087012996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105841278 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087492886 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111146092 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085003042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110445759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086069743 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.164611648 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113074506 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089201683 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109288264 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089220777 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111626291 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112850586 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094844161 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106752031 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089086512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107177545 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09012422 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116541238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086216172 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112928517 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086638692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108305045 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085901555 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107428055 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110414943 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086600254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107116031 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090102606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105972193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089409109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104416709 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08827564 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105177941 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094263769 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110391366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09192983 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106207686 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092655466 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111654029 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096949338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115256709 seconds)
  done (took 6.474527715 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101540286 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107572778 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100907652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103477156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087936542 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109981812 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088236247 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109281782 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088570109 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104832435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089036643 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108706136 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088295603 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108025695 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08851952 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109339008 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083694504 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10912407 seconds)
  done (took 2.592099071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093250657 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106500761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094129049 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10725613 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086942653 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107028479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085510622 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103605013 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085790342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10571434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087758984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105934922 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086429818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087066802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107335433 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08680557 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106706921 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083958526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106393956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085413577 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106189727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085118031 seconds)
  done (took 2.916848519 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103569634 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167653098 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119259164 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179330229 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.08627521 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.107852326 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117860396 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088401064 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128368647 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.085953336 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106411426 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.085102214 seconds)
  done (took 2.184226511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114116377 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146265541 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088350332 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108579513 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119856368 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094161065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113339738 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09354841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125706287 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129592736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093810785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125263516 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124477897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126067987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099292628 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120753349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113456976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094834441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108852565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135333916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094932467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12511449 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115044546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093633323 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113220236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106654104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125720957 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130825622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113239479 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104887743 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121076971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112761565 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105788366 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132042619 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106724808 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105506744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114603762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135704733 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100153467 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127590789 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10808764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099824403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125530631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123455065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12389135 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0948659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123261373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093184674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114894434 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14549098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120710557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107356868 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121292634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125536497 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125738569 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143899568 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110387325 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12732333 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120677295 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131367065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106152566 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120537139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127988877 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131243544 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100980909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127738954 seconds)
  done (took 8.475690831 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133160645 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110012177 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092633858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130951097 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128107381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114070888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094169642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1133545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093783632 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111164675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164226426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112885479 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110450997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128979137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114127854 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094267452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114956726 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126981005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090093159 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146594736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114628312 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107263052 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128489929 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127999625 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131050434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120484273 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094875671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113827785 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095585906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115419741 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123318278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09521555 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128113234 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08862085 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127369118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114237104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094907614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124429886 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114322807 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100143723 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127988378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137391709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114685261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095722871 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132073149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114704733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094603376 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110584085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094570164 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110503274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131161441 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110623022 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131050542 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128930936 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114742069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095368046 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114574592 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09457569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115806755 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121563457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10745679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114798459 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145444062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115315362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094838011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129066343 seconds)
  done (took 8.398162184 seconds)
done (took 153.920992988 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.127999362 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.167968212 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146419975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166489419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081434196 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138347888 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11576857 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147185592 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102419951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081419778 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10255693 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085960341 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169288069 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082734671 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100792704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086232037 seconds)
  done (took 2.713408428 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176870914 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.3362286 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120972176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090377331 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112370399 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084554417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112705608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112722234 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086829876 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116693518 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085599184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.1057999 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095279716 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105658617 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085491985 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105564474 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116473535 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084915829 seconds)
  done (took 2.954545327 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110721946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156562177 seconds)
  done (took 1.089690805 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121188874 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188158866 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319372517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153003745 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.114807911 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129624017 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157013168 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10250269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.215262505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105991945 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126988 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108478951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115548373 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116620931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120148498 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08955384 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137825376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09875905 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118386577 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090882799 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131756366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11253016 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095710972 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119462764 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18550323 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124949739 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092517159 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113496851 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090951807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119499382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110029301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106985564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124995965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17420998 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.116839209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170140316 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121056814 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108489667 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098396002 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108907961 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094534319 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114852069 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128874977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088859073 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114123382 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099542248 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114724051 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112798864 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092654733 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12241965 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112803185 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0923649 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168548217 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1239124 seconds)
  done (took 7.554727294 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850779399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15860442 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08684625 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.997974861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139853197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124903562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850784696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111886534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267973076 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.845522568 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125208839 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099864115 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248465403 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284225153 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.165975064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362194443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72504191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123854806 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118977281 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159166291 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119630397 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136249526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110123225 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.4569824 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090197491 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107168397 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097106386 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121444782 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171292696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107986124 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093556056 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212579968 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275482162 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218070445 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088679446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106652868 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086005356 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176343646 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290351746 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240720964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175197607 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105073379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086072513 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118439264 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130694429 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083808675 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192717 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184499898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18397456 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114349342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100350884 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121085833 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11669622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172477834 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082944519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362138381 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360700592 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109252754 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118154982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104266721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285345185 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107475885 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243861234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116443445 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.231534059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107199371 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830503275 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.177326759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085216262 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1156614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116563655 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094624485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116280453 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172466681 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388010985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119962547 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092865515 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106703592 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222616578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108253047 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086539834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19493106 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09015784 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119812733 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101614209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121038734 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179550067 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281730885 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100074158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119847054 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113894874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102538137 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110188706 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224951048 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23847959 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169618309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.24453459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096517424 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194279613 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17616532 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114939976 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181523414 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095618588 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124338849 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116486094 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233649353 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147783057 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088083566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114457667 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09790217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150138999 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111737256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097150814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.201404236 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.472603109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.196823837 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085255277 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111690813 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099118984 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192699605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097243895 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281439191 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119235345 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178334147 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116401695 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084542788 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118994312 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176164369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117418643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098635407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117376042 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120135881 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26187498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241106661 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100837507 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252041375 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180829675 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116473958 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185777916 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118838444 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181700265 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120121038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095647168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111614871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831509807 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103312599 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1201969 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114137141 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198168357 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087815182 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107845731 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088285283 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103943145 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80813475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11148606 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084627718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10973243 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095206535 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119752424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117115839 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094667825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193002398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252107334 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101672919 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118574371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086160282 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193154964 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.089831945 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108668334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087547024 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108651843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098234761 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114420567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088226472 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204610129 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169906364 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.239705841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537966721 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08807422 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107755464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249626759 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087917511 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327393202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119531949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.243176624 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181059328 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083284599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359401127 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.202803339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199523234 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08947222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.202034085 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08487204 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117815687 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171550002 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107675572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097472316 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16818666 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124734298 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12189561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.179945561 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087713259 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259565404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08523663 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179413984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11155298 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095466395 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332164854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10974521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126565205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172022085 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113766218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088707944 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.739992817 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092846299 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12270356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094494216 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2412215 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.199051894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098188326 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121176831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122266926 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173735845 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223420222 seconds)
  done (took 45.342249788 seconds)
done (took 60.47212944 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305624053 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272624737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.331326903 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204413019 seconds)
  done (took 2.039417684 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222606286 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155878835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.185720538 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106974286 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.196044223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084616398 seconds)
  done (took 1.797626699 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.515627318 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.39480418 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.355351816 seconds)
  done (took 2.117156314 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267931388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.288338528 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334169438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.48574447 seconds)
  done (took 2.330910994 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.248959824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131037528 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101939469 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179550496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.239179047 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187275129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150196525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160842579 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130481801 seconds)
  done (took 2.423963613 seconds)
done (took 11.557451683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.392031631 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.165853176 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.271811545 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.3436369 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.374057197 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093295406 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.199436443 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.230636443 seconds)
    (9/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.201034488 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128310762 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.259178372 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117912018 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096726423 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.219388595 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.264427261 seconds)
    (16/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20105283 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.279346098 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15338141 seconds)
    (19/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.229019225 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.314867371 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124690338 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094577617 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115105062 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128149871 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118882484 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16499898 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.27188544 seconds)
    (28/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.262776158 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.312531201 seconds)
    (30/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205129206 seconds)
    (31/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083625937 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.236925969 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137552517 seconds)
    (34/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.176031962 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163812386 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101898402 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094040775 seconds)
    (38/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11690549 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.201849907 seconds)
    (40/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093785662 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.256066439 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.232579059 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.176492908 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202833466 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085981453 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.105106335 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102715124 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.221818113 seconds)
    (49/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.212857454 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.186445971 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.24192609 seconds)
    (52/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096101104 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200135394 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151665364 seconds)
    (55/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080204121 seconds)
    (56/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077583833 seconds)
    (57/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205998764 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117450248 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094875365 seconds)
    (60/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.246534007 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.111685258 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079360445 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.223714668 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.221443011 seconds)
    (65/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.149712761 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.148866468 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076809344 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121592444 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120462105 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089776759 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.177662468 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105058614 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103817087 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.15079407 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134433394 seconds)
    (76/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.177705028 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203244171 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206371339 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093573232 seconds)
    (80/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.179639272 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07866364 seconds)
    (82/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.207548968 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118182034 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111289975 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103763815 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096863159 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.180995959 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093422859 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137096418 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079369675 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.100877285 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182216442 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112740596 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177598557 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093776233 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.208389757 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086958212 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118029423 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078467674 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.100171846 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.242383874 seconds)
    (102/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094933006 seconds)
    (103/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077405247 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118603823 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116879051 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102880389 seconds)
    (107/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083980684 seconds)
    (108/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103606037 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087237073 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.10284759 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139982637 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103448643 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094540453 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111915055 seconds)
    (115/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079032439 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115785135 seconds)
    (117/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.150738736 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103157879 seconds)
    (119/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094632474 seconds)
    (120/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112093786 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095437683 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116670448 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.2031459 seconds)
    (124/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079659684 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089816279 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120086727 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07942045 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111604987 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093339457 seconds)
    (130/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180069575 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.134659791 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114555611 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118074978 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094113293 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115084253 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08124232 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07853598 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.10439407 seconds)
    (139/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094199052 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118027888 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095423592 seconds)
    (142/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117437739 seconds)
    (143/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078986911 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.231563905 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103694589 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08181935 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079659724 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120154918 seconds)
    (149/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078533166 seconds)
    (150/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.108480324 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079588795 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07838167 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122768671 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118904539 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081144869 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094438607 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112643613 seconds)
    (158/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078270608 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103018266 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08032532 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080392708 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118244531 seconds)
    (163/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079799215 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138094078 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088168076 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109048728 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080448374 seconds)
    (168/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117827041 seconds)
    (169/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079136236 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.079057516 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119167598 seconds)
    (172/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079587508 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116893363 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080209643 seconds)
    (175/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.101710218 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080226005 seconds)
    (177/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086856613 seconds)
    (178/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.101531195 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11224583 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102739654 seconds)
    (181/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08617438 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07927154 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.102593994 seconds)
    (184/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080206613 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118383111 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080434696 seconds)
    (187/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110528894 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.180934653 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104403177 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0807586 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101440911 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096482462 seconds)
  done (took 27.153097361 seconds)
done (took 28.008339954 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225193614 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102866102 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121001745 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097106287 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.178654085 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125098334 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.106250133 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.125701236 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125260533 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095604709 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110132372 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10457691 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120956032 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178465628 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10054543 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11377577 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089759798 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12740183 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106735816 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132246843 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.178837398 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089532436 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128257659 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11255033 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178771785 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091358234 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11999565 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098279196 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127114098 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0962575 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11913766 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090415141 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13021998 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105051682 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111612328 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095077187 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111750097 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087470943 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119089012 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096094413 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128510892 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095717226 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.123772332 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089974198 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119740008 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117856506 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089374547 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124409533 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088480434 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120202543 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091908945 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129303937 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093871689 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111119423 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088981955 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113952712 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10242644 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110915625 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104461097 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112616781 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090133919 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111588945 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097219161 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111910403 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094069779 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112831778 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095429054 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.121363302 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093039724 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115311296 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087579269 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117638612 seconds)
done (took 9.078262794 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095965948 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174885595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.179305192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186631821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145529076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130836312 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.110906862 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142738407 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105855528 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139221259 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149111496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.117812608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215412528 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103589997 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131685547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097533624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128008183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.121543853 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189217054 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114405211 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14839237 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125205406 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124893823 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133955799 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119174976 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120531556 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122243928 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096471253 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120847321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135724176 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115636369 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.119593412 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096427098 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135508989 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129623963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103188897 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130752579 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09775387 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11860073 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094765177 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132753191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128982491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095201286 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131905144 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095319671 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129346775 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125708228 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102822755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122364828 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09841818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.121738193 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147530912 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.103632268 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130348041 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.102448691 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125452375 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102064917 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126639781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120185335 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.102991752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118840335 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097787445 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.122264419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144456054 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097831456 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125684374 seconds)
  done (took 9.11262043 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115705563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154547603 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128186113 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106630541 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125071275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085386697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1093347 seconds)
  done (took 1.727240141 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088619881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182959581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182095108 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182761361 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17898889 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.192129896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134095086 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088745648 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14838185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123593557 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182716337 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213700745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096045027 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131441786 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185805594 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087014488 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186462226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114084159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124357421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184416901 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10448076 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142978514 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102846976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113535224 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176035638 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.089719997 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261977501 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104270194 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118225452 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099701162 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124848299 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.19804737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178190187 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128608143 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093003787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.180314729 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177223299 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124616029 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.191617241 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092379788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177559997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125259545 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101596556 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125811535 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099252951 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164078976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129954643 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101518203 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123549435 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183937901 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127033764 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178748147 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098748996 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123664461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.101735879 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126522213 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108762733 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124262559 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185854688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102586501 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179606071 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179636224 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.177650833 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179958392 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137175152 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178973068 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.177661335 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098365431 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124454733 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124756248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182177742 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100480681 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127197715 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166534764 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103809709 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18016017 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.178802961 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121837493 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104043419 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117680198 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0988005 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113265063 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.167986384 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10004554 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.367124801 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109971555 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12883416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.100224792 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121007941 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13891199 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.099893204 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127337662 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128502114 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100520224 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13130482 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.183217944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.101015289 seconds)
  done (took 14.586626369 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094045812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.088773897 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119954784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114172314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09223991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114642074 seconds)
  done (took 1.548106489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119928582 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126787261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112277977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127151097 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182447128 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187638141 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.189605599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122710282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.120272823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137016285 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187699941 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190402703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.187403736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105896752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.189564308 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129606241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.186867557 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126357812 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111662389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123121278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108425289 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130209727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098463972 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.174626305 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129811797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129551669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10179925 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136253635 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109814757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123680469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130018717 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103613862 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119778338 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.09834357 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.18743048 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12080131 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122109957 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108039369 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130502172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.103861621 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191436765 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123631659 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13525531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.108251186 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122607725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095360928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.132354448 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126409474 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.188857461 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108579476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133322423 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.102387406 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.130593796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132277904 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095154676 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122879297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.107994338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.187839461 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131646045 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138245892 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103990121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130138001 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09954811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132476356 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104317049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130791874 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119852248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10287355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122748099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103406526 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132607931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126457391 seconds)
  done (took 10.376779803 seconds)
done (took 38.247551314 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.094420049 seconds)
  done (took 2.014365936 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.906012112 seconds)
  done (took 1.828631241 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.880311421 seconds)
  done (took 17.835231425 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542525798 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.631042515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.91863136 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162913353 seconds)
  done (took 3.178761637 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.980011219 seconds)
  done (took 1.922055517 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337625045 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.251949949 seconds)
  done (took 1.518184157 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723702796 seconds)
  done (took 1.663619019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.584737281 seconds)
  done (took 2.513886036 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368261999 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192604542 seconds)
  done (took 1.505852017 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.65596888 seconds)
  done (took 1.592484737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.79606627 seconds)
  done (took 17.740927988 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221428301 seconds)
  done (took 1.176206575 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311002226 seconds)
  done (took 1.259144834 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.533709629 seconds)
  done (took 4.478146272 seconds)
done (took 61.156037008 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102502656 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129359405 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104674541 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126030917 seconds)
  done (took 1.400721353 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107456325 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125719268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106591499 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124186586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106923642 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126075671 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100236486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129526292 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100323168 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1275783 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125679664 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100568314 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12824651 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100738986 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122747005 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103868694 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129640874 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101519787 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127672448 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101721598 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12657218 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127085373 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105606675 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127773836 seconds)
  done (took 3.732547858 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100239737 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117320845 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096607002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.092220886 seconds)
  done (took 1.353366772 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109322311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139317403 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113264713 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132548045 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113798526 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137766492 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123279058 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097485601 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123806111 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109893583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.142860196 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138726143 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113400332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128220402 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112025881 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119399498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102674683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138955844 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108373264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135258615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124362057 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109103024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130836263 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110250799 seconds)
  done (took 3.86808215 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177322034 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.140031814 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.149726973 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171758899 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.130356481 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.12434368 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152271004 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107171166 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.132335813 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.102599071 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.127835103 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.173651015 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107510087 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126971691 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125073548 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105110543 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137527609 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106995304 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169717747 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.130914462 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132156836 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.114412533 seconds)
  done (took 3.900542571 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107401373 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119083152 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091025047 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.1182241 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108599922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122492926 seconds)
  done (took 1.626339446 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096808876 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087808058 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118599452 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089143294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117288434 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086516813 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112397745 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088254164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.113111865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086876674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11364607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087009421 seconds)
  done (took 2.151818443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.280343291 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118057699 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119391939 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093770056 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125994879 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092061371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134208826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092036671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.256956333 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088834753 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136177451 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196175539 seconds)
  done (took 2.693523426 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220879264 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102425172 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321418472 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392699412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167021082 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17539553 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282536178 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175762522 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199803656 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121387409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231094258 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140474622 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163807029 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193158079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146911719 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.217515233 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186006425 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215563525 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156423865 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218278906 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172638436 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179710496 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191841218 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160020941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11640209 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160470375 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12852225 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108324243 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183841476 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178525454 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209393676 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129438941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150000196 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211656244 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225875509 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188472236 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312512727 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112094063 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204084823 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192226332 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289883545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14861375 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208905115 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164425889 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135130047 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193499307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139569783 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193908123 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139621042 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149000181 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195186306 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186636081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196453218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142532356 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308879408 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154448546 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157741173 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188244187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198282884 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203360854 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179691288 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103354857 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220563571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193385407 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190660614 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156218633 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180019163 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107896439 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182401982 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207294401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194064139 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174622742 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224703584 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108675292 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170555763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17905321 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163137778 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190770482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172265866 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099487939 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160903763 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143588729 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106597083 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195227345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128077469 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218439199 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141792729 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.39180043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216247747 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166529891 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17142428 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17420702 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174211065 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128448965 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129505663 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128009829 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169774404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166893687 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143759344 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166549244 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148141408 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.114614626 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161420886 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128206787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144701012 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158547003 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17700881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171358073 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137674157 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150247447 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157223659 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165896641 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18106902 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195121791 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137202298 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111674363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200046716 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166726712 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142815745 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183866517 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201615691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173775677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117403051 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17383858 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229526544 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124264124 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199067159 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145355137 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139647395 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165383177 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145939974 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166848703 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163110852 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134677979 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.137213354 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232745932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106584583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144928325 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182701208 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143987576 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107641847 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148261762 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115369296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149837913 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154517601 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145177777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136960611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17146835 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164366677 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167999557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143442486 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182958822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111364071 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170927482 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156226968 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099627688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219508485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195439124 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108379878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208300488 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.206168096 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209764265 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170323305 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112377904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187431317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134533077 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099564819 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17063592 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169347876 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173667969 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195845353 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23026449 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182041189 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163477344 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130552988 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176776937 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185487972 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165187796 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152532109 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168548755 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179661885 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100010072 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.134275154 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108118308 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147842945 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136768724 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111965376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2183981 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146053879 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225252306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168752291 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120700672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193377956 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138024513 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173289426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184202552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145784259 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197834623 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192219761 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180307554 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122267385 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17160925 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127498467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106307787 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144384982 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178569186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140439402 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113139881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151196866 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193796187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184575715 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159502656 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23885526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178269779 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202400314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100632437 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172016601 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180634666 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167888364 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168477886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143581358 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169653689 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189173152 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144162084 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202037559 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167832434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174396455 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209756004 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167271447 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109628777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158447312 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175823567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147687098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146130485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153634755 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137491984 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162891697 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.11838542 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136085896 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192192999 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151905994 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187957466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166171134 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182423297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131129891 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122502201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172424926 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153850819 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100209612 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17930797 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198267286 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152956269 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167484435 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183055323 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137165919 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337294199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199810133 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195565512 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141743527 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149972497 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147239311 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167727363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173006991 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188892405 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150534878 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189499146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170686325 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123354776 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137298818 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155664535 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130254335 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164387005 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142530935 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.171916358 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122193498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222551077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120873448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170993252 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170250114 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155607373 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137419135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150303598 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20602485 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16852054 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187419597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167103006 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177143319 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210521754 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129946169 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108463618 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142056324 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190579067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10990661 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172726693 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217772121 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210684824 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172061262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177230804 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116871391 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134251746 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16663648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128556676 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238030792 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141702828 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119385254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202550321 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16195914 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136699783 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172364919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289798239 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125687535 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183754104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138710472 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28364812 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134528804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109420404 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168972467 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181130784 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143450342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167726464 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167841485 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152562171 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169353126 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144067002 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199380833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220190896 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175274057 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185456964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152425779 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167334804 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17209908 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186631844 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122551284 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155921635 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171055603 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194762277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195061173 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141740471 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169267828 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14150208 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166525915 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182779622 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141604845 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209857891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137084508 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172282251 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119169556 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133693114 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167966704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192878468 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138905993 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18676492 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171212556 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113656818 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135596984 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151962544 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141032304 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144389732 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136388495 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191471687 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107458543 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174021218 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19322493 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135646474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138148719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152797169 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139961827 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149708491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125773994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139480629 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15094957 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188823984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1412611 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185610783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173105464 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173624467 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16908048 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152302919 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646327584 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137068063 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195139219 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155714444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198415429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128996577 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175219287 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168815355 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159131357 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173786716 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158151542 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203217015 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16942359 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171108702 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138665414 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151042703 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121586372 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141894858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160591149 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16890129 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121501519 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148603878 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171352817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12454192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153951107 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14750832 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196449051 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156652142 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195889295 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193396645 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114698852 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173506416 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18385063 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139756716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.174582874 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182295763 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148464006 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128122086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142799016 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146014074 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163763118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130449636 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171295938 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172240241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168586329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140858997 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144954407 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174048971 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149769428 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170137113 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108411566 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164426517 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168921613 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11191111 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137387302 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167804487 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169047896 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.13667824 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137167245 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154008498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216373417 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102304452 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141121129 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290563435 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167002221 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203019215 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163802599 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113531365 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153240034 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165220693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14083461 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172239283 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138908193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109104989 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141401798 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192856608 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168195823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167047406 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164080622 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170428153 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240130778 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.124490901 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275612071 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14698564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139990361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142888561 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139527169 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121507491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142402559 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146881894 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202107452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189577913 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165045917 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124034083 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138338722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10181489 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140295585 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172733267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162678856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142797007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152868686 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129443837 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123112045 seconds)
  done (took 80.794328332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160411203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.141531781 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151809593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201319799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171254031 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2641685 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209650416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234829987 seconds)
  done (took 2.581085501 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103434148 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138861312 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145803813 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12643749 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12544768 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.386730054 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.138041846 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100775942 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.185796179 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138982621 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123820253 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.597701879 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126900291 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.124749565 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.097407897 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126343543 seconds)
  done (took 3.823888227 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.241924945 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531641438 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.912251857 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251751102 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23212274 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159776592 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740690409 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19106485 seconds)
  done (took 12.301833441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132977288 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147850408 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.288708554 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.250662749 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136835032 seconds)
  done (took 2.004812125 seconds)
done (took 123.173676278 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105254228 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130883881 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105923173 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134791058 seconds)
  done (took 1.512300425 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.154274209 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117213599 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092207822 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08694641 seconds)
  done (took 1.495344 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.493738001 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118746384 seconds)
  done (took 1.689162215 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130388679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151096394 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.119915786 seconds)
  done (took 1.449602348 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110862677 seconds)
  done (took 1.162470634 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110623895 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09983019 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192190054 seconds)
  done (took 1.454599488 seconds)
done (took 9.816115229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104110104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436258402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391785499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142110093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729218454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380965468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04464829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162011618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212671561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091941686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145248532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671153399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035460509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369360174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990767263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367277677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674575394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123504992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103269482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122416834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992150292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120513971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094165891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120831508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673432714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.441905859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092700652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384528294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092315416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129644599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379808755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122358068 seconds)
  done (took 16.984178506 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102128573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193084843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105558533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122843017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101000771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122700585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106368055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137265691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201266486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121646928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117224348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121445956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098290541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122411886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119330923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120838993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094197401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121694767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103087966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123360038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143687706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093373078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121701561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09395596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093103954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.153328671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1217141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109462097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122329078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101947413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124455656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094058391 seconds)
  done (took 4.884960604 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144922413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203389412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134700293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131142648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181739182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12325481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217291028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164083558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203776715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09380562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146182836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093244399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170787412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093459793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148573181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092876204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122908714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09395532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131545262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123018475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117280502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121584361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096508236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121794336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094217539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155180899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093823025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138302164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093240801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130453105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097291228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122784123 seconds)
  done (took 5.257472157 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105577259 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133523923 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119659629 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147949139 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100441736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134078522 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10521058 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1292843 seconds)
  done (took 2.035704732 seconds)
done (took 30.217891441 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120180014 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140659218 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114272148 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136295466 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.181202887 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098503749 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110246879 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.126817636 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106685188 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145277961 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094274391 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.129015771 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.113470713 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131999295 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183727217 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107828002 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.188936131 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18456094 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129724213 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10830939 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12937813 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.188598332 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106111184 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099738687 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194427409 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126928884 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.17863602 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104171879 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13219198 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10166907 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184382128 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133798788 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.099976384 seconds)
  done (took 5.481626013 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.163632917 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.131188874 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098883779 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128492277 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.101137458 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127675873 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.196638174 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098766543 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12775202 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099088958 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.126953489 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.162934382 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.137080868 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.094490039 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132563053 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.100706877 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.194953542 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.13182641 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.093774873 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.090138189 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123686439 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098385035 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.203922462 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.125194233 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098144145 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128789604 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.102199942 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.13452229 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.100262581 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12956921 seconds)
  done (took 4.853397486 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107454264 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145816497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123919092 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20137768 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160204848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.107195906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14670323 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115496932 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.15613643 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095794681 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142049502 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.158613487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115915192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136770526 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100673039 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14396443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118189026 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.124604101 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104308928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143221729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112875352 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141224602 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118307378 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135278548 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093958931 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133158455 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133873509 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112082051 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137062141 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114546051 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130587747 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100936803 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12795481 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107060106 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130633454 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105621022 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148364445 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108502868 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140327138 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152362556 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101854773 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129165291 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124172403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.184895943 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09692535 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13658696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109162732 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140868918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095468904 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143762756 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113792589 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125063047 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145337579 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09733968 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096134661 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136802507 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096629083 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13218031 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.115362447 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129523304 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147522472 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102763211 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137150338 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097963639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134343091 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096260633 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094681184 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129069113 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15287166 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10558242 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16320587 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095898544 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135325689 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108665981 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136219833 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107835969 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124332262 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106840626 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136011932 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102530841 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140775569 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098325748 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128930299 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114985377 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.14426665 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.105563673 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.176326691 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134919761 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.098828261 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126956838 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11427531 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126545389 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101531654 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144482233 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095601491 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131204854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106553218 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134761604 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094157963 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15100756 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101453622 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124450583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121247836 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132002676 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101643969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133911209 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111791247 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124044483 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104054073 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136297871 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095925321 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133380048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099991825 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123814911 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110701886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.140805983 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10208547 seconds)
  done (took 15.537346695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.287033878 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.305946397 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210206765 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367191857 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.11268254 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.20328251 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.305725867 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.278113921 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133581796 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170768575 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191363694 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.245825308 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127706613 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.126693042 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309144764 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371709908 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157426939 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17105014 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139422413 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.144935223 seconds)
  done (took 5.441621906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119190068 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162775297 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14805272 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.13006464 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.13453487 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108316207 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126173849 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.120816849 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134445571 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13282035 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.095772392 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138972588 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105192718 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138748067 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.114733579 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174804214 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101222769 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132786251 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149566168 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102747988 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137109273 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.127521064 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137283208 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.148127829 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111692045 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138483113 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09439991 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132885813 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100114848 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129832818 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102359987 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147207832 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101410761 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132839597 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105996834 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.139067447 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098555447 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129838981 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097652328 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.130932889 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112637148 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.135401736 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100162018 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124921616 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111915 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.128377914 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108695632 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133857163 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11004986 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139078376 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105733249 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.137451305 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101788053 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14556793 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.098198764 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141941636 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108247116 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138476909 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131351268 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095692097 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094171596 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131032076 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.101045961 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13791548 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106577621 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149264394 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140822004 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095381106 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132180838 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101495531 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130277799 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111922049 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149894429 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131711085 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100366973 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138192724 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103395251 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09039038 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136296255 seconds)
  done (took 10.799935326 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125059477 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131738247 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117051763 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.165553796 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105336027 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133277868 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101203701 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148258137 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.107617792 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139082375 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107920958 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142229369 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.149867277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112135919 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131338677 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115412661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136301088 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.167130722 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116395303 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.15789312 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.108023977 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133054175 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.109171491 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139152388 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.158782914 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.108705073 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.157712079 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105381705 seconds)
  done (took 4.722767348 seconds)
done (took 47.894887493 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.181439114 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.404346594 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.152922204 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153268126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.168217105 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.163645838 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.162954077 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.154126987 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.130053197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.150509512 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.15376643 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.152945015 seconds)
done (took 27.21380064 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.19035154 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.6571874 seconds)
    (2/2) benchmarking "String"...
    done (took 1.41461873 seconds)
  done (took 4.152005999 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.159905105 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.150074794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.390146036 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.149631326 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.165658734 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.166785667 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.158309449 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.160506413 seconds)
  done (took 15.420304743 seconds)
done (took 25.004530385 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.202184102 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.342780366 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.415686003 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.174646351 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.156308216 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.155416048 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.152766554 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.177471034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.162878687 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.152696188 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.551871156 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.410816735 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.177602327 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.529852841 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.160072496 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.153001961 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.168163256 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.381776908 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.160428001 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211913891 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.144088772 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.15770455 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.155524578 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.165213191 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.15683236 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.167177969 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.197951887 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.152668001 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.348964241 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.169318354 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.197641506 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.154950943 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.197953421 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.154585674 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.157603399 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.157159047 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.337222665 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.156636443 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.149759359 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.162806527 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.335329421 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.157818532 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.154774761 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.161983173 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.163997901 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.194211275 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.150479634 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.263861852 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.179857481 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.159749817 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.160180501 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.541873173 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.157177792 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.166608431 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.187801895 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.377484485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.170677279 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.211810586 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.184321864 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.161181551 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.171186414 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.155315499 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.174644574 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.162597864 seconds)
  done (took 140.627236734 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.154161302 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.155258332 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.154820579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.161725036 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.154542318 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.154985858 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.154749119 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.154511113 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.156286688 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.175451586 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.154951748 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.157934793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.162850401 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.10186127 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.161751096 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.179124927 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.16467873 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.180637677 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.163186615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.156282015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.174302373 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.155867781 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.171715859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.155230938 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.196294196 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.258072835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.200022457 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.177556549 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.163212942 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.156614379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.203378762 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.181928088 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.762664422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.030918361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.161096409 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.165267092 seconds)
  done (took 78.557895908 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.157793693 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.156646182 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.157019697 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.158194892 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.190062009 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.157210528 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.724829532 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731763023 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.887276916 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.742488314 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.49654797 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.434910827 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.16669267 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250484306 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.170846501 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.160235072 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.174947574 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.186072264 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.158143837 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157376131 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.726297464 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.179507994 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.215484169 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.356880339 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.172910263 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.190247507 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.15797392 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.561341029 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.15790887 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.190406287 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488760894 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.207577373 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.158560023 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.518125636 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.148911809 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269784516 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.160626799 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.189744301 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.156030317 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.436023943 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.156408253 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.157138867 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.158696359 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.797702485 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.156095792 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.720682605 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.166906775 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.088727866 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.158179746 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.15864049 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.113285005 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.757103496 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.173571612 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.157440176 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.156137583 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.161299118 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.157877595 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.157811255 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.190355114 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.157396215 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.15502092 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.256156052 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.15853894 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.158419751 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.185782029 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.155087058 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.312892078 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.153632785 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.326465668 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.217885259 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.387864049 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.704838373 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.163748712 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249565774 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272335025 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.153840449 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.155615954 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.15451849 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.15322144 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.263475561 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.154100838 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.551837357 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.325805006 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.169734288 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.436142159 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.259518326 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.155050433 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504239643 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165489446 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.154939833 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853753803 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249725506 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.156106348 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.154725707 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.156007664 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.553230428 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704775406 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.374048577 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.16526379 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.406893942 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.163972323 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.562000123 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.68498898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816411947 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.164574896 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266074512 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.32743497 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.171113853 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.155390121 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.436485691 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.164914875 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.212908389 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.164971256 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.556396105 seconds)
  done (took 361.291312478 seconds)
done (took 581.558909593 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.93867608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.881041841 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.013937789 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.91007208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.882136196 seconds)
  done (took 10.709130862 seconds)
done (took 11.795184238 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.343958165 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.344068745 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214596625 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.344735492 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188807309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.359610199 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.333417982 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.177674726 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.268339944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.235501935 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.268026287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208227307 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190723091 seconds)
  done (took 17.562023153 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429798112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.163682634 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.225653939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400647299 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202050653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439347889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457812822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.163374052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.28656823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202090605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.174646518 seconds)
  done (took 17.231566053 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451758993 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.163773932 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.232185173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431845532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204804555 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438312153 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460162312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.166660671 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303253787 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.175157943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.174463778 seconds)
  done (took 17.287943613 seconds)
done (took 53.168212189 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.20152398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.326622274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.195527512 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.176611963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.172368906 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.173691392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.177202079 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.172357727 seconds)
  done (took 10.682309593 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.17033182 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.170984024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.169243705 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.168548507 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.170812686 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.169275274 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.169477591 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.16956512 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.169736084 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.171105991 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.171599425 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.169317154 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.170148574 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.170616393 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.170990447 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.170712568 seconds)
  done (took 19.809977731 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.171329035 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.171152245 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.172157815 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.171158157 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.169538057 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.170285811 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.171440465 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.170479917 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.171111716 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.171137837 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.172474599 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.169058184 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.170627388 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.170750259 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.170211142 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.171529251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.170375629 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.170323571 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.175065031 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.171281108 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.172233984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.17144184 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.169763511 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.171154064 seconds)
  done (took 29.193744182 seconds)
done (took 60.774005124 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.160771916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.191776695 seconds)
  done (took 5.440255015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.23083242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230194688 seconds)
  done (took 3.551290232 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.171767643 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.170515938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.172349436 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.172389402 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.170400663 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.170846476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.170979222 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.170330731 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.171475558 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.171196522 seconds)
  done (took 12.799578967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.172569138 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.170553804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.171535345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.170728877 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.172363386 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.169803345 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.171637069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.171580157 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.173387148 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.171838744 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.172257305 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.170335164 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.171450798 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.171615956 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.170615741 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.173454027 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.170314736 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.172699867 seconds)
  done (took 22.177265873 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.185679696 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.19122073 seconds)
  done (took 3.465142567 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.311419488 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211942927 seconds)
    (3/7) benchmarking "month"...
    done (took 1.28756447 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280504073 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212525781 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.193309797 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212656085 seconds)
  done (took 9.797621504 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.173668405 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.370484848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.480919844 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.728230579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.172000455 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.175545092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.972297004 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.17588728 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.177527959 seconds)
  done (took 13.51626617 seconds)
done (took 71.837028427 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.172134166 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.191095015 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.180611394 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.191708267 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.511543566 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.231560121 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.182352186 seconds)
done (took 15.752818861 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.15620959 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170633424 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.160095016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.171700353 seconds)
  done (took 9.748340384 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15547377 seconds)
    (2/2) benchmarking "read"...
    done (took 1.472518377 seconds)
  done (took 4.716850135 seconds)
done (took 15.55691611 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172742909 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.172227379 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.172293485 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.172872723 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.17297502 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.174544323 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.172450846 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.173721193 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.171739038 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.171196268 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.173025704 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.171925302 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.172636942 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173475706 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172411187 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171624799 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173649679 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.170495447 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171923284 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172271073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172591652 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174014615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.172602772 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.173365221 seconds)
  done (took 29.234415949 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.172174302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.172932497 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.172932981 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.172074795 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.172570215 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.171642162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171440513 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.171853019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.172872785 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.172214823 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171172014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.173003453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.171823192 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.171540146 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172873272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.171336717 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.174885735 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172082892 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172445288 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.172814574 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.171901989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172759925 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.172668136 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172294406 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.172896698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.172980866 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.172782635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.172161694 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172478854 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.171310066 seconds)
  done (took 36.262936312 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.177049237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.177875852 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.17228689 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.17228963 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.172071983 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.172855014 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.171814981 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.173653603 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.172632068 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.173062831 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.174138862 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.17312907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.172223205 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.173950032 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.174947195 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.17406258 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.173951206 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.173595708 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.173505658 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.174115603 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.173713803 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.173589552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.173608358 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.174437629 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.17332308 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.174072302 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.174427013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.174760683 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.174454571 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.174899388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.174180095 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.174471152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.173766533 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.175175429 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.174799484 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.176725097 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.179032135 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.179722081 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.174392422 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.17487855 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.175410145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.175918505 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.176005896 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.175163478 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.176206624 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.174864187 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.175844861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.175442573 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.175139823 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.176238934 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.176423998 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.175572811 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.175549121 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.17602303 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.174817599 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.176944063 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.176616387 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.176603833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.176145088 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.17509718 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.176997685 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.178010432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.177701894 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.175857457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.176741907 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.177233108 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.176575621 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.177067466 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.175514868 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.176888195 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.176623761 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.176568202 seconds)
  done (took 85.701821446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.177254491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176394701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176399828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176276595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176803595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176835544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175757991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176859464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177115558 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177498504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178738329 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.178540143 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177609734 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.177502153 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177903714 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176965185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177334951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176157948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.177954044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178186712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177203081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.17685146 seconds)
  done (took 26.99047949 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178483505 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.179163195 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.179059546 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179822137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.180671337 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.179075694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.179631494 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.180086371 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177104297 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178302616 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177073228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178369532 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179909523 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178159739 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178201263 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.181121311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179099114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.182514626 seconds)
  done (took 22.319943812 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.179104103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.179066474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.18111074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.181837181 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.181954167 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.182503736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181293009 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.187185374 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.181144269 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.182363705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.182266145 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182552088 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.183363472 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181558207 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182462691 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.183570081 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.182348796 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181217745 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179334899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180079878 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.179667954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180354066 seconds)
  done (took 27.091190646 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180298574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180776271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.179571587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.179187967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180320541 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.179805957 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.179722052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.178981178 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.180742253 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.181583979 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180063882 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.181065692 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.181592629 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179409728 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.180177339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18030225 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.180179303 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.179344923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180429276 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.179392966 seconds)
  done (took 24.697395578 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.182461577 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183646863 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182771893 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182809752 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182126038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.183668907 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183210708 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184734219 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183894991 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.18470859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184461337 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.183471957 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183176391 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.184199909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183435351 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183593259 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184315375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185618141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184113798 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184333182 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185175412 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184409617 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184999494 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184664228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184938807 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184371511 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185144383 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185061697 seconds)
  done (took 34.249675975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182798297 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.182513033 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.182393071 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.183433392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.185270983 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.18282797 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181959632 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.183816735 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182215962 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.182314184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.186781213 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.182403387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184421258 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.18363815 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182432059 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.184013173 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182826858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.184554638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1831247 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183958346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.18139694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18346647 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.184156653 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.184546511 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183727673 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.182846109 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183499704 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.185257097 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18493027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183403849 seconds)
  done (took 36.602718942 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.225814156 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231937264 seconds)
  done (took 3.556075451 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.184190372 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184429229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.183748173 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.182685875 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.183714353 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.183234168 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183008118 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183429638 seconds)
  done (took 10.566239017 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.180537955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.185670488 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.183812699 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.184027788 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.183687361 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.180236423 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188752004 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.189370735 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.180873894 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.183068662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.185305417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.185695743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.18304384 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183072411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.180593551 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183482959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.185702309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.184757742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.187962529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.183058385 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18514068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182183835 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186062213 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.187183855 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.18108183 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.189454362 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.190123341 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.187030759 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.180506129 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.184170407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.183626271 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.185546471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.184827118 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.187178901 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.183464081 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.185898178 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191387049 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203605727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.189300066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189815142 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18632024 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.184792677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.181635028 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.185131574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183680959 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.189225707 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.185662658 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.184281094 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.179538808 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.183885179 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.188624195 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17981038 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.186330105 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.1831523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.184724918 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189437078 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.191573823 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.184630095 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.186050489 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190034952 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.198619478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.19247748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.184706578 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.189166508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189258931 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.197221966 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.190496437 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.190275059 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.186537902 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.185178793 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.187456338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197600157 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.194922964 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.187999369 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186676409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.185361444 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183323988 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187789943 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192292738 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.189785431 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.187903441 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187390262 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189286036 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194337234 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.182407408 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.189014703 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.185506633 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.185702393 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.182583349 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190310795 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.192180732 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.186288323 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.181761358 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.182796813 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.183997831 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.185538304 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.181953624 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183109567 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.186792115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.186305435 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186244988 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184996121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.187595071 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188483777 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187446699 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.190816229 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.189959227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182196703 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.190269887 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.190585718 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187309832 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.184827769 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186976305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.187325743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184085403 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187159916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.188698218 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.183216671 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.190700537 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.188415245 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.1907383 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.19953422 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.189730133 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.186329643 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.186857375 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.194499839 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.188375702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.186872291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.19080851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.187729816 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.186705094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.186930292 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.189606317 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18477317 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190312469 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184366202 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.188971557 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.186931708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.187721905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.1848963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.187627323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.186111473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.186322244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.189652782 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.191025471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.187449399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.19546066 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.187700615 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.187598011 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.187542544 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.189903436 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18819388 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.186803688 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.190560416 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.186462871 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.189476217 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.18572116 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.191011791 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.190677678 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.188726842 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190873892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.185594721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188809889 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.192296242 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.190497007 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.18810756 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.190904565 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.190288218 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.189949189 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184538152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.190306248 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.184930951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.188752527 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.196012412 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.190370862 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.191657972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.189709212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.194266849 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193152648 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191069785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.188217705 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.191922464 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.192804043 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19474177 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.196154427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191187396 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.191128229 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186946138 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.186317418 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193283525 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.189846593 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.196213693 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199954986 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200157438 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.188550966 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.194079743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.187883805 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.195387888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.190940994 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.195073641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.191125872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192320301 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187730229 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.1944004 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.189407642 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.194039051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.187073598 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.192950043 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.192219747 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.193970985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192783096 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.189347315 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18939109 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.194033345 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192157036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191679811 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.188201609 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.193828558 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.188067422 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.189426532 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.193970796 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.192962035 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.195424518 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.195633924 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191249623 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.194082503 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.191530258 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.189903704 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.194875867 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190226149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.192780782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198601804 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.194468331 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.190664071 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199169063 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.19612551 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.189912097 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.19499013 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.196115841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.192567352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.190752438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.19725113 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.195249001 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.194815721 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.19446025 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191672983 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193945945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.197264535 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.198407687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.190218247 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.195334947 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.191857325 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.195339663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.191025906 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.19323217 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.192576775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195029388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197099612 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.195309927 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191508155 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.196932411 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.195518653 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.195175194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193140386 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.200539568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.197986913 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.194233927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.194477314 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.19327721 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.196442693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192592146 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.197339071 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.192105187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204764566 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.208068552 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200780469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.198373008 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.196945663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198555503 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.197633561 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.194225989 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193111141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193678621 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.192998353 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.193809545 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.196739998 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193322476 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.197065822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.195258708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.197210606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.198600259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.195402055 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.193104445 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.199291292 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.198107284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.199327934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.192246642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.197176735 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.194967999 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196672696 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.195774958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.193831359 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202052025 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.199106389 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195804343 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.194936791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.194373968 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.194554209 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.194965591 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.202121996 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.197600888 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.203751948 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.196251123 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.199481561 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.197720237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202931049 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.201778785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.197125531 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.204574761 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198655444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.195405534 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.196069653 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.20041156 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20283043 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204638966 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.197443093 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.202397894 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.200092827 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.20135336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.199606778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.200331355 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200076537 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.199902806 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205614447 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.218048485 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.198242442 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199610018 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.200593989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.199283215 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.199800538 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.196065545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199503297 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.202806141 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.197050901 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.197728786 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.198230118 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.199246825 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.200547368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.201530668 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.200702088 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.198907976 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204735628 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.202639548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20308444 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.200744482 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.205722025 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204001982 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206018668 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207146532 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.197420423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.204833406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.200131276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.19814107 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197430015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.198977076 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.203162772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.197332194 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.205699974 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.200742351 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.199942736 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.202036064 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.203409163 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197058724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.205933371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2176178 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.200033323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204033162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.203725972 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.199139911 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.206063552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.202690567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.197572827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.199828357 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205509638 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206314166 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.198209714 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.204425183 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.200526321 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203543439 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.203130423 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.203462373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.203660127 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.203035762 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.198784886 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.20452871 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204527333 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.206083973 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.200570538 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203187021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.201826123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.208578711 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.210251941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.201700278 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20716764 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.205777308 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.200835632 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.201184448 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.206341698 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202231252 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.205578366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.200641928 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20536791 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.206042037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.204834776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.202888388 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.207280572 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.201376577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.201809761 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206908157 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.206816923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207105308 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.202972617 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.208226448 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.201448333 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.201091946 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.205920939 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.202092016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.206007302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202769551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.204867637 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20408202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.20639229 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.206554835 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.205955497 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2015386 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.202440263 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.212140327 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.208460499 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.208958885 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.208003091 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.209248287 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.202978814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.205837729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.20703334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.202588154 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.203720306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.208072824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206160568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.203933204 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.204410064 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.208305666 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.210732274 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.206943377 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.204988544 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213515009 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.228608264 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209511949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.204809387 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.207950317 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.206842249 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.208332439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.207143733 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.203297669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21209462 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.209100495 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210356337 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206746626 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.205465713 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.204698382 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210703214 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.20738057 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.204854608 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.210159275 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.204731584 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210786997 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208355394 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.20691734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.203378365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.207332984 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.207405333 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.208136428 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.209666462 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207563164 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.20786515 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.207307062 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212497071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.209775263 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.207943364 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.209332468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.204611176 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210908844 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.206332645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.210689879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.208343143 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.207718829 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.213141666 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210481888 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207735968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.211708564 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.213213688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.209318415 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.206625505 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.207877968 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.211719714 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.213193242 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.21131796 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206413438 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.207818103 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.211306589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21008408 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.209715765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.210361368 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.224067607 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.232864955 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206196661 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.208310547 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210885076 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.213297299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.210953661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.210315101 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.209473717 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.210797562 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.215659119 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.211471837 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214919567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212403364 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.208762833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.213803275 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.208382724 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.212214191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.211803062 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213705594 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.213029124 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.210340315 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.219165479 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.214756516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215227345 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230465432 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.214043725 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.211293079 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.214279223 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208176366 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.214342841 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212145065 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.214932708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.212839177 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212750718 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.213856064 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.208634921 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213529304 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.213363243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.217296332 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.212276653 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.208674955 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.210674937 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.212922711 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.213330717 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.215275961 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.214853204 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.215183515 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.215144429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.211397526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223420192 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.222445748 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.214908752 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.214435833 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.213969649 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.213751337 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.214006578 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215249875 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.218706945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.214037556 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.215267773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.212470596 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215104917 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.215462442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.211191834 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.214425806 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213000007 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.215153098 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.221754921 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227039169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.216642076 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.21499737 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217306 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.216405903 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21368228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220805602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216556589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.212629869 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.212962956 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217754248 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.217510533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.216039242 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.213081029 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.219416705 seconds)
  done (took 715.503074977 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215750191 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215776935 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215244089 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215096811 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215332933 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216226259 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215199189 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215564741 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215500466 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21523725 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217339231 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216633923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216250334 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217798207 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218052817 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.216791967 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215854127 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216764835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215953193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216462804 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216518101 seconds)
  done (took 26.663244761 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.216771534 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.215000819 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216306154 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217433164 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216152557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217224855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218559229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217225814 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217524038 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217161421 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219191897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219934885 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.218689362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.216468024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21701309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21745205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218284501 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218199937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.217778907 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217440861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218943369 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219503688 seconds)
  done (took 27.915813331 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.218475904 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.219252932 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.213065238 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.218191521 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.216572702 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.21581311 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.218604492 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.216797386 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.216782138 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.214680023 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.203345075 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.205191849 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.209282556 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.21204612 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.206658178 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.20905118 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207625588 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.212596297 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201095863 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.200709567 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.202829923 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.20235141 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.19992624 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.194038373 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.201686838 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.201114654 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.199388121 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.194946044 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.192459049 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.198966375 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.195286592 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.190160171 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.194922372 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.193221478 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.192759491 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.19350516 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.192576036 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.191210299 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.191903688 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.194985325 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.20500104 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19165604 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.195770587 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.195109206 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.190005265 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.189174012 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.195328147 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.19158975 seconds)
  done (took 58.836835609 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.190873593 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.191214203 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.192661149 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.188123743 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.188470283 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.187485331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.188294474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.188607574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.188366752 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.188463431 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.190892596 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.187498372 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.187820091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.18754928 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.187779887 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.187800449 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.18655874 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.188059896 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.187678161 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.188120859 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.185368455 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.18576857 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.186178135 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.185436338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.186678296 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.185980889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.186507771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.187794479 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.183551495 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.183464784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.182879539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.182731706 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.182197685 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.183461971 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.18398968 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.183289477 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.1835442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.178652769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.179733101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.180109601 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.181089358 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.179428844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.180477704 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.180806441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.180995135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.177805319 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.179572227 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.17737483 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.177562238 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.178652632 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.177988737 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.177923338 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.178339084 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.176745604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.17579414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.176416773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.17555018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.175345084 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.174676798 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.176374892 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.176889895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.176814216 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.176095036 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.176550005 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.176051687 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.175826403 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.175868165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.176216784 seconds)
  done (took 81.525657277 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.176333551 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.177606828 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.176676065 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17703646 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17734346 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.178031192 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.177427409 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.177923992 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.176988294 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.177743858 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17821833 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.177242022 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.178364272 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.177765591 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.178310031 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.178672897 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.177672801 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.178435625 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.177538372 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.177274355 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.17717839 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.176779121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.17670789 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.177748156 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.177893074 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.177524849 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.178722874 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.173578757 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174127221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.173933522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.174595738 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.174484112 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.174116417 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.175423071 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.175148547 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.175333303 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.173280012 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171693023 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.17342694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172344597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.172707779 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172781229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173050623 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.173992333 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.170140797 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.172551276 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.171820142 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.171506159 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.171515556 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17076739 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.170539901 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171135915 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171632874 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.170178656 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.169826494 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.171766024 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.169632048 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169651884 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170724029 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.170592336 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.171115658 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.17118809 seconds)
  done (took 73.91855772 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169942666 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169902356 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.169983286 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.170165284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171000792 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.170474919 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170504667 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.169564019 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171538939 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.171149158 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171023372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171702484 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172771423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171259005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.170858038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171241521 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171753286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171742257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171366473 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171757526 seconds)
  done (took 24.505062328 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.171004059 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.171551252 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.171543928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171894478 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.172664123 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.171441719 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.171635894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172884482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171190026 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172239203 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.173672063 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173273926 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172071574 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.17250993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.172232459 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.172383895 seconds)
  done (took 19.841954623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.172595884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.172617974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.17318737 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.173796858 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.173234726 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.172942394 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.171804152 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.173369885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.172079214 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.173443144 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.172865981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.173882259 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.172864926 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.172629513 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.173589913 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.173130389 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.172971324 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.17260011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.172605656 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.174212671 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.17455866 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.172602775 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.173560029 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.174184369 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.17357325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.174837554 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.173289292 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.173049918 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.173668639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.172033998 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.174253488 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.173143893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.172537162 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.173611049 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.174426538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.174166273 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.174856723 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.174777932 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.174504881 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.175014225 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.174914124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.174782202 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.175214182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.1753442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.174649443 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.174546297 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.175336893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.174424308 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.175612226 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.17537603 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.174550395 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.175378757 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.176116046 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.17654214 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.175727052 seconds)
  done (took 65.65545509 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175610992 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.175319006 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.175682324 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.175487164 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.176384036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.175884067 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.175372332 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.17718243 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.175976128 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.176349437 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.175034276 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.178257088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176367201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.176038955 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176641083 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176635913 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.176081674 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.176549733 seconds)
  done (took 22.262898468 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.177229325 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.175694452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.177143264 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176312639 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.176134021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.175846326 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17611793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.176401692 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176812364 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.177323766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177734622 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.177279861 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177881136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.177333273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.17894461 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177810075 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.178636899 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.178243606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.177964574 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177239891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178548476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177535874 seconds)
  done (took 26.992200757 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.174376291 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.173847691 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.173425412 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.187018808 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.184509233 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.173676846 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.172973794 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.174744298 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.190596479 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.209349082 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.202382839 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.183976889 seconds)
  done (took 15.293321532 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174943382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176116839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.176124193 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171941147 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173040104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171288139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172805968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172071668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171982767 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17218938 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171484768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171784356 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17048169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171005877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17194858 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172065665 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170849181 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17083067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17162556 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170722017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170334042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171433109 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171769173 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17158197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170756814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170853792 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172556316 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17088829 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172007767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172171019 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171864012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172383225 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171556065 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172033413 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171586781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172136917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172221844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172465568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171971392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172363799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.172920146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171628308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172817525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173582036 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173285968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171941924 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173491032 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172423888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173535573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172973918 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173291593 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173343035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173444057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172246612 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172941223 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173443135 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173105739 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172226151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173526074 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172739203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174469426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174477428 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173709946 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174061331 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173721879 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174914146 seconds)
  done (took 78.477326762 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173936386 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173063386 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174878665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175296372 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171509089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17300103 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173336041 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171460238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172211934 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172371866 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171916321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173334915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1740223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173375908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172426737 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173067824 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173324716 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173952324 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1730844 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17335071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175459268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173070084 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173928392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173901315 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174285826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173895907 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173663843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173904658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173662449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174057216 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174246329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173882638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174439158 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.173938004 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17475284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174450711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174759998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175278706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174555691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176544184 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174411506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175223141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175825625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17549395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174116064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175682591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175537184 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176028951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174805852 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175861133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17651271 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1770552 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17653366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176357073 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175509682 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176623547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176722244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176156925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175477992 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176676503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176832559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177082746 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177050097 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176903488 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177321372 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176783117 seconds)
  done (took 78.618923405 seconds)
done (took 1654.375407047 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.337673009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.290961731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.171396045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.179998429 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.171230673 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.166610678 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.185957203 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.171308572 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.172069786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.170897059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.171645635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.362451874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.168062797 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.171786311 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.172726372 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.269724417 seconds)
  done (took 24.425650902 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.194760136 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.182989503 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.28377271 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.198435327 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.202271587 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.352118595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.237061041 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.181459253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.333972309 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.195276654 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.17881027 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.200911567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.179867942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.170859569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.210331083 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.349635998 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.410045121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.182488116 seconds)
  done (took 26.336334587 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.586843679 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.175959913 seconds)
  done (took 4.857716673 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.197079393 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.179467032 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.182285121 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.179456301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.172463215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.171888262 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.177993301 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.175452342 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.181048022 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.298898234 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.18150066 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.194562573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.195965717 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.180840284 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.18318635 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.221076756 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.332934742 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.183849097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.183322866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.186125293 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.179860885 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.265681543 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.217285599 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.185154816 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.291582309 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.17853504 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.188024096 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.188544521 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.319129498 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.185746602 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.180786358 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.181358964 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.183900651 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.174652251 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.631251909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.191262547 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.189059662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.204367903 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.18509436 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.345737629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.182653324 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.189013054 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.184403202 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.608640211 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.319463412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.29772863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.191740302 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.188146679 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.184405175 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.244340428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.18283282 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.184342236 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.240088715 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.009563035 seconds)
  done (took 76.938362919 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.177597193 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.175174632 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.35372638 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.189583418 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175517569 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174872937 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.188860187 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.436905344 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.203574003 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.183431856 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.451181242 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.721170823 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.199857646 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.231004489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.070608573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.249943415 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.176812586 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.175136521 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.176558308 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.181424342 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706530418 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182958856 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.180573909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.336170533 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.213483257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.667991627 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.177444866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.188759277 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.179993038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.177846543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.681949199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.201943701 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.23825185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.178559196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.439896456 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.531677424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.500256426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.181927528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.181263957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.178451371 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.179839012 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.65455592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.521166618 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.182442328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.195508676 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678794095 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.18165292 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.192085546 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.177498005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.426385016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.179186135 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.179168162 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.178347001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.183022875 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.178512967 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.187496756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.271839766 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669967777 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.17924682 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.178942788 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.225229828 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.182001712 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.179666664 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.181251014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.195512997 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.516563919 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.380302972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.180224612 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.51404662 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67273368 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.194637733 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.74074036 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.195110724 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.201476772 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.392459018 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.180975608 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.180303676 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679543898 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.195023907 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.18010737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.498074752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.181471507 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.460313011 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.200436379 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.195135816 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740359334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.189888664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.184699797 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.182018877 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.182259379 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.182161876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.182589685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446481309 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.202066706 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.18124289 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.181490363 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.183453368 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.187640497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.182961255 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.182795968 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.73990562 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.19847052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.181376134 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184840517 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.181501097 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.188063778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.182781512 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.182148051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446608928 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.185979267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.187021872 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.185622132 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.182287781 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.193423057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323530217 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.18686441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.466446009 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.187405099 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182239995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.189250688 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18297384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.219785044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.183743721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.187998757 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.062043363 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.452389176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.197351979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.18290139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183412061 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.184523952 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183630262 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184884819 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.225242574 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.184165264 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956950981 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.211685559 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.202396359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.187103291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.20339915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.187089058 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.194616972 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184378685 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.466956634 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.446730199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.393301368 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.185925444 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.184187152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941444026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.236553111 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361612224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.1994767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.184655084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433052191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.401383859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.186110114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.185635817 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.186263572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439146375 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.185556957 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.484402366 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711489296 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.20054991 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.193599971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959651666 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897220665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.191575365 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.191181921 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.458928771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.201372234 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.184428439 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.185850704 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.185799452 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.201315718 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.204956716 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.188374578 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.186312151 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.186878057 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.481077354 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.376253513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.20011335 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.190527546 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670043625 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.203487667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.186763915 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.188355328 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.187109642 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.186937624 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.26438959 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.19016257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.210418907 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.189704421 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.18626878 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.686453077 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.187947179 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.18882137 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.37559137 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865346476 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.202036661 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.187923698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.187718462 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.094970139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696983715 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.229608709 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.47325762 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.191475776 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.225753054 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188718212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249113671 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697141689 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.188390686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.188895363 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826700528 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.20436095 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.715990687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.192053143 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.188809552 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759962666 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.204145499 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.190326367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.188280148 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.198453508 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498336251 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.190200912 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.242709189 seconds)
  done (took 464.14906774 seconds)
done (took 597.797385383 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.189145041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.193609024 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.187709654 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.195973044 seconds)
  done (took 9.877952507 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.206454793 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.19688173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.20190646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.197242013 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.203784209 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.195822554 seconds)
  done (took 8.315090962 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.191159661 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.197445877 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.195506631 seconds)
  done (took 7.696645933 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.387239576 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206340062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.538329368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.216584381 seconds)
  done (took 8.462151213 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.201552874 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.20249815 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.20238493 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.203634775 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.20722217 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.209539232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.205276337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.203514124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.2083514 seconds)
  done (took 11.95574754 seconds)
done (took 47.4189624 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.974279262 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.243655758 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.282431181 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.254850829 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.450482862 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.251927626 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.303333953 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.194577932 seconds)
    (9/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.09332612 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.296797417 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.297781578 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.274581867 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.22418839 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.889850368 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187271885 seconds)
    (16/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.18757041 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.296650396 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.412297838 seconds)
    (19/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.271535813 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.18734423 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.239853581 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.350988525 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.225920239 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.329838238 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.210618358 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.284061066 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.39804323 seconds)
    (28/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.186836557 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.356017421 seconds)
    (30/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.85270535 seconds)
    (31/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.338766823 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.361763904 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.272804972 seconds)
    (34/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.201765186 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.187377231 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.329865244 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.228725119 seconds)
    (38/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.229198041 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.326129135 seconds)
    (40/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.220917072 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.187468783 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.37506463 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24303637 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.187287137 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.21174013 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.068199137 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.253171419 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.231894678 seconds)
    (49/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.335350428 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.207864136 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.191520953 seconds)
    (52/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.2345082 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.187839814 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.214853666 seconds)
    (55/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.211638308 seconds)
    (56/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.187947363 seconds)
    (57/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.37660784 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.311725211 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.335284457 seconds)
    (60/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.258112865 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.189306477 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.862597677 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.888068686 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.855199259 seconds)
    (65/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.249421942 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.350474492 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.336549219 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.220563435 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.218644822 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.194147002 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.26141012 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.245766339 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.97361002 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.291357054 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.289451206 seconds)
    (76/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189757574 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.017908604 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.192759505 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.2546807 seconds)
    (80/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.344664592 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.199953751 seconds)
    (82/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.948165691 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.310900859 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.272226755 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.191403093 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.25406428 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.260263525 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.296253372 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.274386639 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.190617575 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.000816168 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.340722596 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.308478417 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.363526859 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.234897248 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.342235932 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.317838716 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.228412475 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.288093087 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.413625304 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.37544825 seconds)
    (102/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.230609379 seconds)
    (103/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.237674544 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.283204953 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.28663844 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.242448346 seconds)
    (107/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.343699644 seconds)
    (108/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.191823682 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.303597508 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.191923284 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.237425314 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.216387042 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.289284321 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.295245343 seconds)
    (115/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.911540577 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.237235483 seconds)
    (117/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.280503395 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.191756798 seconds)
    (119/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.239265693 seconds)
    (120/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.205404248 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.270374685 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.231169952 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.192062816 seconds)
    (124/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.97380404 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.220773355 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.334298427 seconds)
    (127/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.193994299 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.277282179 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.230639042 seconds)
    (130/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.369750585 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.278611336 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.330561091 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.339680729 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.241829937 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.228168478 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.193196647 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.940253193 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.203675719 seconds)
    (139/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.241338235 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.233993544 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.399054639 seconds)
    (142/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.241246574 seconds)
    (143/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.254232367 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.467620045 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.194652626 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.194018516 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.194927328 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.211555645 seconds)
    (149/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.237620197 seconds)
    (150/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.306796461 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.195782868 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.308202469 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.218946964 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.404681563 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.856613369 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.332029109 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.254203222 seconds)
    (158/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.241690975 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.197254879 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.954113586 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.892066259 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.237458471 seconds)
    (163/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.195474241 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.309134565 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.356095266 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.394969392 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.120179892 seconds)
    (168/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.254217013 seconds)
    (169/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.296923288 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.339296729 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.311892813 seconds)
    (172/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.341736982 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.233030342 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.945128073 seconds)
    (175/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.347644086 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.365365265 seconds)
    (177/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.196858413 seconds)
    (178/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.32968718 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.450502011 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.196099366 seconds)
    (181/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.353231874 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.984123216 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.398200884 seconds)
    (184/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.988197525 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.217774393 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.119491138 seconds)
    (187/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.273320532 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.95811726 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.895778241 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.891255656 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.348232199 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.35105312 seconds)
  done (took 310.981651577 seconds)
done (took 312.095987449 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.238924113 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.268782638 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.221787443 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.223248589 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.225486695 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.212156734 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.230198483 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.225554605 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.224144096 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.223157425 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209991171 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.218231905 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.236954857 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.220373874 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.258003786 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.224891918 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.224161339 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.219562784 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.224632177 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.226365893 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.22591436 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.228051141 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.233309213 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.224716592 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.231979032 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.233240682 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.231726865 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.222012943 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.217994389 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.225406843 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.227417101 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.232923094 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.228315573 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.223550774 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.228059998 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.219653259 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.226847756 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.271323825 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.231684035 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.220543463 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.219657019 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.226277049 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.230601538 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.23195505 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.222614373 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.23449128 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.234337476 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.242425646 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.225935651 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.201035573 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.24411333 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.225418131 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.220664654 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.201924585 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.219087137 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.24243401 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.221883808 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.243452855 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.219424827 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.22864774 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.260961445 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2442644 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.225080189 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.23522352 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.220260593 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.239905584 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.221202596 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.230460675 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.218776806 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.229781501 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.229931918 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.222005221 seconds)
done (took 97.584000755 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.346473053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.216850789 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.360064127 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.219989452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.37904717 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.366155042 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.219417099 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.221185528 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.219481599 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.070467823 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.220001852 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.220631467 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.209298399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.221705015 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351009172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.222518534 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.221167219 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.959847009 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.22268296 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.362621679 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.214655785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.220970881 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.220558139 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.081548501 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.218877904 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.212262837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.361945712 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.221966556 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.973696625 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.212021037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.21527125 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.973029589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.364731601 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.240954508 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.231347459 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.230914982 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.380374939 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.239592665 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.349166228 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.349354677 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.362040246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.259651711 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.214084355 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.217523922 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.224159995 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.223575524 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.22260076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.251739265 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.219082365 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.222335942 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.963437535 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.233136526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.231910741 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.222517076 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.223513854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.243326177 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.224274558 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.224825464 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.365763067 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.22414885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.349696658 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.08400938 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.073686369 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.222805973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.216615689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.223615911 seconds)
  done (took 101.219185098 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.28650047 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.301487458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.324924639 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.220099664 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.272939548 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.325209198 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.221102674 seconds)
  done (took 10.085638249 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.227140064 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.225843641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.269871972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.269745384 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.225028931 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.37708138 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.225093969 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.232156426 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.225491633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.272408204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.225720875 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.22655894 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.234350764 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.220197301 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268446051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.234182828 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337150344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.222186517 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.225319512 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.373083952 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.225569433 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.234956067 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.273247686 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.234145433 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.227389676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.22886052 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.986444393 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.226338488 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.227144834 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.226276626 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.225321707 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.276004219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.22796186 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.22177346 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.226495332 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337071086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.227549104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.226335088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.226252307 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.223333568 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.227631297 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.227519762 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.226828977 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.227558574 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.226928434 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.246582863 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.227799459 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.228400991 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.228233244 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.227879757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.273180568 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.22776333 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.22688335 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.227841532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.278490418 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.238112071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.227877938 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.229089451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.228365094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.22816296 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375942153 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.27266584 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.229188865 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271748533 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.229803032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.228939416 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.228480759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.227467049 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316453324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.229665365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.273007099 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.228584936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.404580426 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.248582989 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.230959895 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.226756106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.22868995 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.229999039 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.222599306 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.230361742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.229487375 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.226511489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.231733027 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.229782631 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.229084361 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383829386 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334390344 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.230837124 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.238229737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.232994931 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.230085579 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.278974494 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.230356275 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.229453475 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277066345 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.34200086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.279293259 seconds)
  done (took 127.012677485 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.238788768 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.239485689 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.23004849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.253120015 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.228334977 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.226057869 seconds)
  done (took 8.554776722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.22835518 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.232471646 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.231533605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.230673934 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.231930794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.232409671 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.232278869 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.228032512 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.233863829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.230890802 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.232969999 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.234890983 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.234018883 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.232670713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.231907829 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.23299919 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.232659758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.232228345 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.23211724 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.231661767 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.227321368 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.232202798 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.233181238 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.229917088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.23693838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.232891578 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.251245952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.232754622 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.232608442 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.236662265 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.252420723 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.234628077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.230478882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.232929748 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.23566495 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.229983909 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.235910474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.235482987 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.233039302 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.234834938 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.235314091 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234999276 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.234289617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.235364802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.231876317 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.234133683 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.23761452 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.25195282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.235047598 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.235257584 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.235943332 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.234622394 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.236826168 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.235975152 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.233857468 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250796348 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.238267055 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.236393525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.235930501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.23208167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.238647328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.237302941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.232176424 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.238563149 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.236198411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.237821395 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.232746821 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.237682982 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.236657137 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.236263061 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.237438809 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.236618837 seconds)
  done (took 91.059411221 seconds)
done (took 339.06018182 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.984802091 seconds)
  done (took 4.12852106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.294024741 seconds)
  done (took 3.439009229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.230023126 seconds)
  done (took 21.377536968 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31840019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.269746375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.241259024 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.228438193 seconds)
  done (took 10.201643527 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.458712316 seconds)
  done (took 3.602404638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.231528778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.23080089 seconds)
  done (took 5.607912386 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.382869475 seconds)
  done (took 3.527203262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.403674082 seconds)
  done (took 3.547953118 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.232781309 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.239657686 seconds)
  done (took 5.626410821 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.227880915 seconds)
  done (took 3.371882426 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.636171587 seconds)
  done (took 17.782194371 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.236628039 seconds)
  done (took 3.383686907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.252928395 seconds)
  done (took 3.397861449 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.633602185 seconds)
  done (took 5.777938676 seconds)
done (took 95.915849397 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.227138769 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.23239855 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.230222892 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.22772268 seconds)
  done (took 10.062603786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.316452979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.316693798 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.325424012 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.308327463 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.306633024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.316152127 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.263286423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.26393695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.307193349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.316785219 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.323999254 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.305956847 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.316718323 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.26368024 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.305343303 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.324294896 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.306955497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.326300151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.264197663 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.306842437 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.239174804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.306985817 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.307614771 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.239463301 seconds)
  done (took 32.324426344 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.750339089 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.304872916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.388540149 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.287115995 seconds)
  done (took 6.876576286 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.37353213 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.381904501 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.383870715 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.442020988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.458690324 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.395089642 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.266350308 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.26105236 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.248109463 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.381970412 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.370958003 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.325706369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.481863213 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.239407941 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.532111083 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.239702477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.240518711 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.382574473 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435419396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.454408505 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.240293956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.382246586 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.38294896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.318628137 seconds)
  done (took 33.767902958 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.248878619 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.258294611 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.242168342 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.257990402 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.242040463 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.242627127 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.243844833 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.248818207 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.243358505 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.242453469 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.242595613 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.256165787 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.243699594 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.243809581 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.252279715 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.243256826 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.245735675 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.249841769 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.250803509 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.243634417 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.242323838 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.249734638 seconds)
  done (took 28.583893786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.231952675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.231254139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.582562618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.487266992 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.231756679 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.232601131 seconds)
  done (took 13.147079556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.303161354 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.439254353 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.238418204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.571313956 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.661322791 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.240308978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.239278232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.472326627 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.771712822 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.745162426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.299269603 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.306049044 seconds)
  done (took 18.43699061 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.23417991 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.253575969 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.251351463 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.255243349 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.293114592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.247956218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.248782143 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.233013324 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.294420703 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.297311044 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.246420994 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.291249485 seconds)
  done (took 20.298952082 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328625743 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239324455 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237687856 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310162181 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256363866 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082036661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304189503 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943988651 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.262151196 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514181037 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244050803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32987083 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.493071335 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240291524 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244922354 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.203696264 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467697064 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695846921 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241510586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240046546 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271507822 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240778728 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246140306 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442398851 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083644202 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240636884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.504175506 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240707417 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509216952 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.253674963 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250386373 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240832421 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517002045 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876416367 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354016696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440272822 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25102274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242136683 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.231977915 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.245327755 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245678229 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244023044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252196228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242510116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241672084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256256771 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940055931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.26707793 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.241938901 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243033594 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484858304 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339216203 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.24796515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242231825 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271237322 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241704752 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.24911934 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367214914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830304774 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255252879 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243022748 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.24859314 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239450388 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271966579 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821681778 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.250947354 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.249781527 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249389531 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243191573 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255345735 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266167602 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243963202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.264722165 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243179454 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928636362 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245478285 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262831401 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76202843 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253721866 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.247414154 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474053518 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243851132 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244919834 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.24343948 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244771353 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895104626 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252234388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.231448792 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.287311958 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951335896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463230425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267032414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274591445 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465486608 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.232296034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245084759 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.243698828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246981703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266267649 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937320052 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261581724 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.251504414 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501131402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.45508801 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245193696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221637393 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701613746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272798116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.272020465 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247566536 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44820155 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.810118238 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260982932 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245411653 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277949112 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246197489 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939923123 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259208484 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.255757119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256383609 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509266354 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.995616683 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249798412 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312356753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248676891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246521661 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259449653 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249438056 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24874943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.439587667 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274588106 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.261455127 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.249642152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248179738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.259939258 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24826132 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.249958956 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.470782121 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26028291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528740899 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24848743 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249334986 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248587718 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.469187805 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.248136693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.254378027 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511754315 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253504772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253594417 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.263671205 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279160145 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355795533 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278489684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.25037688 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506326022 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.254016782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.254598479 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258401455 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24997931 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257046943 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.258349488 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250966642 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809961519 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226036802 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258998111 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250018203 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.265438379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318238054 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257713363 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452789721 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.254308312 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249439892 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.256689365 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.24998593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487935632 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.259984586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.25860855 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327341253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.705459407 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824019376 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271397486 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.251703874 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.250964645 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.251392475 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25121685 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250882349 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250872141 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451511037 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270343067 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25606819 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819106028 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255323535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257177815 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.258582554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262939339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.260135916 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252126691 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.262753238 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251674893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263687368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.266423242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386834236 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.267653822 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251795634 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.770997025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259480245 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252258419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251227982 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28400017 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261085011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048879793 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514254289 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24911307 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497309859 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255967676 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.270684593 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.25382721 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25631614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266501303 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.269376432 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276403674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.26282191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26785007 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255690915 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817990596 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981100328 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768594702 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269332633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.262737009 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259524651 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952888445 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271750301 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255195659 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48015034 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956297929 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27227212 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71514285 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.271965743 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990865362 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499152261 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487998356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269704357 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.260098326 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502032439 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468652931 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287875281 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265751701 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259039702 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.244000413 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793099414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272669307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337287114 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955174635 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279122612 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25837788 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.302451269 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254579311 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661041834 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274898817 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255542461 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256430815 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27788951 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066266103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25922856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256409141 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836869312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258416762 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.71913341 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274621311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.459067207 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.272358453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.261060542 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.268102736 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.267051345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.509030114 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503852771 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259161406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25866283 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775554928 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.127027825 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.266359366 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25863151 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956281693 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260470385 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534105712 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.268813564 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.258192724 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260884809 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258261158 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258406291 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.258127921 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261661559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231746102 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718100755 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.262595057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267052966 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267694275 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263092692 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512270045 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.274912533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.821544811 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487424442 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268578591 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290464379 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.264027247 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272264619 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.252290162 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26102393 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25987628 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279480891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481289795 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259224874 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.265228068 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31249251 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48763566 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260820471 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261036981 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492272296 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.265132482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.281599965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980079874 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297303136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261218854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262026411 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267585032 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302142717 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327813239 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464917344 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.277758115 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.272990067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649470805 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280197428 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264480222 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.277679225 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35714873 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263355253 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.26637384 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.037340595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829346439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976103135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83104751 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511735571 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264319779 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272319487 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26361934 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398698338 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262870482 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53695141 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262586022 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.260213151 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283730929 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264191107 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290179285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.472499545 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540043516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26313549 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271863742 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266018214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.264206569 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274400481 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.473298074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726764517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794384219 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265850662 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27453528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965058176 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559644714 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264093503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26537646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263817796 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.287634237 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282592834 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27128434 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265970961 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403492143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51011688 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907860591 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.291175194 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.303733053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.783605673 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265673401 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519466761 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266022855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469073651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835219531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943797123 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530508683 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334726184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.469763532 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.270938207 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402487228 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.267724379 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266737375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266418743 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266273803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.266827985 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.275122385 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836722248 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531050821 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.271882065 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.27003879 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296135465 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.275564006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48781749 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928921945 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.488571485 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275882187 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269677963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266192386 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837568025 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515404355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271249586 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.272419377 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49876721 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273121327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296542377 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789433835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.267790549 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792630755 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.161054671 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288794325 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279855157 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944469222 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836048826 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.281250532 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7313078 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273779835 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279134188 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542816543 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276792523 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279645082 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549854934 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.274590535 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281422614 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474793239 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.836889473 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01530735 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.291956583 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28644958 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.286902939 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268799762 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284675158 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27006616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268287718 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.674227811 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287651357 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270357627 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284729 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.270491406 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286575553 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.268705344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269432675 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.27857095 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.276792897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.258927669 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285972143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391248552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815785147 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293024533 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949756165 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.595628436 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526401432 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2837202 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.259295409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.278542731 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273615455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271671937 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271929252 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266561145 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792626778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.284981011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.280077884 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276156374 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.271765673 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48108221 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273971546 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47794867 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289578329 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291743422 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.259488841 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271698496 seconds)
  done (took 917.117753036 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.271939908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.288563238 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.27740573 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.280627723 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.27402488 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377776874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.336814486 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.271610559 seconds)
  done (took 19.560316073 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.279857277 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.277196481 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.279390093 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.276324743 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.273116509 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.72237147 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.291073121 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.276832946 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.288657579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.274334464 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.277238682 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.914851751 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.291910961 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.278616468 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.269483635 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.277917664 seconds)
  done (took 30.731216546 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119783341 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.364498006 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.977077978 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.273939005 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.272096013 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.271344787 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.452655814 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.285084239 seconds)
  done (took 25.199170487 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.281771628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.281168819 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.282598436 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.283002128 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.283379294 seconds)
  done (took 7.595104276 seconds)
done (took 1164.847752309 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.277734844 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.280288716 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.279747655 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.280601606 seconds)
  done (took 6.301479945 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.261817527 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.262581685 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.261802519 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.274604102 seconds)
  done (took 9.244652202 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.942959517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891678835 seconds)
  done (took 5.017531495 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.745854576 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.752151172 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.745369751 seconds)
  done (took 6.426633408 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.560401327 seconds)
  done (took 2.743851664 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.161282878 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.275708996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.920172842 seconds)
  done (took 7.541636962 seconds)
done (took 38.459761409 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.270836111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.515229073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425763033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.270529879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431924672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.426914509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.008113178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.270747861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.270705209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282541522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.270943588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431826655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.992221141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.517380494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.995659588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.515837182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.433041677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.282506905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.270824548 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.271588163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.009083496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.271951652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.271659269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.273376966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433619015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41842754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.283176222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.518898662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.275325726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.271596712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433205538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.272266317 seconds)
  done (took 79.074384286 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.27681685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.272688241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.2840165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.271807815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.273766404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.281985867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27523873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.27403088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.281773829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.276956168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.277320785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.272619122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.275671313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.287679561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.276032256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.282823062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.275348015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.282285059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.274014777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.289651662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.274690955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.287007425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.27349443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.287587881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.273218915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.283814533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.273896485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.291505955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.27551896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.274296309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.301098889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.275007238 seconds)
  done (took 74.12069982 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.283925327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.273857922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.290328342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.281783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.273976422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.277195784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.275069608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.274061746 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.274341208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.290640385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.298521739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.274595101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.275081596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.275602159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.275696784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.276111334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.275570095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.287984161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.27536854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285847782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.275716039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.275568554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.292091095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.276093087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.291903264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.278598522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.284433538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.290158943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.286232393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.285659808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.279658797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.276435191 seconds)
  done (took 74.177197315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.597499226 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.28782728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.289821619 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.28262746 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.292638455 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.287387727 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.282741369 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602861772 seconds)
  done (took 14.112643775 seconds)
done (took 242.668939573 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.280204813 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.786938371 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.324773297 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.281667643 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.302861397 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.309699838 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.500653194 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.324795727 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.500825858 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.298762363 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.300648056 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.28409918 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.055904022 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.432696842 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.117087042 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.228535927 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134306896 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.278574339 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.840412292 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.555410776 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.307903853 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.279538412 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.111204686 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162092982 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.271384134 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.36168094 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.37931444 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.505295958 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.441267213 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.361059953 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.780665535 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.283545035 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.28370291 seconds)
  done (took 60.858628601 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.283524108 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.288359828 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.289482053 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.290488522 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.28916237 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.290135784 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.284736566 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.289178262 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.289678823 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.289926816 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.288871989 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.291240976 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.290822016 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.289725198 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.29028721 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.28144922 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.285206266 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.29016749 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.285166415 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.282321493 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.29041404 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.291582456 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.291501815 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.289674605 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.291314362 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.290965358 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.290940254 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.291964338 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.291168925 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.292081837 seconds)
  done (took 39.864333472 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.290696497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.861275912 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.009243963 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.292862031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.287081395 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.291519938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.560118893 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.291082295 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.290598854 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.291438314 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.759735422 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.29415495 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.322034994 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.025098709 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.289329769 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.292036232 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.292674275 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.287906722 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.872148583 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.297275093 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.578216224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.292461373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.561556133 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.2982382 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.308507433 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.289423916 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.294244019 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.105067649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.309087918 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.76280279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027143934 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.562928689 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.025343332 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.028889664 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.055449444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.30104402 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.294441844 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.770711225 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.290880315 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.289620323 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.56175623 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.290467704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.01480102 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.963686755 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.307240334 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.292707148 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.127163224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.784058344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.521838618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.295083179 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019725664 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.292529259 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.29682079 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.292365414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.52177787 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.292659743 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.290323934 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.132592222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.314191786 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.564611498 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.2955064 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.291457874 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.867509444 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.291221698 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.860808697 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.293118097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.300144151 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.309598007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.018251359 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.294258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.982448631 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.308161977 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.295123058 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.76403271 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.861412734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.157399091 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.293372469 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.868537431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.051942823 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.580790963 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.295619084 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.066719671 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.581832596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.295382623 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.299100961 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.299314999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.297130958 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.367975768 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.564177736 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.908295101 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977972523 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146545662 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585730897 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.301855709 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.294060846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.136176744 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.316787372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.298648631 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.018607625 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.984225699 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.31024017 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.300978197 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.989025879 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.312628319 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.568625585 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.29948694 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.027851225 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.294981355 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.368881535 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.298906386 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.301426703 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.315141826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.568515139 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.298105135 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.299522933 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.971903583 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.794041188 seconds)
  done (took 182.359007557 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.289518611 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.304290512 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.287929546 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.289276675 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.289452558 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.296833407 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.288952525 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.289221929 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.294416901 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.28897493 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.289838395 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.297368533 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.295420152 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.289075092 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.289734256 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.290344231 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.289166281 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.292789474 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.28955685 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.288963089 seconds)
  done (took 43.033071824 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.30108205 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.829151125 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.803745726 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.301702756 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.301191778 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.297200692 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.349385827 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.30376379 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.300357053 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.581832342 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.461170729 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.302682956 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.301149236 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.301867881 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.805471593 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.292828011 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.58263986 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.830722443 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.301992153 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.831671051 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.293437967 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.301667937 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.298424152 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.833617172 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.589262808 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.571930321 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.352215236 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.838440917 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.302470198 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.303799739 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.834830435 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.303688074 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.298150981 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.834438138 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.319009718 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.317055956 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.303283262 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.353562734 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.358862692 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.589306696 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.837164967 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.577242961 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.313659364 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.477004519 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.304418438 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295099092 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.839187976 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.318946153 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.294964181 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.305175808 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.310396219 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.815748263 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.315548394 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.815612272 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.319543047 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.30456459 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.83637592 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.817588055 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.827691532 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.46346634 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.302447108 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.573742571 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.304467108 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.843884147 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.319697191 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.304901147 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.305917918 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.466748338 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.837336217 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.574857599 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.587121097 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.588155692 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.304838034 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.361141107 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.324256672 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.589753057 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.360516944 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.706301984 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.588880193 seconds)
  done (took 118.417698624 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.556339511 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.409832054 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.678575837 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.88115401 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.787173266 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.437168047 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.408477613 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.553991078 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.301503796 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.389945422 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.920663581 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.432241029 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.030292518 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.385165997 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.404955101 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.463984414 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.683242173 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.280686646 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.970004971 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.893864796 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.300760219 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.401126315 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.829170345 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.488695969 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.303398432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.861126959 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.235216289 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.802963087 seconds)
  done (took 50.298635814 seconds)
done (took 496.021028883 seconds)
SAVING RESULT...
DONE!
