cset: moving following pidspec: 11594
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.685864654 seconds)
loading group "string"... done (took 0.560980567 seconds)
loading group "linalg"... done (took 9.509794403 seconds)
loading group "parallel"... done (took 0.17946503 seconds)
loading group "find"... done (took 1.569236545 seconds)
loading group "tuple"... done (took 2.223391292 seconds)
loading group "dates"... done (took 1.513345345 seconds)
loading group "micro"... done (took 0.214474575 seconds)
loading group "io"... done (took 0.616352045 seconds)
loading group "scalar"... done (took 47.979776431 seconds)
loading group "sparse"... done (took 14.611211133 seconds)
loading group "broadcast"... done (took 1.295331645 seconds)
loading group "union"... done (took 11.357617135 seconds)
loading group "simd"... done (took 2.840484866 seconds)
loading group "random"... done (took 10.958982275 seconds)
loading group "problem"... done (took 2.367228522 seconds)
loading group "array"... done (took 26.297732854 seconds)
loading group "misc"... done (took 1.197650096 seconds)
loading group "sort"... done (took 4.07410613 seconds)
loading group "collection"... done (took 20.926239174 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.699986768 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148296685 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.232693695 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.371668055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239722186 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160654633 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163526982 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.283020086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.237535043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226368843 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150162295 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.589396563 seconds)
done (took 6.201990732 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.2930155 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.257752096 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174178001 seconds)
  done (took 1.072976486 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087305458 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.175170247 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09277219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109057798 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108877729 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107658761 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093223487 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108636833 seconds)
  done (took 1.433084424 seconds)
done (took 3.530173933 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.546641088 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.927914117 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.573349152 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162436837 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.319576737 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.347411036 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.341634988 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.207332256 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105723851 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105476012 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178132895 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.433803394 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.452776305 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.040675133 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106130944 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093724553 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130870205 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.845632513 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076161304 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131270775 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.580994478 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213065806 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096620459 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.130053473 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195839432 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116552974 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175708414 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102461709 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.711502495 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133455484 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.204807658 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.078854765 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.177126063 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.248091553 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223209983 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10437219 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721376836 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198049318 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098237558 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098697683 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.73867685 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.13404346 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.169354278 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101714271 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089164802 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193007471 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118434148 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09164397 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.113048463 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084154605 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17641637 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480124867 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.090105501 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169473302 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090860962 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.75794366 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098295841 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.28875022 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13498972 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103330399 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.074203061 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101726527 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172347968 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111095585 seconds)
  done (took 21.097577947 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161190639 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168463639 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074352086 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156775594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142281966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093459156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082633593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091512538 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127180921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241093154 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139229241 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.169889926 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072190464 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.098882834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147329329 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249855107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10522748 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120850916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097785503 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090518248 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141198444 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108850341 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093088997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11058586 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168298975 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203924354 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11946773 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118973372 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096789268 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100616702 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139719899 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162586669 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.087784824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082376999 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186680147 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116458607 seconds)
  done (took 5.327134743 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.225896728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122408939 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237255029 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180893223 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147770139 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168059521 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156994222 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302001239 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.325871189 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.191454906 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175950814 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113648859 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110048627 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091290364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083713126 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092692953 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.61984736 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186074024 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149846035 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.150643057 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101496114 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085205849 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.736654878 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098115468 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093663722 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083431206 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089960771 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204847206 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100949119 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.220783086 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082620893 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106047426 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128085341 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189471743 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081721613 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132011751 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1418491 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100227979 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079619017 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.237564658 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090993896 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092078391 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130271489 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113807826 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132618454 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098396384 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108761668 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229095159 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095313433 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121424831 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.163056831 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198670588 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.136026404 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076841205 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324790515 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113519845 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084044689 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099202811 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.325891003 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117323076 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095078614 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09576887 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082948704 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093855525 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.782125689 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108116352 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.271899619 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082959049 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166474145 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098713897 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104098017 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1015718 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082926577 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095645327 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097550846 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093653224 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074077355 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095419535 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075083327 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099032559 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118080359 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081688733 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094845324 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154870871 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093602035 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113840513 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121387772 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082852116 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093034525 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124503326 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079339977 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097237661 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172253255 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084666666 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118255968 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100127677 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13973255 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094031958 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228654249 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080486804 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095907727 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105505168 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099141493 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125810355 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112949345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093040662 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081362979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092370453 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077504845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160682858 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078279527 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094393402 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095887701 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093014204 seconds)
  done (took 25.064043476 seconds)
done (took 52.127407404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.530287293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120572169 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121397516 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102800016 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12016942 seconds)
  done (took 1.715966048 seconds)
done (took 2.408813016 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.407185111 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209998462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119761678 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201622432 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105104957 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.209180475 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.214049404 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093747331 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.246745533 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102269209 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.207306671 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102047175 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102703725 seconds)
  done (took 3.04165356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096632342 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126316184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096822745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11394483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074326277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115494827 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111657452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111277655 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112702263 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087977492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094916223 seconds)
  done (took 1.83120903 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093782141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120081338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083953168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110359557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076924878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109945654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091237344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123736112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108469061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09019831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093338584 seconds)
  done (took 1.793648485 seconds)
done (took 7.352661897 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.194521179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.236462285 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.17078825 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211567179 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.386370352 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.25760373 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.649668073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169176354 seconds)
  done (took 13.159724956 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.180507319 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082293374 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100507294 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.080839993 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101033498 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098676612 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085099903 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098826161 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082995135 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097892268 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083996866 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098177601 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083517495 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097268776 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083262709 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101426323 seconds)
  done (took 2.316092697 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122567987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121624525 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107586717 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110382022 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087600002 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104649232 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08998247 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1060849 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102053618 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087327218 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110084722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092515023 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107440695 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102062003 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090826087 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11164232 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086987063 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106621805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107428647 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091895383 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110283424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106385495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092196215 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109877001 seconds)
  done (took 3.270263138 seconds)
done (took 19.437255745 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.180716693 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098865324 seconds)
  done (took 0.978774771 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.152636058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154956528 seconds)
  done (took 1.011141587 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112874746 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098054659 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142968867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120526122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082244089 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098059942 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137292757 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081947873 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099095684 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082305148 seconds)
  done (took 1.762353949 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087085682 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102746252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.095586041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150786854 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111386413 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103770213 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087913023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104278574 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.089530142 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099392871 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10842161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109170547 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.105516739 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126348828 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104077332 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093437011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113584432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106192421 seconds)
  done (took 2.606003026 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081169996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099728259 seconds)
  done (took 0.887355289 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088336827 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098984126 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087802305 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105185533 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08414386 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.100073624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098776363 seconds)
  done (took 1.370182667 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.520174412 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.293208838 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35701152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120114153 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161895044 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.381280533 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147752414 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117845818 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.118369642 seconds)
  done (took 2.963910734 seconds)
done (took 12.283522825 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088392091 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.226359018 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.66161195 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122160776 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081844165 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159241889 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319925109 seconds)
done (took 2.366554496 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354700689 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161109233 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090864419 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081677069 seconds)
  done (took 1.396194978 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077041345 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107446028 seconds)
  done (took 0.898342634 seconds)
done (took 3.01392124 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080522315 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134541678 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078251569 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09813045 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078734221 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098381321 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079238845 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096856854 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079352024 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09577055 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079298321 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.095476394 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07913661 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095181567 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080029375 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095708972 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079151283 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095604285 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079645932 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095676695 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080362372 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094481155 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079363484 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095623471 seconds)
  done (took 2.892997998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105344435 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101174933 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087296166 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104622193 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105639461 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087700981 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104362018 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100252962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087601489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099003198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087761592 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104554087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082716083 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104739296 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099850521 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089278171 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10488694 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083471778 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099404149 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106096989 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087579382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100723932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089618527 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103560456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105843535 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087961567 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099974212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084248542 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103564287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104775003 seconds)
  done (took 3.626660599 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091044555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093276079 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081106098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10377177 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078008458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099421078 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076713498 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094347516 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082672646 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096645845 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083095094 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096834624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077174595 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099756789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083560764 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102355484 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09412677 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097841523 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079631814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.103120665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084474001 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09755454 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082669533 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.100309248 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083531405 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096471071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083914009 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10053871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084861623 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09945936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085665354 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103683902 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083209133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.110241669 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086483936 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09951472 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085618942 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095045755 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0828104 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09429574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076635366 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097563156 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076998882 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105972097 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080836373 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099349643 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078126457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09980163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081724663 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103442839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078297904 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096663858 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086836792 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.103937416 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086991343 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097191074 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081713135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094942737 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083432345 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097608736 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076533733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096156708 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086872778 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101580457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10157777 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109058053 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078161951 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.103392581 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082457046 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102661294 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0999507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093377924 seconds)
  done (took 7.315023769 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096134218 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110144821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083077952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100638085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081307426 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100172213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090917582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099531482 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084726247 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108642267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098720374 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082666206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100723697 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083286246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099252596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084868942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11035136 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083256952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.102400314 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085712551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102078344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110886889 seconds)
  done (took 2.825208149 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.246803365 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106759837 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154840771 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11745224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124785043 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10211955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108289066 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091959344 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107991351 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114370974 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095584627 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105220978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12396825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094465473 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111204144 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112899757 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087242818 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112529911 seconds)
  done (took 2.843789178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101211716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102502876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10978598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10281983 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102038069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084375286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111814823 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103229768 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103415156 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.106633229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09835792 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105430722 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087057298 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105191963 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087483597 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108722999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105104712 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087714307 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117166072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111952111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096751123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116962897 seconds)
  done (took 2.98226004 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101830459 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101490349 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136480296 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088702042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100050981 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08217939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108751924 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083852187 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109599451 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09987331 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085046222 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101014125 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.093877541 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102895616 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091970042 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10324813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082923583 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103089556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102332181 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083384671 seconds)
  done (took 2.689759162 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182956963 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099678227 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118005482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132445495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100694806 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117430522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130436986 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100019217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117172834 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134141344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100289201 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117638192 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131702214 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109284068 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117387502 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132267302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130205542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114338709 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117998907 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117524841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135609995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099839065 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131822015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118517472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101649723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118503441 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101681325 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125240686 seconds)
  done (took 4.085195243 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082130712 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080633866 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098438022 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081425682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099359108 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081986768 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.100073334 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.083650261 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103358199 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083878618 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.227226809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081630294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099982336 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083009569 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101064979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082958782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102449757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083507337 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102866838 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084572271 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103411479 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084973364 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102974265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084157972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100284266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081881252 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098862087 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082492205 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099867978 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081455533 seconds)
  done (took 3.59584736 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094333277 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110011979 seconds)
  done (took 0.939775276 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092222536 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119369888 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080980801 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099876445 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093222395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100721864 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112372705 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092596454 seconds)
  done (took 1.523857913 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.153052687 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.15408546 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089500914 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114690132 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151972241 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151740855 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153621348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09074666 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104393238 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077649145 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147932254 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098560092 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089018539 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106572393 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090798309 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115944816 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085805122 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115872981 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.112713134 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089556526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110809732 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100130483 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111832312 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097656678 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102448906 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11294593 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096469319 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.118455663 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087274422 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112557018 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106808849 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086660885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108895829 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092448881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104829795 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.157226463 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10226155 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107547784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09170822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112690902 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114660462 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.086007212 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11258869 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089678503 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114355833 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092882276 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112761218 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086594802 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102538235 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083881744 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105765496 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086777904 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.105469341 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111189171 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093795167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119411938 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089144221 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102683245 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085616721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105292217 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108103348 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088057474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112586681 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09154579 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106281478 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091536259 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110790594 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087261866 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.108213507 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08765841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110394599 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126817317 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094611147 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113017735 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092995791 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106041029 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088400249 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113087078 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110025393 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094684359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.110824577 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095715287 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108632694 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086817297 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105839765 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112018147 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087573318 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.108634386 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080004024 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121250709 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089852533 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106661826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084593731 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110149289 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086173905 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109385806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082747784 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111388361 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084063377 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10798616 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10803478 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081056176 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109279691 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08948693 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108396342 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087965854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147476253 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104090737 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082895087 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103807039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107955598 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.081098107 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107051724 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08302595 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100925464 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082852843 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107471296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088764136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103426639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088910751 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103494545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090312558 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103205133 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081773745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101401194 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105526335 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094211176 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108208113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086152475 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102473342 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08451589 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106574398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088145288 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103429908 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107059626 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085392441 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100826208 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084805302 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10730852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089086772 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101903021 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08689059 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108055337 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104785841 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086423955 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10759603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083280126 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097567272 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089732896 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101879135 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084646321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110754959 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101480429 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086618859 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102530097 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094672005 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.1029792 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089385253 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105752635 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089490276 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107643375 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077010765 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103924797 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086291622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109973038 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106799133 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085890685 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100538533 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090939401 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099313497 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088741421 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098345155 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08101616 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108650965 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084675697 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106136328 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083003122 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120092079 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116820409 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090994204 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10608576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087298109 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106854831 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086997196 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106336742 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110172039 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090905494 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106315864 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086423881 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108185129 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081685359 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105219217 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087248383 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108171469 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078142174 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103697136 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079745819 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108815011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109292223 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089517075 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107957923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086577592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106027131 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094969477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102629336 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088730676 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098996078 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088269409 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112900197 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109833434 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091521393 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108020571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087219245 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.103147887 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094373446 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104434687 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088748365 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104377759 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080221061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100326352 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109259515 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088107262 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102056358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.083148092 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108298826 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093166556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105506346 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07978438 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108834201 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11140803 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083690449 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105951925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084090402 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105321599 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097864279 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0992304 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083152161 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.12006465 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108344972 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083701718 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104152723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086845548 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108865337 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087245363 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104274802 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086374822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110938375 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086284349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.102022593 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084791875 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105029023 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080465976 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103897028 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107846014 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085975977 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102216873 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094843108 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109994622 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09067298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105398245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098663339 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109382245 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110151814 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083148099 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108606873 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084223464 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098830183 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085280214 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097176989 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085379461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103139512 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089259757 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105426623 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086966895 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106155678 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108886896 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086594139 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109548793 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119696344 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080989964 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100770416 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087752405 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107361665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085667097 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103205475 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08552322 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107950213 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089187058 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110836225 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099526344 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083431227 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10848956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08592269 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109108351 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092879562 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109766874 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083652163 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107946415 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085607052 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112723066 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081573451 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107767238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106271031 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088076288 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103539753 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086785083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103182305 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080991026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104035274 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.090923677 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100858321 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107552368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086579308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104353234 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082244782 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102657655 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091473934 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100464676 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092006466 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102642342 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081388043 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100474137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090070623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107797392 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109476566 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084166696 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106895968 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092211659 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105929733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083333125 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112235563 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093117762 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109391288 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094979204 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098341002 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085392974 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113861397 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101655392 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087565 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104195803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08209357 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110475394 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091887265 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108644768 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086768333 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100903265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084824755 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.109819771 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086731983 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106676237 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085779278 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108139759 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10157494 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087908087 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108876957 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08886144 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111139441 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089405688 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106981642 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085103957 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110072704 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084317553 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101298486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099652751 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087180603 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109658825 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079015167 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.107518428 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089351225 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103640274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087594989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107341924 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084187573 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106448769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089513562 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103795683 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114252972 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086792659 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103251224 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090169731 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108139292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081264711 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103002107 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084560332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110885272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088099745 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109827426 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089074401 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109101152 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087055845 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108603845 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108701115 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.091145143 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099708315 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092123956 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112085088 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086651785 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104682977 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086380253 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100218381 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086557302 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110181777 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103559929 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09477365 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109466167 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088530429 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104748336 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091223946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107143017 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092058772 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10262351 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087847005 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100351142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110822481 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08786172 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110769465 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085360393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101245719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08995844 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.109196966 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088530647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111887402 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091532145 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101580341 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081328695 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105840453 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104075813 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096087163 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104697102 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087141376 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107176946 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087243327 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105003239 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092463536 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102002736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084557037 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108610963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108028213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083572976 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100705771 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088617389 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106654774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088520158 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107611957 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082564659 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107031038 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092838484 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10590418 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080300131 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105728644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110441014 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088017336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103995624 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08318614 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114513769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090885091 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112384422 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101652085 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090540125 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10512931 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087184383 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111266045 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086473997 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110247709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086910413 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110211141 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114641429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082284984 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101630844 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0964294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108012609 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094005959 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106901452 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087459849 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11204338 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110669179 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087742149 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100246324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083465667 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101581585 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083185509 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105921809 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097539974 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10736089 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086945254 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108875361 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088819664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105679829 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087315077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101400082 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092913021 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106019562 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111946278 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082599137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099526738 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087338463 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109338138 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084239015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10403388 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085806708 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106885128 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082967246 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105559175 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093210908 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108737584 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090730846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107517324 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106161191 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088161884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115180625 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085396408 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10468349 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098777557 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.111738446 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089194188 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108898277 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112502205 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092719081 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106502533 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.092528847 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10624113 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083453816 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112258313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092554672 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12033553 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105916467 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081014791 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108143511 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.083752167 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101557565 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094561212 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112816334 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091756548 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109332151 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085166032 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113388265 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106590487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089195137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105480335 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087553616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108973989 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086435119 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107840369 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084922408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112866231 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092643901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110907461 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112411941 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081556459 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114659833 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093358371 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114351893 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085419187 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102390399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082565055 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107502522 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092314138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111976593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087876143 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108314643 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088479893 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109701494 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108323878 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087949606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11229395 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091001307 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10497871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091432864 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10300638 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085164272 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10475881 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09125031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112959441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091035644 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11726695 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110750714 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08869945 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104870824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092146562 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106835215 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091305589 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109850134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085753035 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102350878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091611849 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.113464183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107250104 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094819561 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113110084 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087895747 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111200596 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09404071 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110826426 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08618401 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110678411 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086975008 seconds)
  done (took 59.874545843 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.166299012 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095281912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107644805 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087527274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136609951 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107607247 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08815634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108356643 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089334496 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122511597 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087095911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107428358 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131353143 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140837745 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136057707 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102869949 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10732043 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088339613 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10669528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107635145 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110948119 seconds)
  done (took 3.123991503 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112443672 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126968734 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125336605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127363083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097509319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123558829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125081876 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122787919 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108387339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120499766 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129026963 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123039593 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09993618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120087211 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120065601 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100701133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12820337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118783119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125166806 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106020943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119834625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124516962 seconds)
  done (took 3.392528477 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096606714 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108651873 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09343628 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10645897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090986354 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.105596841 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.096863723 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105795885 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.096074754 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107703438 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.083858902 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105208642 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087990864 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107158728 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.084970785 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10730583 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.096934064 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110502713 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09109031 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.106913147 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122834401 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086874375 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107263846 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084461789 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122635681 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091579634 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107133201 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089644893 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101740134 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091848664 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107853079 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088661692 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111028953 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.103647317 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082974025 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110314567 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090993599 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106342916 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08763027 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104017726 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089519181 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111284169 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.095007303 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.107230494 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08680533 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104845551 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090905261 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107166309 seconds)
  done (took 5.570657325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127048418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16944824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092475246 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155983376 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130473111 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122788135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091640071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133879094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.112184173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091074539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.133272986 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133608918 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115191327 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.098114877 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112039395 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114508836 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097162306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113105613 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121846138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093972907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121867304 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096020372 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.129573925 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130120527 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115857432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093345807 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115470301 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116502791 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11102699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122704772 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.118353412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100072146 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130670221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117488547 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092469702 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114871631 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.13079524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095861713 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.115629201 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.111210996 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094966203 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118323339 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115935098 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112999949 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116807921 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116508857 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096822348 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110033038 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130013376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095181951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122968089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133013964 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097635537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116356108 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118432846 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110642566 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115898669 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.111942508 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.096564483 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129711326 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.110565254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097672518 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1322627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112413969 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.102392726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13277479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.1172542 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097466274 seconds)
  done (took 8.756322856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12790216 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120032131 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132493104 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13239527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098696959 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118856311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097756375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119255589 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118115178 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107727186 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120040725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.208227931 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115513226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126354491 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098424523 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120397742 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118233946 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099512708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118632123 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119317089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09886777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132477417 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119048342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131749264 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116005591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114144022 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1181931 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099410511 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132965059 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11793818 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135583726 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099369343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11991867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132267457 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136433961 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099467207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110130922 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098728953 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119668056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117446024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094494611 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133004791 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119370547 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.094476745 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119234281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118353525 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112852547 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13632284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125431013 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128342374 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.099130311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133014523 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118928515 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118846287 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112776318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142888847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133315451 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132803277 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119408239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112327519 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133471691 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143546976 seconds)
  done (took 8.251991408 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088133175 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087046625 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.108342728 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086771593 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108944007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087795672 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108458008 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087468623 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108440207 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.087611694 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108934843 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087725393 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10793638 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087752243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107061873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088932758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107561453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088176924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107447512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089683198 seconds)
  done (took 2.742702259 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101289085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133583182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091824514 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122353482 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112426219 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101367494 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112037305 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091531653 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11431644 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112632365 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104673908 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126221436 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111822329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101101082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125806064 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120466737 seconds)
  done (took 2.588702791 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116832264 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13482331 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173930973 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114777988 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09310109 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.121751857 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090858718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.11742687 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089465122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119930637 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116121551 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096426515 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112665632 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091735176 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.112642871 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096019087 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111306951 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.095867664 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11225969 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.173536277 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119787803 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095084217 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115293416 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.095348586 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.116751475 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118875939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.099356339 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.113666846 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09302695 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114201145 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.115999805 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.102742452 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.112650185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.097652946 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113166129 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093614461 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112583999 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111985602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097944791 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112056571 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092728381 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.114151381 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091785835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115691425 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.090248212 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113632074 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088694638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120664868 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.114024036 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.096284751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111626676 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09829079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118108117 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122687066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.102820878 seconds)
  done (took 6.840547143 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106548258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113274511 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.107425649 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110844518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091870795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117047638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113743186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095543316 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114535227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089839813 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115555978 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094540827 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115267399 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093748648 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114902984 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114196207 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089261698 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113142385 seconds)
  done (took 2.723338983 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098639857 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112068129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098110384 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112225551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09112337 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113273058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090474987 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110228782 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089216148 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.112327893 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091737976 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.112632572 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090089104 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112846425 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112733145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0923139 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111518051 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090531658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113126216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090754199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111846123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090801492 seconds)
  done (took 3.056472522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110307442 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.174979258 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.125446255 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189757516 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113910769 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091070815 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125138028 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.113624927 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114262287 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112706312 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.11190756 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09210077 seconds)
  done (took 2.288447853 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121578803 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154531396 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112510991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092336727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126546952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098445727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120302713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118620599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112235761 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138642255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119630973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131387263 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130909062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111971769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125584438 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126444736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098774678 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121357472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113634118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144224553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099174343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131932606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119622235 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10013499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11962775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134072035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110340425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13799947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120945869 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131185791 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104235518 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120120367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131843962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137094922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091933798 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13149712 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119695672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143332369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105441572 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135363749 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112805826 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105241731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130951874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129134748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132511425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099336653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129772288 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120023591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099296914 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150679136 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127529568 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134452876 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127105966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131311958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110897048 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150350748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138076384 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134142296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126774727 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13715003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112971932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126536311 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134727815 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137267462 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124903492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113657359 seconds)
  done (took 8.940865555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141148859 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116023656 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120220731 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137906033 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113343878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120710526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120139162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099209002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120205835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094458487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192728655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100933698 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136416711 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134129951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099290198 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12037646 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11995597 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133569479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095792468 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152442479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119872039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135118843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113957421 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133478648 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137002491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126321294 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099278822 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121237955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119782457 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100353228 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131130166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12055801 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133337145 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094553618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135401076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118909525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1009696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129741832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120102572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106190637 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13451888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144723274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120717196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099305183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137273317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120613685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119268052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095993911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12005908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095043044 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13799774 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13890992 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138617953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1341739 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100087199 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120770584 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119658576 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099486607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121947195 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127350065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113623166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121627371 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153882789 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121453452 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099242166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135255809 seconds)
  done (took 8.860720842 seconds)
done (took 163.042357764 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.135619994 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.200846764 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15309456 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1499634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106676071 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128342464 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141921315 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.155230189 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086574443 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106563117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085771195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110959046 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153196715 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106360321 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086021945 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111692312 seconds)
  done (took 2.834461269 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186970542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.349892788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127590649 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11841461 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095673554 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110936322 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.097033745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120442715 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110576747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102468325 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110067086 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089180084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1228926 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109124648 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.092204077 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109471383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101780916 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111208313 seconds)
  done (took 3.087909865 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115995263 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162985906 seconds)
  done (took 1.101714042 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127059831 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197112104 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.331022722 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161756752 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118354686 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136835778 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164568169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12992988 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203782277 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132512421 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132305657 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093424604 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142661129 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121896051 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.105677558 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11436868 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144261556 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104352583 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.123962503 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096333353 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138310247 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118720181 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100790758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125925755 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193646624 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133869298 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.118371658 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.098186456 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117312819 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102038032 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118103213 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133727703 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.131625739 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185146933 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120409569 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180606349 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127582375 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093380004 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12516948 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113801494 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099048491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120328997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135249263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093684584 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.119974177 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126128111 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.098781041 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11976257 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118664729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108808724 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119347817 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116318483 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179218019 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128672858 seconds)
  done (took 7.966133432 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.890131889 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16117451 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114139906 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.051360854 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14212789 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108303438 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.912389796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11639866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279923135 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.9088589 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108633575 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129138611 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262820276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.271336905 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.209482078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375522839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.747097699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12986232 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142620654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164501527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103547919 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14262075 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139370679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445238865 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115131555 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091728431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124141639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125830119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181305624 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112238414 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098268569 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.222407748 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285328755 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234106436 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091683142 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114077543 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110944708 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188626759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306373812 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.250178269 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183806982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108868972 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091656005 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121933017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136893679 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089108798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20254975 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1940449 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192429606 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120278994 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126153776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104374263 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122907659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179667991 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111627679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370539428 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376287285 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112703078 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102940965 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131065296 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.301142423 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112090047 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259716331 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142520559 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245446305 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091814108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840215988 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186120771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113703322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119062483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103092621 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122144307 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120836469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1809168 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395276539 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104071951 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120149101 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111180543 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256297363 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113222764 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089540368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.207203634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093178234 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125089006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127186956 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103481185 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.215603739 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269945952 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127976726 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124245481 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098618064 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130302276 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114385947 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232692704 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253639829 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176816392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.255309226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100768807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.205351442 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184079046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121354704 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189767875 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123936386 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128855326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101390585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25066756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155186062 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114316001 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11902806 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104009409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157876656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117232062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12430537 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189945173 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.50788977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188658345 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085681907 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118375177 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124458811 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183290311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122309424 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294132331 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104406772 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.208911381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1016096 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109815509 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123434287 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185164572 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122419854 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103041791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123763936 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12673666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269857408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254413255 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126714441 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264793289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187045439 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099414284 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.213823995 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101984306 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214689848 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103041734 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123974187 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114705826 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842372062 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107440702 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124859705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12006448 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213447679 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090162847 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1150089 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090369516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111884616 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820770342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094721419 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111040537 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092256157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121368951 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123835908 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104262281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122137467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180833154 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266787212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129107796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123415284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090502125 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.202542132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093101 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114280309 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090513965 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115520693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123736095 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099442492 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113692261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193578023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177162468 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.277912753 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531932516 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115223208 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090614104 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.288775396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092172045 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342935751 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125754787 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261261643 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186405022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111283806 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375483124 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211293948 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.217941897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094652505 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.212230924 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089961789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124378277 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181734839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11321979 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100982906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19909653 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107716238 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128703268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198505327 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113799003 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250891487 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109644826 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192191974 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11485347 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100330453 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342917384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115283659 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130929376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18185915 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119674071 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092575551 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.694242808 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09094049 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128672968 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121436051 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.257567361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187034155 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12652482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1247309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106677857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.204576517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231258037 seconds)
  done (took 47.44714983 seconds)
done (took 63.260636442 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324468588 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290354248 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.348413691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236539439 seconds)
  done (took 2.131340715 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.233971917 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165721801 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.196174612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114190898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20566403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.113114254 seconds)
  done (took 1.878150224 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.550073273 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.450528226 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.357216698 seconds)
  done (took 2.210324732 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28141397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.302391237 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344987906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.527919172 seconds)
  done (took 2.421727299 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.263526798 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137062424 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130974216 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.188509087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229611109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.22720938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133980221 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192988287 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.116843761 seconds)
  done (took 2.51972731 seconds)
done (took 12.014554842 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.410463038 seconds)
    (2/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.311820369 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.369436055 seconds)
    (4/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.353855443 seconds)
    (5/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.258445698 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.214478754 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.332169335 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.234675807 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10175264 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.176712616 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.366250884 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099940493 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.255483148 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.258498796 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.208853607 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.300518423 seconds)
    (17/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.213895454 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128843761 seconds)
    (19/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.170203146 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084829398 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131721526 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.248671121 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.170377752 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.161692517 seconds)
    (25/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.319167847 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139433179 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124591352 seconds)
    (28/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.300447427 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.264792924 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12483147 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234013547 seconds)
    (32/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100324923 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.156229639 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.134813997 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.227293271 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.238243894 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.158838567 seconds)
    (38/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098410464 seconds)
    (39/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122057749 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099221806 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.23653591 seconds)
    (42/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.15367876 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.184189453 seconds)
    (44/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104927511 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.189121848 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.161184814 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.183718944 seconds)
    (48/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08783304 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12505024 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.213020866 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.237038545 seconds)
    (52/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.245245948 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109869432 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.248841036 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109452429 seconds)
    (56/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084050404 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11532955 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083365937 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.231920292 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082962293 seconds)
    (61/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.254348612 seconds)
    (62/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.104808493 seconds)
    (63/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082463834 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123078838 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083131851 seconds)
    (66/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199382104 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122311676 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.189526524 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.12122167 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.211650071 seconds)
    (71/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098434318 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.209817775 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.209315299 seconds)
    (74/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108614666 seconds)
    (75/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.183574881 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.140226529 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082739911 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126502682 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098453904 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178179472 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083052569 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112071903 seconds)
    (83/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082215806 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.179605553 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.161113798 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140728449 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081241014 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.106509038 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099375911 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.164061723 seconds)
    (91/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.211731575 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08303058 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.124487531 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096916339 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.106156571 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090786525 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122656546 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098338859 seconds)
    (99/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.111203105 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081830977 seconds)
    (101/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.104131268 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107927004 seconds)
    (103/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.10414963 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.178153417 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125022617 seconds)
    (106/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086379565 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.107159239 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083537462 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124450175 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110188494 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.10523395 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083679923 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121541288 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0834718 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.229731479 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.111581976 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093662184 seconds)
    (118/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123986646 seconds)
    (119/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178018005 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.106166263 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100953425 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121256124 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213163112 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081905772 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123770676 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.161127991 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.126168736 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082029181 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180066453 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080928922 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107749555 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097406412 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.106746267 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.238202149 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090552487 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120404137 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094364368 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125178794 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117918687 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.141078184 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082505259 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126547707 seconds)
    (143/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080710196 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107263628 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097578316 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121021574 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083758359 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124725451 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083712926 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122943847 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083422229 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.181514593 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099151759 seconds)
    (154/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113085924 seconds)
    (155/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107421343 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106418026 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.212016276 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101476089 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.214575091 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083306399 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124523623 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124385671 seconds)
    (163/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084004722 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115671573 seconds)
    (165/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100674794 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106310248 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098647869 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081017331 seconds)
    (169/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119944806 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.142169168 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091766866 seconds)
    (172/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081468791 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116087734 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081766193 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.107508442 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08335596 seconds)
    (177/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087091189 seconds)
    (178/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124373295 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115345501 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089225575 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082415398 seconds)
    (182/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106236696 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092410737 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116339997 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083880917 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.141939754 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100297619 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.107947391 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088213195 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.106359469 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102886666 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107167746 seconds)
  done (took 28.469526707 seconds)
done (took 29.334386979 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233287542 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106385316 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127347298 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126040002 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186151702 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104876028 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136252518 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104167854 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132461807 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.122341634 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092886674 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.13349184 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102984849 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186616461 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.13149149 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11862309 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094475773 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.131359175 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.112651861 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13777903 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187581881 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094579366 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.132396243 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117034115 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.187666582 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09470128 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127408687 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102939378 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.134316196 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099808719 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126265529 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117475141 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112297496 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134998648 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092672485 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125138548 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092075341 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114563625 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.099555905 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.124797605 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10896544 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.12421113 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.127115108 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095498047 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.124354811 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.099316232 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117006398 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105663677 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116913876 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.125768547 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0948266 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.136023099 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.098770739 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116618828 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092255025 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118957543 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107201477 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117498542 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133039503 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092894755 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119253777 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092465657 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125791019 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092704549 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.122242037 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094586255 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123982471 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101809158 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123592434 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09394633 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117556121 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.121620345 seconds)
done (took 9.52130605 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100570354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18222083 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188545129 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.194759879 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152560163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13832384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139542773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124945988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136841924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145228404 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.131322018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148538149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.199971431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133206402 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137798465 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102689008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134078898 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103970374 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195190608 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146517344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15635397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.131695119 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13259768 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141161728 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125903205 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.160018474 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104730874 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125576365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101221321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134587037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14459615 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103227179 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127535602 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.141318198 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112320821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130106938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137114657 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.102396376 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125372744 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100608625 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139094682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136443047 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100080671 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138656035 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.125167597 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.111117199 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.132427802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.108300676 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.128636338 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126290606 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105577169 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155400023 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131615064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112142447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.131840693 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.105836466 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133356317 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129982141 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103070164 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.13153682 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100007187 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126921788 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127246218 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127152087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127509484 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130672462 seconds)
  done (took 9.598012823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122854646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16313005 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135600301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110493245 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13207492 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.113645411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091029972 seconds)
  done (took 1.777391518 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091869331 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190153769 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.191519346 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192018098 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.186623873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.226335309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116383923 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117755488 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.12845968 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130344181 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189609175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221722487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.124936685 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.136527076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.195300593 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091506852 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.194718773 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118002111 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.129226073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.19293022 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110187632 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.148988112 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13405921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093065104 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183732758 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119477599 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.249275768 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137452305 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098869639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.128980971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105814948 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.232605631 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187205286 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.109462765 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122525928 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189974115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.186341419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131516916 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.20127592 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097928923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185861497 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.13003629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.105240779 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.132903894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128976935 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.172825727 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111647408 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132930893 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.102116684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19213513 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.133219088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187384193 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.126881303 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.103840307 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131255613 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106083963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137658591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.129454028 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193352993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108929205 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188413451 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188700407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.187098605 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213693852 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116108538 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18827831 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.185445144 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.128822947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102649229 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132427892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188872445 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.129369384 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.107803601 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.174474453 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133857716 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188447739 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.188654867 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101583599 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134834031 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122225342 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103371962 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117286291 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.431720366 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104225924 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126902632 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114420501 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134794017 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.131421313 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099934521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145528875 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.130022008 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107579654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136142894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.130259371 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112408882 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191865475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132992924 seconds)
  done (took 15.357708973 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09784877 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119681385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10052122 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120766939 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095481371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120044423 seconds)
  done (took 1.580585016 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125816071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13238219 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142118711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108274629 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191390342 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.193903476 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.196845036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129760796 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15037236 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.118616578 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.194797196 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198081651 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.221380993 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11098548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.199244068 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135455227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195079708 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131319796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.116126649 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12945482 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14072957 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.110433005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129731036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.185781648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.108522288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.135614183 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133355779 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1172009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141318352 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129974306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110609061 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.134804437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124629595 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104447363 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196112213 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12717664 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102164326 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139585521 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135348371 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.109227614 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.198148835 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129763581 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142073488 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.112816713 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129731396 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125471775 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.112384576 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132992721 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.197008792 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.139356683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.112608288 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134949004 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.134353971 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.112811171 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126472385 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128772957 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.112731697 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197873832 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137462557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100801842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135494164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.135811902 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104532012 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138656614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135303562 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11267299 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127079871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.152329206 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103968206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134009152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11389518 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.134220621 seconds)
  done (took 10.911623135 seconds)
done (took 40.125798006 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.143718197 seconds)
  done (took 2.069847684 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.970700825 seconds)
  done (took 1.898240712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.384750844 seconds)
  done (took 19.35044256 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.579770867 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.673206144 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.976849013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171572555 seconds)
  done (took 3.327645227 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.014733826 seconds)
  done (took 1.963342532 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.352624184 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288867531 seconds)
  done (took 1.577064808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.742254136 seconds)
  done (took 1.684194366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.610544689 seconds)
  done (took 2.548796048 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.388696734 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.218516138 seconds)
  done (took 1.56036063 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.70675001 seconds)
  done (took 1.655584469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.578473741 seconds)
  done (took 18.527159106 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231094337 seconds)
  done (took 1.189725284 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.320072657 seconds)
  done (took 1.293186825 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.802404585 seconds)
  done (took 4.754075105 seconds)
done (took 64.333923116 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106797095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134427869 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109436536 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132913062 seconds)
  done (took 1.427776551 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110902166 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130490534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110054641 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130539794 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.137903122 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.105489325 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.131543813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109563261 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130534349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.107785481 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132605916 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130015373 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.109115054 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130069064 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.102224515 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133630124 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109085244 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.130941132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132445914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.106734398 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131545004 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106966673 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.134850256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133306405 seconds)
  done (took 3.883075117 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103143856 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122679828 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100701109 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122316114 seconds)
  done (took 1.403344604 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113066933 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144198139 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116311069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13784055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144297683 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117030987 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128335994 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100886734 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.130875283 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.138518164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123740727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.145118599 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.144155344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107460373 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.140715913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.098104289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13293785 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143325025 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112738303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141082719 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.105104389 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138837848 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.134710659 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116111231 seconds)
  done (took 4.009580579 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.211631044 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.120374436 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.156834326 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1820256 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.163952019 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.103945109 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.158623165 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137219122 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.113626386 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.135650445 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.13334134 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157589016 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137972381 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.132488218 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10613937 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.137041456 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.145079884 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113407174 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.178093871 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.137706016 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.112829031 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.146001275 seconds)
  done (took 4.085224331 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112098334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124108046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094986615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124251968 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.111914523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128117937 seconds)
  done (took 1.660300403 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10164778 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118401561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098252218 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119449356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09808442 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116591995 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090736576 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117210699 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092931539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.090517602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120194778 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090485351 seconds)
  done (took 2.219469485 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.321636228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098009624 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125120762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123152657 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.105687821 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122386444 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.11546707 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.122899402 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.245101498 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.120471018 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115678897 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.23201692 seconds)
  done (took 2.813578787 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23464982 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10768784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.367451095 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38059591 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176907391 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183596487 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295565226 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181960353 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.239652933 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128992348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243731965 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147082772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170268426 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203202779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157264135 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.227845645 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197053146 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227827697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166290657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256188632 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181730064 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187033691 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202477335 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166870172 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125174944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172491149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133268044 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114041372 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220637396 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190205113 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198111542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164722792 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130017732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254403261 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211911061 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201013102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.351450218 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119138749 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.214319785 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200557863 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306042847 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155158487 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221925413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173941529 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143120467 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205632903 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175192336 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.202992704 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145448044 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128500085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236850544 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198406916 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207732455 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150288902 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322977774 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164658388 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164582061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197140384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209793226 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213484591 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187942147 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.135254188 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205872782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200770709 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19868586 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162790917 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190102688 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141083748 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193171456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217830822 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234338746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181498612 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209627481 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142806382 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178483872 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190119911 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170974398 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199401258 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181607283 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104821088 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168158647 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15079798 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111023932 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202447499 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13331557 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229396975 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148836701 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.405348175 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227829195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176160183 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180227732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183091673 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184033574 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1620136 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105939155 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163416057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177921137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175915932 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151661744 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172030537 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154945511 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.119260913 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169229983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.133613041 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179143561 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136665328 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186107761 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18044906 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14509024 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185392177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166360456 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17092467 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190586281 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20647643 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115572308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144487777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208317074 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176200043 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149574751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195613322 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210449425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181234933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152066777 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184232479 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214552759 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156569521 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209850408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151045703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118128348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.172429399 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179551167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174566271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.170784361 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13902444 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.143823846 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24414283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.111450577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149837133 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191137913 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149227786 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110719771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155434459 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150203823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15672798 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134008641 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1516155 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173195094 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179414443 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172729499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177957168 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149695609 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195896887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143576974 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150281138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162912496 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131851215 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204215762 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205650736 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142054618 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219758948 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188279264 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24645044 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18039348 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118510524 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197114532 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140906807 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.103879046 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181287321 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176996471 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18145702 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205053991 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241869239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188070986 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171629091 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164733103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188218851 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194401652 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174832805 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159017019 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176003954 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190519845 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103841333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139450738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.141079912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127723688 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143595648 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143860328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205289439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183910866 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206060132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174397074 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1567078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202546159 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.143564773 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184011867 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192946589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153624786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208524761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202036848 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187290575 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156390879 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182502946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103733875 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138913199 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14975073 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186409886 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11722563 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148228262 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159309946 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204057336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195835491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165850408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225749122 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186141304 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243316323 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104011053 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.179439764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189664556 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176660396 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.201498203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127140852 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.177771558 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197016011 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15236534 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212470232 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177481433 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183104497 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250395152 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173475054 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114996481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164876632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182083587 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156065253 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181398924 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159270719 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115315891 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171165762 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.151241838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111474666 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235023271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156785262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199500905 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.172001007 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194067627 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108508253 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159771382 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179709054 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16133095 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102734558 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18901683 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238365727 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159609168 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175228371 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193736648 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114771086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345396624 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238824056 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205998962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148482953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130181291 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180401258 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17625459 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182034643 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198550067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159256674 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197275973 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180034393 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156935063 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114707002 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162947333 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166372132 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173232636 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147821071 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177694795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.128467449 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235039713 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127092183 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180607452 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179437973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.161852498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.170189769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12832857 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245182626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17478229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198555576 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172964188 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186479422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223276512 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105695923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144217199 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.148077469 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199105116 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115806167 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181010507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227603755 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218478103 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181744004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185316451 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150280351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.109712155 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175968211 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165803625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21877773 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150059639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154737944 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213127468 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16829571 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143055535 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152215284 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333073945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132550096 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222102427 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115724204 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29454763 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1383598 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145041402 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148541635 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189325301 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.149536232 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.199773795 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180999743 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160233263 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176099719 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123529284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235833313 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23244499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188541132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196802247 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.158670858 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177011429 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181274767 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197229952 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159207894 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.161456594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14974976 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202888575 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.233559393 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119124595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178164958 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177573319 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175095513 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195614473 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147304227 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2205757 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143561156 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180402993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154425579 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109179451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17700181 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.226778205 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117651665 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196176824 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178661937 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148243577 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110953209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161934905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175885996 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154747549 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.142195985 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202779771 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.111715134 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181500972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202456587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142247239 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17457369 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132286294 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145970669 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160335544 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160520389 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115959854 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.184056117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20349364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14672648 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197611625 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184690255 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184113887 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178897227 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159622552 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650982936 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.144044163 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201994116 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163040293 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207634188 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165420533 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181865652 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175955207 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164680657 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184310692 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137118708 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238745607 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179983737 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178031978 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144564541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159235585 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127318549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147394826 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169129937 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176928554 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155053749 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123557208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178195561 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160246771 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161432782 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123217888 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233783962 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13527851 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236721545 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199716589 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122453285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182516899 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22467696 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117332348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183780115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192600877 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156713041 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163183268 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.116555308 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151821876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200252275 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134120456 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177922347 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151107904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177065463 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178279304 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151713652 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182277882 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159329202 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178442823 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112143039 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.172672268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176574983 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144571063 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113586005 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174530943 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178989215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.172023345 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140035478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156402774 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20246303 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.135794453 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118296677 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329402323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178219011 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213201444 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172623557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118289781 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159847655 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174852038 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174260336 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179267222 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.114180902 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143659525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147416799 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.173280848 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172466895 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176257465 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20176299 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178583387 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222225533 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159529425 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284056267 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152394303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145571361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148552647 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144460546 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12835352 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147867976 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156609116 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209316134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196293865 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.170515622 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160659724 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113111827 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13658172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144179488 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149018937 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169997364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178265413 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162915878 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132203278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13202785 seconds)
  done (took 85.521526125 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167089782 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.164270463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171977077 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226010478 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196017632 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285383968 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235457668 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254851027 seconds)
  done (took 2.753780168 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107959159 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145513489 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152663144 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132993272 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133445746 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.408016163 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146351571 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105987577 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195259548 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148615419 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12994133 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.655616376 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102324551 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134947333 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126047448 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.1326233 seconds)
  done (took 4.004525901 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.551989232 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561250872 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.285429196 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.252473683 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.26235068 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170850077 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.785823607 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.180850213 seconds)
  done (took 13.098068552 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137718343 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154974187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.335664245 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231849899 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172137038 seconds)
  done (took 2.091253694 seconds)
done (took 129.915822607 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109594042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13714206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110155925 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.141203152 seconds)
  done (took 1.540520914 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.159313079 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.121950384 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094357571 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118831052 seconds)
  done (took 1.546029796 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.543878759 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091430111 seconds)
  done (took 1.713751954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137119235 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.163145113 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.152721016 seconds)
  done (took 1.514584957 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115995341 seconds)
  done (took 1.169910142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136804439 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.204028084 seconds)
  done (took 1.515640123 seconds)
done (took 10.053587679 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109749829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.44777237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.424241847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120115099 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.737025803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384176619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052087104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17009675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.220989541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125731757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120672682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.707453458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043136809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350441297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023295326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347155327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.7084301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096552784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13639691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099311841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027582483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125257187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098743101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125603658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678793253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.448981973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096894827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.394715716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1257391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105406721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412270199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097978538 seconds)
  done (took 17.210764969 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10656141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200830731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13783313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099614011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.135169947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099238992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139711626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1150397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.240128967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097956362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.151925083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09673382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133532342 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098008676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154592655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096425565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127474419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097203587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137239538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128090199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121476718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126161322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099357933 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126800277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096944395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161459097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125961787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.114008158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127062342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105699158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130484364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097993603 seconds)
  done (took 5.092083073 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150883989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211025433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141121525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16392708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.158987392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12828469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223572536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174117034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213838003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126135313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.124319427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124834551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146253151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128448503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153631662 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098344827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127690071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097462457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137002117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099508381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.151130302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125344166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100551097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126608028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099775209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16250228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09777648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143415628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126375699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106106728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129389265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098619229 seconds)
  done (took 5.465715271 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110281082 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138973563 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.124549484 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.153631199 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103807978 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.139213003 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109293812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1339782 seconds)
  done (took 2.084657441 seconds)
done (took 30.909238229 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125270419 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146218581 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117790191 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141836787 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.190400227 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100810917 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145856994 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100799137 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.142817395 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.120749958 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128438519 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.103883162 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14826564 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.107416805 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.19038923 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.142484933 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.197361169 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.19200233 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103067799 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1422398 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103640984 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.198125338 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140529245 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103092556 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.200232965 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132865256 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.187911185 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.107382513 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.137302968 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.105375804 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.192711719 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.141294381 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103716606 seconds)
  done (took 5.700539807 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.173250754 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.137942632 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.134339417 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.104627826 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.135249161 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103127971 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205487935 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.102295828 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.134325243 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.101833939 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.133796817 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.199694454 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.109409057 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.129343163 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.106538015 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.135889962 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204238314 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.105232117 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.129932048 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092593059 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.129451078 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.103095795 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.212027765 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.129058879 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.103119548 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134427562 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.10781321 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.141865163 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.105668253 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.136815496 seconds)
  done (took 5.060865362 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112135951 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.152434971 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128631688 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209396742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.167085066 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1114556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.153993599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151565377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.132094492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.131032902 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11603114 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.165224042 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150536483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.113484824 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135215597 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118361286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153314105 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099405148 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.139574156 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148585417 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118785891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147981945 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122055581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140029485 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097169171 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138274954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.140465511 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.116386141 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.142789408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.118549497 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.137796861 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103260132 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132481583 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112187426 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.137174217 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.139564425 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124689426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143532928 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.113846392 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16049395 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1341674 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.106863377 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.15944941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161202285 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132901643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141259373 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11532114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.146370859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100871123 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150044241 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119085354 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130854356 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122963926 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.131525977 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100241185 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142269212 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131607032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.108346694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.151121013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104245011 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154842422 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107445948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143143667 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102279536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.142240087 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099930164 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129959752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103660596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.160276385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141228424 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140364843 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.131110167 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10991845 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.144537749 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.111885088 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14378396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099943261 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142774297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142857984 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108302017 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.146650325 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103559491 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13460916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117588343 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151246946 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140160165 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110389772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141797278 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103596015 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133281577 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1180798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132540886 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105426851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.151032371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09990475 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.138716183 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.142139942 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.110664418 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.129661851 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126538706 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.13757716 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098808001 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156473626 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.106413305 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.137537523 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139457709 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.117236514 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12912652 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109814153 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.143297046 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100377945 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138719758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103242303 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129933012 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114654701 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.147522094 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.136843242 seconds)
  done (took 16.29302841 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299778616 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.320859328 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.2183389 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.38198816 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149787634 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.213330266 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.284942733 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.324814654 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13716075 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17868889 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.199453266 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.257833229 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.133620036 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.131463872 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.322249323 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.386231631 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165864718 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.180518502 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178679326 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.117215755 seconds)
  done (took 5.666120713 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.125719407 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.16941482 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15532363 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.134390163 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.138495682 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143756063 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101304557 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.159768159 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.107862316 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.139348594 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098936378 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146061776 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.138864021 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.116209033 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.150482624 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151036856 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137643695 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136527372 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12797592 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137046406 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14268545 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.134360469 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.143714356 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152479038 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.116983226 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144026525 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099609365 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138813674 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103273726 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.137772471 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.105729366 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152838813 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136997303 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106166854 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141640819 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112481189 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.134011248 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102832222 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132891328 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104977975 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148002547 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.109613324 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.13634629 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097908787 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14888337 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.103111303 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.144009761 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109797467 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144512717 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115466298 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141484271 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142756705 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107959255 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.15141348 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103456726 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.149126155 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.113855013 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143470145 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.13882205 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100113666 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128997955 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105046913 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.136478191 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.112997427 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141472583 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154604728 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.115956321 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131407037 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106329841 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136357367 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.1036725 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.147941639 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157421807 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.105218087 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.134679103 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113459237 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.136771498 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093293566 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.14254525 seconds)
  done (took 11.314586382 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130181401 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137082874 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12154424 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169957105 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.109960007 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138290267 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135784909 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.123070369 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142904152 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.113679297 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143940399 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.118077625 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158104262 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.148770923 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105562344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.150838382 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109549007 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176024712 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151990885 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164456174 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115039442 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.138017135 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113729034 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144774491 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135451444 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.144748809 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164593356 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.110071534 seconds)
  done (took 4.912322232 seconds)
done (took 50.016782503 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.222100464 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.412864647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.165897832 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.165032924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.211028723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.189045773 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183960728 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.167399296 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.091936943 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.15170731 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.165222703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.164247511 seconds)
done (took 27.389021941 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.267945427 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.67557658 seconds)
    (2/2) benchmarking "String"...
    done (took 1.432521627 seconds)
  done (took 4.204351691 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.159781029 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.158812997 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.401795737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.160030764 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.178367713 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.180086869 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.160110147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.180644366 seconds)
  done (took 15.505904446 seconds)
done (took 25.227322745 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.175580801 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.449665555 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.430271863 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.179767669 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.162193962 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.179199946 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.163002517 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.2174689 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.167348055 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.164912325 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.579485824 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.440246505 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.183663806 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.57771887 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.163452699 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.169857437 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.192622986 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.477966999 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.168222148 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.161899301 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.168458246 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.155723559 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.204697866 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.188686634 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.172046318 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.171569635 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.221107004 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.163221342 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.434640795 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.170491396 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.188428426 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.18203087 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.222868568 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.174620254 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.167854837 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.164929844 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.438826761 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.174648762 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.157876774 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.176011407 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.44312455 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.165291575 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.171856448 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.174020082 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.16816038 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.175428887 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.161163362 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.282509464 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.184021718 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.170372184 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.205794982 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.576509675 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.177565193 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.185623484 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.170518228 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.473930632 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.187811494 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.259210494 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.190061429 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185216017 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.173242593 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.165376291 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.184777816 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.172270945 seconds)
  done (took 141.996763402 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.16413017 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.17183422 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.169725246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.189844423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.169544438 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.170422879 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.167280297 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.165966268 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.169295297 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.200411076 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.171223434 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.167144249 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.170201988 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.127551389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.173710126 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.18731275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.171388672 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.188892896 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.194005915 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.166568835 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.19207382 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.172463184 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.183178417 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.166701291 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.177761453 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.25403027 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.224683597 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.175666268 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.175423975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.165631634 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.176319951 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.175302092 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.81767859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.037272666 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.178754013 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.202136634 seconds)
  done (took 79.023137435 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.165873631 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.166785677 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.167420665 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20305111 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.166773095 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783374461 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789831096 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.953104825 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.736245497 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.172191098 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.663131271 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494719605 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.173328642 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265690002 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.18221375 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.171230335 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.184076776 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.211932673 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171900364 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.168793797 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786170881 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184189315 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.193515867 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.353043945 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.185377894 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201904353 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572279364 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168772143 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203794152 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507381635 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221651434 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.168368272 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583660464 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.277905647 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.170853916 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284140939 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.171670962 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202955287 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.169889355 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456471435 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.170376639 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.170336786 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.172936509 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874191257 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.173148106 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788271502 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177385341 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151257732 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.170702275 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169743937 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.474335676 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.85079193 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.190582762 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.172215326 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.174562828 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.171609455 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.16964275 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.20469889 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.498516271 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293748532 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189267651 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.173868718 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204764188 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.171844775 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.526649614 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171353162 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.356550659 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247700194 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.403164682 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790238529 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176954963 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270520634 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297145514 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.172718975 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.172676098 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.1725867 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172495247 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.172407781 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.285030859 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.174187784 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621450166 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.353997262 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.19023792 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.676931013 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.274642348 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.172690698 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585002244 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.176325792 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.17245584 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927127259 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270720129 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.172580928 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.173639742 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.173194924 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620152256 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793375067 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466660586 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.176272346 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.698416897 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.176998081 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.173415526 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6268131 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7626669 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900840132 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179543716 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288487477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354390461 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192205506 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.173938745 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.678489407 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.178640885 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.228936622 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.178790288 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.575458958 seconds)
  done (took 364.041058885 seconds)
done (took 586.148227694 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.949576386 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.898926826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036054641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.932385426 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.896372309 seconds)
  done (took 10.812171982 seconds)
done (took 11.912917361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37383078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.373119546 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238319444 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374991004 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.210683862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391343813 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36282718 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.195607347 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291142561 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.260160855 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.28882422 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231343483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210360381 seconds)
  done (took 17.901209011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46346381 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.182033846 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243416094 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.462871502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219646996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456626453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501721858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.181865545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326424743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221411171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193301424 seconds)
  done (took 17.554104153 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470795441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.181186746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268768737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433196509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223403539 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452906293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503027578 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.182083893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35675286 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.192698976 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194547129 seconds)
  done (took 17.560013882 seconds)
done (took 54.116589039 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220120033 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.351241037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.211617852 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.196241198 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191611802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.191985933 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.196720007 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189710854 seconds)
  done (took 10.850527444 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.189197425 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.187890792 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.188752084 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.187870902 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.187176331 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.187993506 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187732839 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.189013884 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.1884411 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.18887853 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.18786531 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.18859582 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.187700632 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188925595 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.188586956 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188341363 seconds)
  done (took 20.115563055 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191717401 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188324887 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.189790226 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189731579 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.189788315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.188546222 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.189511587 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189770202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188688135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.188683589 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.190134666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.189447267 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189256669 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188503668 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.18979287 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190683935 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.189501258 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.189763921 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.194494831 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.190473179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.190718179 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.189774242 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.189786289 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.190304499 seconds)
  done (took 29.660388048 seconds)
done (took 61.727072953 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.183640328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.18732455 seconds)
  done (took 5.474778623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.250229359 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.250393856 seconds)
  done (took 3.604958244 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190609587 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.192202186 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.191599813 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.190616075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189192023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190583379 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.191221795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190448404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.190531668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.190855996 seconds)
  done (took 13.01132444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.191332038 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.190478941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.191757664 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191142813 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.19125099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.191621164 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191658172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191133342 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.191117249 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.190951913 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.192907649 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.191855164 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.192586953 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.192873948 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.192432842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.192079404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.192268158 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.192357825 seconds)
  done (took 22.556113265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206242552 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213385065 seconds)
  done (took 3.524702653 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334159497 seconds)
    (2/7) benchmarking "second"...
    done (took 1.234292995 seconds)
    (3/7) benchmarking "month"...
    done (took 1.309476576 seconds)
    (4/7) benchmarking "year"...
    done (took 1.298954714 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.235458802 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214960158 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.234873154 seconds)
  done (took 9.967290893 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.1941017 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393879844 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507025602 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.715592337 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.19540107 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.197149815 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.033829995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.196093331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.197000055 seconds)
  done (took 13.736494071 seconds)
done (took 72.979021522 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.181513335 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.23588432 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.209691273 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.206807683 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.490056208 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.225924059 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.187325647 seconds)
done (took 15.843863484 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.184183764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.177790579 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.179082907 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.192122521 seconds)
  done (took 9.839909914 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.185049651 seconds)
    (2/2) benchmarking "read"...
    done (took 1.50956068 seconds)
  done (took 4.801216497 seconds)
done (took 15.749256094 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194336857 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195305593 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.195190925 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.194364852 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195485158 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.196143503 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194685508 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194221244 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.19520478 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.19415781 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.194898854 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.194097677 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192733005 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193898497 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19398716 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194167747 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193324693 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1947655 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.195069313 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19480201 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194553945 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195349144 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.19456118 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.193694051 seconds)
  done (took 29.776538239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.195907413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196438805 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195670744 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.195774831 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.195455247 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196332724 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.195048298 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.196294128 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.196154256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195983036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196050718 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.196386728 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.19687691 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.196251922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195374387 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.19599891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.196643889 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196609504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196995107 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196585014 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196734572 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19642576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19887533 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196862463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197288185 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197240795 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196266501 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19638306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197088985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.198374246 seconds)
  done (took 37.002660148 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200455963 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.203432707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.197526088 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198124327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.196607842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196548576 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197445933 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.195715368 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197813611 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201338685 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.198692366 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.197408295 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197412088 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197230224 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196874692 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.197816465 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199011125 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.197647027 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.197611677 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.19958902 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.198439286 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.200067609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.200430214 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.197885424 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.200461887 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.198258681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.199311281 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.198962822 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.200720164 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198862081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198807225 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198607522 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.199197121 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.198991494 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199380148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.199777754 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.204217903 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205326826 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.20042267 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.198879371 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198142554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199355938 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198750567 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.19991423 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.199252288 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.19948307 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200643551 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.19959284 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199098256 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.200230349 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198780826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199862894 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.201090033 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199368082 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200335327 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.200267724 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.200551292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200967799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200864058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.201318412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200304145 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200785627 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200437863 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.201080754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201775188 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199206741 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.201565667 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201970693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201463206 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201188868 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.2018237 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.203093353 seconds)
  done (took 87.486184167 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201446666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202540233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202876977 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200219934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201304687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.202564119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202307543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202319798 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203547407 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.203046238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202894252 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204065148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202226723 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20412452 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202880222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202598396 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20316413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202506482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.203543193 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203058958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203038286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203505014 seconds)
  done (took 27.574634016 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203511851 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205135632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202951774 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20608106 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204226199 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205078945 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203372824 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205734254 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204063462 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204414842 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203059626 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203477279 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206415424 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20378056 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20382643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206139836 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203176678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206985729 seconds)
  done (took 22.794965603 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205105504 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.20294905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204492286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203986364 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.204911099 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20455093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204619779 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203417925 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.204988808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20372514 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.205134108 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203682586 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.204814291 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203835791 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204945659 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205458861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.205852667 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205364451 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205428891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204856539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206159713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205776126 seconds)
  done (took 27.620277988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206802826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204899508 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207652345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205492159 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205139875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207280003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20567473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205159846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.207502081 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.206098892 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206340664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206150601 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206709556 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20684571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206985273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206634016 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205737113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20626609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208416676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.207682141 seconds)
  done (took 25.246584741 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210694012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20904494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209396315 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209884697 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209953289 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210585506 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210296193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209213069 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210909797 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20963765 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.209268564 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.209821863 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211336312 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20995975 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21131195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209298825 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210871107 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211216188 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210089265 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210356907 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.210219415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210750475 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212462074 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210859292 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211293942 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211205763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210250796 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213297025 seconds)
  done (took 35.011739122 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209540567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208896958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208478504 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.210434223 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209799733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20990701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.209852771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.210346843 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210923052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209349347 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.209735176 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.210202414 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211438007 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210239796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210510314 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.210390813 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210106109 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.209422242 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20899552 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20999592 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21047145 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209334109 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.210397358 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210770123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210186809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.211023357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211451215 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210667084 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209552149 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211939269 seconds)
  done (took 37.424875402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258622133 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259739091 seconds)
  done (took 3.640179069 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.211400642 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210530554 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.211177863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210862884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.212360544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211858805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211197183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211539272 seconds)
  done (took 10.813371434 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20991895 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.213849956 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.213401876 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.212556902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.215088201 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208812052 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218380835 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.219243491 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209860091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21077648 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.214560836 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.214459948 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.21217701 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211403223 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.210542371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.212912237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216587399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.215939537 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21691228 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.214654599 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215910153 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212311022 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215330094 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.217587729 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.212042035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.218368281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.218642386 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217564322 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.209916469 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215597176 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.214934077 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.216049225 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.217652793 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218359852 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.214142385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.215565025 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219678715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239147218 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.219178541 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22050073 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214286495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214091564 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212153513 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215629467 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21580436 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.219962894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.21472783 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214583312 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.211451861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215497735 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22142955 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210641671 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216770257 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214432985 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217041924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22193676 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244692864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21568055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219545667 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.222101309 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228601615 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226471543 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21601621 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21988848 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221665214 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.233167407 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222405556 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.22405394 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216912828 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215660993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.218919053 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229682264 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229941445 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220049224 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219544144 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.216967377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214304093 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218364669 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222890917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.223567065 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.222106331 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219306842 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224023172 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233368142 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.213783128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221137925 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.220290473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.220129593 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.216270438 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226893784 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247219495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.220437065 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.214415369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216631484 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217498691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221637203 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.214662372 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214663218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220116287 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220537134 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221930736 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218329838 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.223855434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222648687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222021037 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22287348 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.223871715 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215407883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.223271714 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224713982 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221354918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.217572352 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.220885607 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.220590955 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218758939 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222702892 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222080258 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.217754452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.224597244 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.220417624 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224861926 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.239186562 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.224986832 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221397264 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222338145 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232698311 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22304308 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219792687 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.223874899 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220402287 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220719032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219403968 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22372694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.218611026 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223391711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218501048 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221768608 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.221372433 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.222119486 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220909431 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.221162967 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219435494 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219007481 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.221948293 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.22571048 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221149844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22700402 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.222584632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221341406 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.223081845 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223131943 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222236472 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220974991 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224324595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219766391 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224003048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.218440824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.225028169 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225339538 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2230878 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222082791 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.219482801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221872467 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.226677511 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224332128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.221811103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224320475 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.222964089 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223920003 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.218623136 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223952396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.217632438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.22411612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.231595448 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222983573 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224685933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.222234116 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227500087 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226626185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225614143 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.222198991 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.227501127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226329023 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22707676 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229675671 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22669726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226085783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.219598188 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.221111999 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225454778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.223595756 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231039578 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232694339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236125628 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.22195928 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.227363986 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.220287248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228056744 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225229215 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229836308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224601602 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226223202 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221999276 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227693337 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.222954166 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.22725338 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.221605791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225564234 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227376837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227142125 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225680509 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.223444259 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224580247 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227116796 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225066967 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226724346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.222722867 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.228112273 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221802554 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.221613484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228165327 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228080566 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229350916 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.229988457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225048873 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228477165 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227041163 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.224435976 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22733801 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225335902 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.225508703 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233129112 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.229135794 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224748756 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232845845 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250175414 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.223761823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228474972 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230654047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228421798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227499002 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234197294 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229229678 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229450728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.230297808 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22555104 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230120853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.231509656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232954212 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.225183895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.230131486 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.226177365 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230187727 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.227176687 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228095091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.227160387 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230844997 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232431012 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229917411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227353075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.231956838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232191851 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.231458014 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228198539 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237409826 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232115322 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.230018317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229642959 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.22851644 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233661214 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227537513 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.233030296 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.226088081 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240550671 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2474144 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234067722 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.233476088 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.232296477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233599517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.233366238 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230250023 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22728683 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228832123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.227587163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227777852 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232940804 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228317147 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.232901181 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229604909 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231254987 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235175194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232218546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227303403 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231672604 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232523516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231902736 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226995624 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23270115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228464455 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230838669 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230942472 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229147237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237707334 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234658135 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231162171 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230195509 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229823684 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228577018 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231175872 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235382431 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232483071 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.239624615 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232383502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.236263828 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.231746729 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23937638 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.23836879 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233328593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242305051 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233320897 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.228414903 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230388557 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.236193777 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239353238 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24085366 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.232139758 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238084567 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234649439 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236520454 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.234786687 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234791128 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234947571 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235052571 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240954475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259025315 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.233592384 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235263993 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.237186737 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235006637 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.23503144 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.229198124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235804908 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.23957728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233539189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234008255 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.231824703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235820355 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.238345609 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.236001667 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.236677079 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234597749 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239660636 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.239908522 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241487705 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.236043123 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239108823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240337332 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240529793 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244446773 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.23227923 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238517109 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.236661191 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.233963817 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231790327 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234034847 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.238142763 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233057478 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.241410125 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236417916 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.23519378 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236374092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239145787 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233266797 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242204968 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257396459 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240423559 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241447331 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.236791452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.232949186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.2412458 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.238455885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.232758849 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236471664 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241566607 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244354826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.234684492 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.241224511 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23485905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239900738 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.238916995 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239745573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.237133029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238494455 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.233829434 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241477232 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236951833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.240583881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.235195992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237740023 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.236010793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.245799555 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.243921029 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.236283274 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242333544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24076388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.234884873 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237671559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241496732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236674123 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241285522 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.236527545 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241606394 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.241076169 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239401341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238264917 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241673752 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235793585 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237022314 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242536554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241762296 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241924907 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237735933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242930237 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23700187 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237057913 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.240370427 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237059365 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241377768 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239536866 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.242390683 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237192476 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.24205789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239541682 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239906922 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.235179445 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.235357005 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244362614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242558367 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2455574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.243535396 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243722739 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.237982849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240369281 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.24415045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237799848 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.238693829 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.242684489 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.237898479 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.237708895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.240472235 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244015441 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.244474262 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242646527 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.237371621 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247703982 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267011195 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246238267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.238109845 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242598919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.238483356 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243367206 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242222704 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.237868312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247621302 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.245579303 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244670486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241486513 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240388315 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.239820808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246582702 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243402044 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.23856437 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.244171665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.239306025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245848438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243448468 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242528773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.238307249 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.238662091 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243934189 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245859127 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243148216 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241804352 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.243164186 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.241704415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246578282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244516175 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244133469 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.242573834 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.240661515 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245776927 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.240426238 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.24349766 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243413303 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.241200688 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247415837 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247068406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24377908 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.249348739 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251221738 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244770216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.239033267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241353843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245261291 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250113817 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246935075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240712037 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.242501786 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.245997491 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247323051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244857202 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.244730886 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259516917 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.2722969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241491483 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.243404404 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24571952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247553584 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245682004 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.245163682 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.242940731 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246577041 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254142568 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248220936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248943059 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270034003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243166889 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249489656 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.245081212 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.249824867 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246617618 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251678711 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.246898776 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.246896114 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258311791 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249655602 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251432855 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270869235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.250001482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.24539427 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25089104 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24277685 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249896033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244632596 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250925858 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.247529198 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247391939 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.247859799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.244705642 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250540951 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250407906 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252092603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246249718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243982243 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.245326934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24783944 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248362533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250182344 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249414076 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251248965 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25024702 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245997445 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258100692 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262622788 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250263056 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.251050357 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248543834 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24898522 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249688933 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25349619 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.256255257 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.24942553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249941631 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24784102 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253143633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253080931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247536968 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.246286489 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245418441 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251596575 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259816596 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268136017 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262779602 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.2497408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251891747 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250353252 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246929669 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25140998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251344963 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.246529582 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.24722801 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254221332 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.251709315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250333349 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248670316 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258611911 seconds)
  done (took 736.088755597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251408749 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250010057 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251547996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250937872 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25245763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250671282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250168186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251414319 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250102999 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250568415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250544636 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251508314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251108434 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252894403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251765314 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251545625 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252305763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252345081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250987116 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251247311 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252702999 seconds)
  done (took 27.435564246 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.252494018 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.252477669 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253001759 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252296228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253278635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254049516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252847008 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251856611 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252160004 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250466182 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253442937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252635404 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252834076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.253423881 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251676774 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253191044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252319454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25365592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254404095 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252894827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252065022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253596508 seconds)
  done (took 28.718932859 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252818569 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254782888 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.249032979 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.254312748 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.253719318 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.253602628 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254091284 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.253713326 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.254457838 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.249321429 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.250024245 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.250213899 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257645892 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.260771431 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.251450054 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.256768283 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254058069 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256064219 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256690354 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.253347334 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258463621 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.260443896 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.254730127 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.251139202 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257108905 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25500483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.255322379 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.255903256 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.251465991 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260763409 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.255869813 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.251757601 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.254387716 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254514288 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.253342754 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.260356774 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256364542 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.256521826 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.256345788 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261182321 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.275861217 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257690208 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.259193293 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.261540965 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.255955558 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255714396 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264102605 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.257534242 seconds)
  done (took 61.445752005 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.256496119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.256830734 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255568556 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256334372 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.256329656 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256068347 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.256146136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256390736 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256576354 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25682789 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.256558991 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257474679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257214652 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258662093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.258105322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25780912 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256329656 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25832393 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.257281495 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256474155 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256409197 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25733754 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256297881 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257275123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256857099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257138331 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256752181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.257259617 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.258639684 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25694114 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.257703035 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259087015 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.257587563 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.259229433 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257651654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258810858 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260670546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258068667 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259400092 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259275377 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259654078 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257586122 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.25905781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.260333729 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259885409 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.259814179 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259427799 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260763506 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259025137 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.25992459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.258314874 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260164801 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25986126 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259699634 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260169231 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.260743742 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.261094406 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262257854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260299804 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.259542114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.261516916 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261566893 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26109313 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.260239392 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260342357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.260888389 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26122821 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261120207 seconds)
  done (took 86.745362828 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262012472 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263737593 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261195259 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262320164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262082486 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262899295 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261996548 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.262300695 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262380373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261489359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263264526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26145371 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263848985 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262382445 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262946327 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262750062 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264198456 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263136321 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262863691 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263301619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263166274 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263684059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262880354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263737913 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263720795 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263838281 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263243612 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263438259 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263671169 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263730711 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264220978 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263256703 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264587364 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263693134 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.264182305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264885641 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264056542 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264862789 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265544732 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264764563 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263398856 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264729809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265194803 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264882592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264658849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264332144 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265978099 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266319231 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265203006 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26604631 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265207436 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265980119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264664157 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264735746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266868733 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265511719 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265151807 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264774948 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266568555 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266283339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266252937 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.265272889 seconds)
  done (took 79.537725535 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264031788 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26529297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265040379 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264117086 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263900777 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265197741 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265079151 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.265265853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264790189 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265169282 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265351385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266132608 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266291594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266431945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266553176 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267252701 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265759706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265743832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265598687 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265822626 seconds)
  done (took 26.477958297 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266192919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266297748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267141552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266585603 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.266456354 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266699413 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266215388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266298995 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266877551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264479285 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265343904 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266651156 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264098795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266702017 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266282368 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267930304 seconds)
  done (took 21.430488407 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267749174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.26677611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.267501204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268624371 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266647656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266614586 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.266293439 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26624618 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.26629392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.266688792 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267596054 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266849313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.267990027 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269136689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.269762449 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267689718 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267513837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.268256162 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.268100205 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269299817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268607666 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268089808 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269176181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269078789 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267819937 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268665915 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269282593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269521832 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269194794 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268359157 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269232255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268261445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267887515 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269599897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271483046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269147761 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269802894 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269772257 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.26912805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270043662 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.269441848 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270657194 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27141338 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269958798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270122308 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269005032 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.269342703 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270539813 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269207088 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269521526 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.270196764 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27166363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.27000339 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271591865 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.270420503 seconds)
  done (took 70.959464001 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27006344 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269237538 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271972882 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270016286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270152721 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269807072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271996233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272963566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270873566 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270376305 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27019668 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272190521 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27101108 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271055859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270935892 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271180066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270904219 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271172885 seconds)
  done (took 24.048975996 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271435433 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271074924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.270976736 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272189515 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27128079 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272386614 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272167889 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.271115239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272039531 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271923699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270732971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272809968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272540929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273505761 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272309439 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272749051 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272337596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271390948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272443156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272333222 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273821123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272897988 seconds)
  done (took 29.162335121 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.267959638 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.268003797 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.267689137 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.28444591 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.28606849 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.268759856 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.267783569 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.268490641 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290485581 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.321332398 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.313821176 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.288258705 seconds)
  done (took 16.569608971 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273278588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275469264 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273635419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274421835 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273463976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273586649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273991514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274913692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275145958 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274310173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274895405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274765821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275086167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275603842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275714909 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274646092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274466028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274452027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275827853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276051339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27484018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273976484 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275560396 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27521563 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274982389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275113843 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275923715 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275254883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276396781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277234851 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275861445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275541594 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275705055 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276622456 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27550595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275944936 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274620502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275879804 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276793634 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275759756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275220314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276975343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275495808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276435735 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276087636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277088761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275866558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276032499 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277160679 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277219565 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276269073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27516789 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276513082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276855453 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277340495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278955892 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276988441 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277974773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277596935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277992591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277769152 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276978341 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278640009 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278463487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278705717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277926286 seconds)
  done (took 85.389919746 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277883499 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279475719 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278463477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279086715 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27808296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277704142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278670852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278454853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278260454 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279347996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278996896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27921757 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278510102 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277581644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279782644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279737992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278671118 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277985721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279031461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278037137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278737706 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278665702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278524382 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279228896 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279742229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279036254 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279929227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278732737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278946549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280369284 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280964741 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279910514 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281680559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279420719 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281634527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280318636 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279629792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28117364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280696844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28072984 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281378958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280993382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279933205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280989794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279950688 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281657829 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280948927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282472264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281712813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281951455 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281837979 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282102294 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281731939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280319084 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281438373 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281049329 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281142494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281961776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281514836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281361278 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281703154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281943834 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282672692 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281413045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28082334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283259768 seconds)
  done (took 85.672652073 seconds)
done (took 1725.183181572 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448690722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398368561 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.277614092 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.2901913 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.277205004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.296593936 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.290449547 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277894578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27791547 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276987953 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276874025 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501120479 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.273804388 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.279078758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27815185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376052809 seconds)
  done (took 26.28143443 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309061981 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.284145658 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.411319735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.301301264 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.308286429 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495219367 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342920569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283480298 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.474967272 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.302840755 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.283213211 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.307833081 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282198451 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.280925914 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.301620363 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.494797218 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5597421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.283886106 seconds)
  done (took 28.494159601 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801209652 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.316136328 seconds)
  done (took 5.303487234 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304018316 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281002927 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283495123 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281047161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.274894323 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.273165455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281308518 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.280097447 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.288620246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.42903143 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291116167 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.296146622 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302466637 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283686645 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.287711743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327713027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440580977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28634011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285021564 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.289683115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284452403 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404130494 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.330309671 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287909141 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424469218 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.281667466 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290812246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290951015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.458258944 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.288800938 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282348602 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284604871 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28538039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.27845683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.779525964 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.300030854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31291109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313525608 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.289233868 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.467862837 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.286627884 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.291845961 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.279184553 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.768738756 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454100538 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418705663 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.300003179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290259138 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.286378578 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.35589381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284951819 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.287140296 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347386315 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.192508446 seconds)
  done (took 83.040949643 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.31012833 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277312372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46047852 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299877844 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278058486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281933531 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285056002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.613145237 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.296242473 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279716988 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602598778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907819953 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310967502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.330331272 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.143705011 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.344439234 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280996307 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279514426 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.279543148 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.282454751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860998789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281978312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.305461806 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453054061 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321381751 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837892923 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.283393155 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28155127 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.300885474 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.28017164 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84403126 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.302273685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.338880162 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.284407926 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572674868 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701490931 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661989529 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.285976503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.283098129 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.285213543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.284000525 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819531954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693683581 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286186289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.301023682 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847810713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28545997 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.293374729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.288233873 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53442439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.281051316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283424783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292545471 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284965791 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.283031771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361397261 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377190268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861314909 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286398775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28276853 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330055331 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282095766 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285657296 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284471264 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302316718 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705475099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.511145801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293116526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704188337 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.862518872 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316468363 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920147278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.30714297 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.284579369 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.49490594 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296296643 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287198701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.876718654 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300694769 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.283139234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686602806 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288912684 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595643622 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.305049989 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284420421 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892904993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.293089718 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.293423784 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.284642646 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303073011 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284645935 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290408714 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58425869 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.334574759 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286794122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.285698337 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.285746885 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285677385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.302932433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291768733 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915576573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313881941 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285560523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287102946 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284976488 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286597886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.286691543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284938327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555934588 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285353847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.3053066 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286303281 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28389062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.313165558 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.391518272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.293425356 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.652397369 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290698431 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291355067 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.2841492 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285983963 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335805494 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287192278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292909999 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17616692 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.586721463 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304903349 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.285905298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289073879 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286003115 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286892947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306422662 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323253319 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.28733472 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127091857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312968819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.306658833 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.286763577 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.292739822 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288995499 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.316007774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290029465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589396587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58125777 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.496751784 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.287546688 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.287323654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102441466 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338119353 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47097912 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30902529 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288080746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541657593 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446050204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288330745 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.288271708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289049663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550448548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.288535908 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626475099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890936801 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311998226 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28756034 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.134860938 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017606627 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.293407376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.291252043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593799798 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.30675429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288284628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.28842898 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.290418518 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309163948 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.312270083 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302327865 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288104507 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.290258341 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.587336808 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482819654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.308159101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299180582 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.86106701 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.312090332 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289299399 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302341578 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.290275837 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.289407498 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393320573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.291525385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.311156752 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.292136582 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299612648 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910796545 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295576951 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.291427365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485210478 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041981972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.313568986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292468214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290877961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.17649705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884650162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.325893062 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.656860466 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.302141814 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.332910726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289790409 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305278527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877812736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298579667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29112937 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.005158294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316189549 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.713314786 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.292557901 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293190965 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938297279 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.315451393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.294343765 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291498976 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311549233 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613604046 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.29263198 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.341751928 seconds)
  done (took 490.327504841 seconds)
done (took 634.632587542 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29199552 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296012437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.287297768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29629358 seconds)
  done (took 10.374761083 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.307641888 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.299106931 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.305027144 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298976411 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304868612 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299899342 seconds)
  done (took 9.018983469 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.293172444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.298604834 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298377757 seconds)
  done (took 8.092677312 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534067461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.323841888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.69580847 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.320495915 seconds)
  done (took 9.08007712 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.304739925 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.303761057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305066707 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305400718 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310890656 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311550726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308307692 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311501475 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312845337 seconds)
  done (took 12.974770634 seconds)
done (took 50.744868632 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.284513578 seconds)
    (2/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.28542145 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.326126311 seconds)
    (4/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.291796285 seconds)
    (5/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.381427868 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.375569496 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.433649543 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308235097 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333483323 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.367625205 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.285338139 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.421771678 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.482496251 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.54594073 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.447330324 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.984577964 seconds)
    (17/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.452287335 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.334775937 seconds)
    (19/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.299111637 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.996071606 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.337898752 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.481405131 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.287967263 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.472045731 seconds)
    (25/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.425940762 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.37785541 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.441736681 seconds)
    (28/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431998323 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.286430486 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341620278 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.215081761 seconds)
    (32/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352544202 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.440307846 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.3909761 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.9503771 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.26433675 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.425915221 seconds)
    (38/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332363558 seconds)
    (39/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.483691849 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.426940956 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.297386335 seconds)
    (42/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.417690789 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.34849317 seconds)
    (44/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.953992739 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.462971431 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.329756178 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.468764468 seconds)
    (48/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.611601375 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.319815169 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.393715972 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.399020007 seconds)
    (52/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.335163893 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.350241739 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.413945284 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.108686991 seconds)
    (56/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.309583514 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.418232089 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.314127219 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.079519953 seconds)
    (60/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.310207713 seconds)
    (61/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.290408298 seconds)
    (62/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094978278 seconds)
    (63/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.553598273 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.383856291 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.113101674 seconds)
    (66/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.248109569 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.436343105 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.300959656 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335848595 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.077668038 seconds)
    (71/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352978395 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.47248416 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.460083557 seconds)
    (74/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361534554 seconds)
    (75/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.335129533 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.376886507 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.126747838 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.316244188 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.339818715 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.404028849 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.307563609 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.496036144 seconds)
    (83/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.442170603 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.357464741 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.387167192 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.376432011 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.15073122 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.112412252 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.438184187 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.376699385 seconds)
    (91/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.291646173 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.295006183 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.397118312 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.329172915 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.451995081 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.445526675 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.33608284 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.363020379 seconds)
    (99/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.471743068 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.998787139 seconds)
    (101/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.358994556 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362950164 seconds)
    (103/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.335837366 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.292149929 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.308673129 seconds)
    (106/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.400494154 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.574911955 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.292228613 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.514614003 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.401860737 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.964498725 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.29257017 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.332671477 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.296450629 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.52179046 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.426596105 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.35699781 seconds)
    (118/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.339090236 seconds)
    (119/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.29099989 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.533142459 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.337794914 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.34357591 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.293252446 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.462095499 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.482482736 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.374104438 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.353995275 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.318838939 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.30491731 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.463288854 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.305985922 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.339386341 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.313471035 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057542766 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.310928945 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.339288835 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.306434163 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.397393209 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.436111038 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.378654598 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.293130167 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.48462333 seconds)
    (143/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.341763927 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.295980854 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372198508 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335870494 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.001576082 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.421231608 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318821291 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341342621 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.296229726 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.401216822 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.3532693 seconds)
    (154/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.503087914 seconds)
    (155/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.347919137 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029977309 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406209465 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.424289081 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030559473 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304868969 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.415447802 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.557365822 seconds)
    (163/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298342229 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.380254575 seconds)
    (165/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.345541111 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.294277886 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348590523 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087179606 seconds)
    (169/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.330753039 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.450674748 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.339826497 seconds)
    (172/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.406186494 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.412103163 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.442645973 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.478120793 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.976511825 seconds)
    (177/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.371239111 seconds)
    (178/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342195175 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.489615527 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.479525181 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.276211429 seconds)
    (182/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.318951215 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.44110464 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.442428955 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.123299622 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.562419159 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.53896277 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.297824366 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.498486434 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.482432162 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.313396193 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.066462298 seconds)
  done (took 332.901493151 seconds)
done (took 334.109280749 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328155194 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370352227 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314334163 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.313123913 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314440698 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.322610236 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.337899226 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.316344537 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326973403 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326854574 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.305509371 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346099117 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.32889075 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.324358896 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.347222854 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.315078431 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.313879394 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325371721 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.330242721 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329629279 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316409455 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316898285 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.336935432 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.315217742 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323413658 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323814447 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.321860203 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.314345925 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.32553165 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.328212212 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.313304716 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324765247 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.331369353 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.324781234 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317098193 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.324336132 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317735932 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.369728055 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.334120968 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.325062981 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.32242678 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.332407319 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.319448102 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.321079901 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.326908971 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337487167 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323839997 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.33178462 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.308940548 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.323510524 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338115696 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.327435142 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.324057575 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.316960453 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.318079682 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.336547776 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327845936 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333927053 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324282939 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319669045 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.352625864 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334030103 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329056428 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32591377 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32486942 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.331659993 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.325879 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.332617911 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.323702307 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320631513 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319145037 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324713896 seconds)
done (took 104.720464168 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.437383873 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.319657339 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.459715156 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.324555088 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.48109001 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465350588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.323848082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324971435 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.323309898 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.131567959 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325295847 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.32357278 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.314845896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324055795 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.444169473 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32405724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.324681289 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.031942284 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.326867533 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.464482718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.323588381 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.324582988 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.32454759 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.15210545 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.322009071 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316382845 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.461371146 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324507654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.051539753 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.314786438 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.320323049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.048671293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461014609 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344617117 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.334101902 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.33299221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.481184384 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.344323892 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441306899 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440982125 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.45739054 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365647233 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.31667937 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.319088087 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327545163 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327414511 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3254286 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353546515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.321728311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.32401873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.033915153 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.33576046 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325711905 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325836413 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.324363628 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355525851 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326201078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327499779 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467248908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328048607 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.444157334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.152622469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.134810185 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326617135 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.319681881 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.327352707 seconds)
  done (took 107.775321421 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39260458 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.403993264 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.443917643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.347154895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376060316 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.445760076 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.349453935 seconds)
  done (took 10.982534797 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.327589743 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327624329 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370588095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374271157 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328974226 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.509756121 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32866615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333294823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326795312 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374650781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328022606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329044913 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.336307004 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.322063211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.372841437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.335616892 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439354177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.324901999 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.331114626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.474689716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327574845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.338643662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.376311389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.335296711 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329894141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.333186978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.149192082 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32856473 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329677543 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.328972738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330017522 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.378467672 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331950362 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.323421788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327961248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44005905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.329843157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330757399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331088158 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.325629715 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329586399 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.32993443 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328602329 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.330228284 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328441213 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348933108 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.330036034 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329263753 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33016162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330756084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376487007 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331676901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.330274738 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330394066 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.380004851 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340234969 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331453943 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329908177 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331254474 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331450842 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.477916512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375047166 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.331746919 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37510417 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334245602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331291826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332726479 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.332579999 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418561247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.332784013 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375809051 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.333353877 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.50835397 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352811445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334855725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331516903 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33181478 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332291588 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.326956683 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.334155212 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335118124 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330054144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.335105004 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333540604 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332923184 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493877506 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43705487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.333896096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.342470441 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.335117178 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.333132633 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381817479 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.333095952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.334693976 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380984264 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444215675 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.384446558 seconds)
  done (took 137.18466246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.341278963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341687941 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.333234785 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356180814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.330229774 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330905195 seconds)
  done (took 9.263027892 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.331825687 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.338691075 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.335632676 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.334567294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.336070756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335693856 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.337191867 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332576128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.340107187 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335059928 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.335108165 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336638659 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336318497 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336441259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.336288579 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335613553 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336753892 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.335154356 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335177661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337007385 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.329942249 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33735591 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337413063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.334248863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.34088235 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.337005449 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353079089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.336483709 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336414521 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.339161532 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.359375814 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336944554 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.333618988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337472458 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.342065838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.334470744 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34036154 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.339696409 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.336842905 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.337177419 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339119756 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338667328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337079431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.337795618 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.335586166 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338174004 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.343315287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354499697 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.339179346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338807294 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338560144 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.338887361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.33798303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.339519619 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.33835543 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359971538 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.343896823 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.339766739 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.339845897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33675113 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34118155 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.339190968 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336408879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346172153 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339170651 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33842927 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.336758188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344677907 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340198552 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.339638985 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341360323 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.341657837 seconds)
  done (took 98.631474645 seconds)
done (took 365.056728993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.21577815 seconds)
  done (took 4.450236246 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.442279927 seconds)
  done (took 3.678657326 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.466891976 seconds)
  done (took 26.708435272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.389951347 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.349367932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.328807108 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.337394127 seconds)
  done (took 10.641305775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.699789994 seconds)
  done (took 3.935202847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.34119468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.343548298 seconds)
  done (took 5.922252956 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.615639027 seconds)
  done (took 3.850688111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.636148144 seconds)
  done (took 3.876282481 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.352672728 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.348183189 seconds)
  done (took 5.946294953 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.321089413 seconds)
  done (took 3.555526201 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.24756137 seconds)
  done (took 19.48380277 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.338273476 seconds)
  done (took 3.575111866 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.362748363 seconds)
  done (took 3.599385083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.601290537 seconds)
  done (took 6.836469548 seconds)
done (took 107.294604523 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.329929096 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.331750848 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.334446071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.330204813 seconds)
  done (took 10.561932925 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419821069 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419158363 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.427270529 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409949368 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411274429 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.422336888 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365931529 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366189796 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410559102 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.409754959 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.428685892 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409244554 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419929855 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.366964982 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409557564 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.427130855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409923912 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.426323633 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.367670865 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412213851 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342941707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410275326 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411780902 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341403862 seconds)
  done (took 34.884047358 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.854252431 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411491662 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.491984033 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.389591341 seconds)
  done (took 7.384525653 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419202413 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.42226382 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445390847 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480216097 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.510114248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440690685 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.369662188 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363496091 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351646964 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424305857 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.475603275 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421840327 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.514736895 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.34307458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564561935 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344034935 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.343309202 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420504807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476020562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497080172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.344840429 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421724251 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427700324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422025081 seconds)
  done (took 35.482286879 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.353433084 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.359468425 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.346790093 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.36236057 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.346803614 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.346178582 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.348620487 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.353539767 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.345468805 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.347406537 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.347887882 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.361421127 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347315224 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.347451973 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.355078444 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.349310384 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.349791893 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.354226018 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.356111854 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.347802611 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.347674114 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.354978465 seconds)
  done (took 30.967915022 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.336378799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.335752173 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688336543 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.593117016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.339061776 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.341547147 seconds)
  done (took 13.875647119 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425730099 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612668083 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.347750346 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.775223742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.872809 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.349548505 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.343258005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.639947794 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030963088 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005542181 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.416533594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.427793759 seconds)
  done (took 20.493176034 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.356485326 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.342779879 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.35450165 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35724334 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408221144 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372651383 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.351394858 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.338189655 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.412709974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436834982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37238165 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410374719 seconds)
  done (took 21.759249509 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432443951 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344720101 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344037295 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438084328 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342741717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191933937 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428194923 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123624672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377186424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619539391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348204092 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439796435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599594545 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356605132 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349484182 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330215487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60173822 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894214941 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348681411 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361824447 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381903914 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3546918 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348930337 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619692459 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198016107 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345439648 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.608967528 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345703496 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673330613 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363469044 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355880896 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345653101 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620511198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079367166 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470074636 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595829408 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352683454 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351559266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355681428 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.3526418 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359953636 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35214106 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356936035 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347155022 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346514436 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351750607 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132022938 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.378439747 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.346620722 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346268606 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645780134 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4494885 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.354255015 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347429667 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368863023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346787105 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.353386641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479963025 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93995957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347537323 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358071774 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.353379743 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351783314 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352209787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061474544 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359938002 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.353179846 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353988311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348538534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349185898 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394146105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348720383 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.37536241 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348078525 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188640677 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357195661 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355505003 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953281865 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369439636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.353207412 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581045576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349988358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349804403 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.348898543 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34924368 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153774506 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363467936 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.334057852 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417918309 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141487371 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623445414 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372827434 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38109948 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573330529 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.335440336 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349994815 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.357440283 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357638643 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371561127 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11588675 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372860421 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357271021 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609164764 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.560457084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360783585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341950228 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902282691 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384809882 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.380457181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359476662 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605586867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.028652047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373641868 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355602205 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387756416 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35249899 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204585797 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378647157 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.362867845 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362281593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659467927 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.259501197 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358787095 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41712999 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355164038 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352992164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352985415 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358350269 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352321929 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.593523788 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39384576 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.367272932 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.35511364 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352335399 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.365849768 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373938071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.360055643 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575581075 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368395774 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636360371 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353071179 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354630697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353607263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576381843 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.354998022 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.361185384 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616210156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371427468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370774393 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368850141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38388218 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46064328 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3849323 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.366183354 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614913053 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.359516797 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.360674379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354797799 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361182034 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360523228 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.362716773 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357641903 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035257331 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341686733 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35863538 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355281029 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371700389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423490926 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363492592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607692924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.361324038 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360471889 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387144182 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.370256621 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58557024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36568014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.35947138 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4381191 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.883003008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054156568 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376645204 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.355310496 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.357495762 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.355989367 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35634105 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356707626 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357548638 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608835848 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375801986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362471378 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050909542 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364101974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363762312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369835461 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369763652 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366619932 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356842461 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361968489 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374325873 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380403527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.371880403 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495343747 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.373634506 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35834041 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920508169 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366111469 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3566085 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358096216 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389223399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35851742 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235922344 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620683143 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35703918 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68455453 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365777247 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.381045744 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356919809 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373841332 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364964603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.379159046 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366390021 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368606233 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358504078 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364757588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924062442 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203483177 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991481584 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375781878 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.365310328 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364610859 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126976782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381286671 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359530503 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623602662 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130646671 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382423055 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889492431 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387816809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258581665 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668184784 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597470875 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368915242 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.383106202 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672658497 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576579499 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392623176 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360093453 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367032729 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.347007115 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971988157 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384257697 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469149057 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133087507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398929613 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367326672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.372067554 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367692669 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843489104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387264241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361893558 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36238919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367247251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272463702 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362788961 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361337353 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043794524 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367872026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893841505 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384263918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616630485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377923449 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365368287 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.368136814 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.375525969 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621943068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664934038 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368864914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363548508 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994950267 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240435054 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370272204 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365007536 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225638594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369392536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702251767 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.369301572 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379664753 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371220816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364047922 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362981339 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.363298701 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366482657 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346338984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935497549 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381044275 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390447897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373248396 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369921812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620443752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38086824 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048082957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600725946 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362926201 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421649059 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.371599034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367673489 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.358292353 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364510392 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364356167 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390564331 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588093637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378082008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.355856696 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425347802 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575851902 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365985882 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365714603 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673410682 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.371366097 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.387980288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235859806 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398983401 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366153924 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373765312 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364396879 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410825206 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432081514 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621464083 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.382015922 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.376689411 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844808369 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394655024 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374551944 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383065412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462861704 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371852542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.383661083 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.147120949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055494751 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228099161 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054088855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680868504 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373820365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373453966 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367127134 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50550085 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369578051 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64318278 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369744387 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.379284261 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391440287 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37202773 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376777091 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583286554 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645974699 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368811216 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368327409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374062065 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.369019307 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378265592 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578948971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945522549 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993951168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371208008 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376045752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153984996 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666007317 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36947373 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369732438 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370026095 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.394524766 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380288252 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.381964714 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374175835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511242338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675934934 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089983418 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.401401626 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.409335778 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.889246589 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375085861 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630900725 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370784783 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650962273 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063040862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20078053 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641473368 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441011439 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629056583 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377124916 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508165098 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.374479694 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377222048 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375153913 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371852676 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.371090332 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379657511 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060418178 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640973097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.377225763 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.374876668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40702587 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381260007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594910677 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19084111 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600113284 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381452438 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374827622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371522258 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052492277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685520808 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378341539 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.378235745 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655744249 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378442127 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401359923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.064220478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.373855146 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979427645 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.268763779 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393379344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382391115 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201388794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066013617 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.394718475 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944894661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379523203 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38721781 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654266869 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382450688 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382021618 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659400559 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.37996211 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381731353 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636136422 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.051705221 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288149558 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.381673384 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39721136 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.381553671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375057482 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399946714 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374158443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376855052 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.868216781 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401334573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374835906 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386506857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.384521691 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389022838 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.379018034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37501179 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.383612966 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.385522053 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.363598107 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394227489 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525701284 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993728271 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404611452 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054225603 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.704891596 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632034922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385219923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.36723396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.382044754 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377605653 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376404301 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376062596 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373544624 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984820682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38939944 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.391154599 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381707859 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.378159164 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586757324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381536596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63969678 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392201887 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403515587 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.362530455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376295999 seconds)
  done (took 976.760644545 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425644095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.410829173 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.402384542 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.410716404 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384821858 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487359891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.454291861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.39410579 seconds)
  done (took 20.64344212 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.38445891 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.385984368 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.387798278 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.387690641 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.383668994 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.927507362 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.413828564 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.382734607 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.393360596 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.385049374 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.395698615 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.147620483 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.408379555 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.392772531 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.378171689 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.388233395 seconds)
  done (took 32.823138715 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.818311873 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.654371528 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.173882878 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.386961549 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.396900566 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.3821241 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.797972936 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.406422099 seconds)
  done (took 28.293787988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.386597045 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.388695811 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388883663 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388691768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.38948874 seconds)
  done (took 8.216503626 seconds)
done (took 1243.382045632 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.385081067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384063147 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.385003998 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385637282 seconds)
  done (took 6.815322968 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.367111206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.36688718 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.3661326 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.378653162 seconds)
  done (took 9.755224817 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.230083728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.137536725 seconds)
  done (took 5.643957219 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.894476148 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.898320688 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.897364643 seconds)
  done (took 6.967293633 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.679848588 seconds)
  done (took 2.956085133 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.312900839 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.381972021 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.089084489 seconds)
  done (took 8.059467855 seconds)
done (took 41.47267178 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391037238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.629763763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.533210849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390904232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.53636363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.532291892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.130315269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385644523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375838023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.376253767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413388283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.540135602 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.122648913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.629519211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.121628338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.627836981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.540014347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377011919 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384296767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376089621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.136888151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.377356903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381386957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.378502918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.559727507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.523355478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387943729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.629340234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386253314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391256805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524653192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377485326 seconds)
  done (took 82.745796335 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384865072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394690206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.379785158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398223952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399307766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3788132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410768432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.377866477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378705117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402047914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.398905177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.398476053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394294397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.379887963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397731195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.379857369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.3841272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.388678445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378772122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402275223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392236286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38890178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384348425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393458475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.378954588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.379106961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399375301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407841391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378457209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379829622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.381651538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404328845 seconds)
  done (took 77.757587795 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.383629117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.383033171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.396683888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381053885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405064363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402920711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.38056846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389786964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.381028052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386175587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380546263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400324194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.38831629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381239696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40187524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.382756237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.390929169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.390101177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399950051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400839333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382105109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397310089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39489737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.384841129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.387709329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407000765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.38294493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396788508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389333742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382033715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416009541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.385440839 seconds)
  done (took 77.795173275 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.706388798 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393712051 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396895871 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388190625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.394799427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393262842 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.38853945 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.710646935 seconds)
  done (took 15.054374947 seconds)
done (took 254.630471558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.386136818 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.972943627 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43496451 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.388283371 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407963311 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415575803 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.6425427 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43495595 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641058266 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.410340393 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405428955 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.392556465 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.318208571 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55355066 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.320503805 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.38923938 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.388031762 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.384382223 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.026758103 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.700611822 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414428451 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.386633444 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.330535195 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.414492286 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.375078223 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482141172 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504225086 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.634492882 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.566242145 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.48090977 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.981435739 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.390057517 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.389913826 seconds)
  done (took 65.64702157 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.390139323 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.395066395 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.396278612 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.395610877 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.394990895 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.396134235 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.390826407 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.397483025 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.398306893 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396312015 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.395899956 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398929303 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.398864632 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.395934009 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.395280964 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.385144881 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.39259684 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.397411617 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.392038423 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.386776522 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.396549282 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.397077778 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.398888189 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.395884671 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.397903363 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.397111911 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.39751783 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.399779568 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.398795345 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.396879821 seconds)
  done (took 43.153538943 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399043703 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051222588 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.221744881 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.4005877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395919452 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399273683 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.733776859 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.397213543 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.39830427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.397957107 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.938434611 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.40063404 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43314117 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.254563738 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.39696538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.397296636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398337006 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.395011064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.058325757 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.404371355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.759012196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400367219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.739554782 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.408548428 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.420024742 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.395289118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400225965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.281374581 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.420847792 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.942273918 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.332735808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.746780558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.209834093 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.257231064 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.331660462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.407247409 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39953864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958006333 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402633441 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.396393311 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.749146453 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40152953 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.259720777 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.109397195 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418415591 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400196985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.307787391 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.978255278 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698403327 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408666989 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.259642594 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404443981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402971529 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400114331 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.695621315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406040011 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.397038428 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.331468978 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.426130201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.741985747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403917466 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.398391686 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062558924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.398973812 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.058409382 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40037025 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.406284468 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.421547218 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.262642817 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406927074 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.124448 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.421027864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403149338 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.951372918 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.060257438 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.379587346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400102383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080301766 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280474184 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.777071817 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408367474 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.297845692 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.780155499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.409007147 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.405700696 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404575543 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.404049038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.473189103 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.750872654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.062558005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122677856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.346611306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.777807886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.411782055 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.400496482 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.334391578 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.428266205 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.40512049 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.253521681 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.129510163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.42312901 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.408725838 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.134794504 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.424059289 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.754842373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.413607145 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.266154589 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.408003257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474584456 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405954518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.409295586 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42710455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.753612312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410149056 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406299898 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.114221423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.991190124 seconds)
  done (took 199.699393598 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.398984854 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.396754922 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406889318 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.396584424 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.3968321 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.403704874 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.39623466 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.396814209 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.400920168 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.396742017 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.397420015 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40589159 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.403415885 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.396685502 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.397314657 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.397247912 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.398007341 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.403603596 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.397775368 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.397107883 seconds)
  done (took 45.27948223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408912491 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065260812 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.056475269 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412985356 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407484826 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.404060037 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.467172004 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.408113649 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.407457271 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.756583072 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.61369258 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.43443514 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.407844495 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.406276093 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.056198583 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.403108482 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.755978223 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065595319 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408735163 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067046297 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.397323187 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.409777332 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.403108105 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.064818844 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.779900925 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.762611354 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.47602758 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.10758342 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.413428971 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.408338674 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.099050367 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.421572156 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.407415973 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.09380584 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.434796082 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42285328 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.409137676 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.472962591 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.47632764 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.760311653 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109550123 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.766414627 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425753594 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.611154691 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.412291546 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398457919 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.105745879 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.434700809 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398951917 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.412243483 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.418598536 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.072092322 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.433598736 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.071131608 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.436741664 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.412082287 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.095851411 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.0754961 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.090922753 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615925678 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.427826138 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.758251357 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.415753857 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.109370237 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.436294505 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.410293669 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411716697 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.6148092 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125704102 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.766498869 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.767562861 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.76309899 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.413171597 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482248213 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.433299101 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.76441551 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480998724 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.873127828 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.780465782 seconds)
  done (took 130.965277586 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712466831 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.534356999 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.851310978 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.049975825 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.961310043 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.55323186 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.534392672 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.701254519 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.416551878 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.498353023 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.154425805 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541467607 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.188201402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509921177 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.522432272 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576543083 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.855735725 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.423844025 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.118935638 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.126380167 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.424420616 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522201733 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.962056964 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.625514045 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.404813028 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.002926675 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.427034342 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.995588814 seconds)
  done (took 54.495355056 seconds)
done (took 540.52286571 seconds)
SAVING RESULT...
DONE!
